// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef DICTIONARY_RP210_HXX
#define DICTIONARY_RP210_HXX

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/config.hxx>

#if (XSD_INT_VERSION != 3030000L)
#error XSD runtime version mismatch
#endif

#include <xsd/cxx/pre.hxx>

#ifndef XSD_USE_CHAR
#define XSD_USE_CHAR
#endif

#ifndef XSD_CXX_TREE_USE_CHAR
#define XSD_CXX_TREE_USE_CHAR
#endif

#include <xsd/cxx/xml/char-utf8.hxx>

#include <xsd/cxx/tree/exceptions.hxx>
#include <xsd/cxx/tree/elements.hxx>
#include <xsd/cxx/tree/types.hxx>

#include <xsd/cxx/xml/error-handler.hxx>

#include <xsd/cxx/xml/dom/auto-ptr.hxx>

#include <xsd/cxx/tree/parsing.hxx>
#include <xsd/cxx/tree/parsing/byte.hxx>
#include <xsd/cxx/tree/parsing/unsigned-byte.hxx>
#include <xsd/cxx/tree/parsing/short.hxx>
#include <xsd/cxx/tree/parsing/unsigned-short.hxx>
#include <xsd/cxx/tree/parsing/int.hxx>
#include <xsd/cxx/tree/parsing/unsigned-int.hxx>
#include <xsd/cxx/tree/parsing/long.hxx>
#include <xsd/cxx/tree/parsing/unsigned-long.hxx>
#include <xsd/cxx/tree/parsing/boolean.hxx>
#include <xsd/cxx/tree/parsing/float.hxx>
#include <xsd/cxx/tree/parsing/double.hxx>
#include <xsd/cxx/tree/parsing/decimal.hxx>

#include <xsd/cxx/xml/dom/serialization-header.hxx>
#include <xsd/cxx/tree/serialization.hxx>
#include <xsd/cxx/tree/serialization/byte.hxx>
#include <xsd/cxx/tree/serialization/unsigned-byte.hxx>
#include <xsd/cxx/tree/serialization/short.hxx>
#include <xsd/cxx/tree/serialization/unsigned-short.hxx>
#include <xsd/cxx/tree/serialization/int.hxx>
#include <xsd/cxx/tree/serialization/unsigned-int.hxx>
#include <xsd/cxx/tree/serialization/long.hxx>
#include <xsd/cxx/tree/serialization/unsigned-long.hxx>
#include <xsd/cxx/tree/serialization/boolean.hxx>
#include <xsd/cxx/tree/serialization/float.hxx>
#include <xsd/cxx/tree/serialization/double.hxx>
#include <xsd/cxx/tree/serialization/decimal.hxx>

namespace xml_schema
{
  // anyType and anySimpleType.
  //
  typedef ::xsd::cxx::tree::type type;
  typedef ::xsd::cxx::tree::simple_type< type > simple_type;
  typedef ::xsd::cxx::tree::type container;

  // 8-bit
  //
  typedef signed char byte;
  typedef unsigned char unsigned_byte;

  // 16-bit
  //
  typedef short short_;
  typedef unsigned short unsigned_short;

  // 32-bit
  //
  typedef int int_;
  typedef unsigned int unsigned_int;

  // 64-bit
  //
  typedef long long long_;
  typedef unsigned long long unsigned_long;

  // Supposed to be arbitrary-length integral types.
  //
  typedef long long integer;
  typedef long long non_positive_integer;
  typedef unsigned long long non_negative_integer;
  typedef unsigned long long positive_integer;
  typedef long long negative_integer;

  // Boolean.
  //
  typedef bool boolean;

  // Floating-point types.
  //
  typedef float float_;
  typedef double double_;
  typedef double decimal;

  // String types.
  //
  typedef ::xsd::cxx::tree::string< char, simple_type > string;
  typedef ::xsd::cxx::tree::normalized_string< char, string > normalized_string;
  typedef ::xsd::cxx::tree::token< char, normalized_string > token;
  typedef ::xsd::cxx::tree::name< char, token > name;
  typedef ::xsd::cxx::tree::nmtoken< char, token > nmtoken;
  typedef ::xsd::cxx::tree::nmtokens< char, simple_type, nmtoken > nmtokens;
  typedef ::xsd::cxx::tree::ncname< char, name > ncname;
  typedef ::xsd::cxx::tree::language< char, token > language;

  // ID/IDREF.
  //
  typedef ::xsd::cxx::tree::id< char, ncname > id;
  typedef ::xsd::cxx::tree::idref< char, ncname, type > idref;
  typedef ::xsd::cxx::tree::idrefs< char, simple_type, idref > idrefs;

  // URI.
  //
  typedef ::xsd::cxx::tree::uri< char, simple_type > uri;

  // Qualified name.
  //
  typedef ::xsd::cxx::tree::qname< char, simple_type, uri, ncname > qname;

  // Binary.
  //
  typedef ::xsd::cxx::tree::buffer< char > buffer;
  typedef ::xsd::cxx::tree::base64_binary< char, simple_type > base64_binary;
  typedef ::xsd::cxx::tree::hex_binary< char, simple_type > hex_binary;

  // Date/time.
  //
  typedef ::xsd::cxx::tree::time_zone time_zone;
  typedef ::xsd::cxx::tree::date< char, simple_type > date;
  typedef ::xsd::cxx::tree::date_time< char, simple_type > date_time;
  typedef ::xsd::cxx::tree::duration< char, simple_type > duration;
  typedef ::xsd::cxx::tree::gday< char, simple_type > gday;
  typedef ::xsd::cxx::tree::gmonth< char, simple_type > gmonth;
  typedef ::xsd::cxx::tree::gmonth_day< char, simple_type > gmonth_day;
  typedef ::xsd::cxx::tree::gyear< char, simple_type > gyear;
  typedef ::xsd::cxx::tree::gyear_month< char, simple_type > gyear_month;
  typedef ::xsd::cxx::tree::time< char, simple_type > time;

  // Entity.
  //
  typedef ::xsd::cxx::tree::entity< char, ncname > entity;
  typedef ::xsd::cxx::tree::entities< char, simple_type, entity > entities;

  // Namespace information and list stream. Used in
  // serialization functions.
  //
  typedef ::xsd::cxx::xml::dom::namespace_info< char > namespace_info;
  typedef ::xsd::cxx::xml::dom::namespace_infomap< char > namespace_infomap;
  typedef ::xsd::cxx::tree::list_stream< char > list_stream;
  typedef ::xsd::cxx::tree::as_double< double_ > as_double;
  typedef ::xsd::cxx::tree::as_decimal< decimal > as_decimal;
  typedef ::xsd::cxx::tree::facet facet;

  // Flags and properties.
  //
  typedef ::xsd::cxx::tree::flags flags;
  typedef ::xsd::cxx::tree::properties< char > properties;

  // Parsing/serialization diagnostics.
  //
  typedef ::xsd::cxx::tree::severity severity;
  typedef ::xsd::cxx::tree::error< char > error;
  typedef ::xsd::cxx::tree::diagnostics< char > diagnostics;

  // Exceptions.
  //
  typedef ::xsd::cxx::tree::exception< char > exception;
  typedef ::xsd::cxx::tree::bounds< char > bounds;
  typedef ::xsd::cxx::tree::duplicate_id< char > duplicate_id;
  typedef ::xsd::cxx::tree::parsing< char > parsing;
  typedef ::xsd::cxx::tree::expected_element< char > expected_element;
  typedef ::xsd::cxx::tree::unexpected_element< char > unexpected_element;
  typedef ::xsd::cxx::tree::expected_attribute< char > expected_attribute;
  typedef ::xsd::cxx::tree::unexpected_enumerator< char > unexpected_enumerator;
  typedef ::xsd::cxx::tree::expected_text_content< char > expected_text_content;
  typedef ::xsd::cxx::tree::no_prefix_mapping< char > no_prefix_mapping;
  typedef ::xsd::cxx::tree::serialization< char > serialization;

  // Error handler callback interface.
  //
  typedef ::xsd::cxx::xml::error_handler< char > error_handler;

  // DOM interaction.
  //
  namespace dom
  {
    // Automatic pointer for DOMDocument.
    //
    using ::xsd::cxx::xml::dom::auto_ptr;

#ifndef XSD_CXX_TREE_TREE_NODE_KEY__XML_SCHEMA
#define XSD_CXX_TREE_TREE_NODE_KEY__XML_SCHEMA
    // DOM user data key for back pointers to tree nodes.
    //
    const XMLCh* const tree_node_key = ::xsd::cxx::tree::user_data_keys::node;
#endif
  }
}

// Forward declarations.
//
namespace properties
{
  namespace S335M
  {
    class DeltaEntryType;
    class IndexEntryType;
    class EssenceContainers;
    class DescriptiveSchemes;
    class DescriptiveClipDescribedTrackIDs;
    class DescribedTrackIDs;
    class ShotTrackIDs;
    class VideoLineMap;
    class ElectrospatialFormulation;
    class ChannelStatusMode;
    class FixedChannelStatusData;
    class UserDataMode;
    class FixedUserData;
    class SliceOffset;
    class PositionTable;
    class DeltaEntryArray;
    class IndexEntryArray;
    class DescriptiveFrameworkObject;
    class EssenceDataObjects;
    class Packages;
    class PrimaryPackage;
    class PackageTracks;
    class ComponentObjects;
    class TrackSegment;
    class ContentStorageObject;
    class EssenceDescription;
    class Locators;
    class IdentificationList;
    class FileDescriptors;
    class UnknownBWFChunks;
    class PictureFormatObject;
    class ProjectObject;
    class GroupRelationshipObjects;
    class ProcessingObject;
    class ContactsListObject;
    class AnnotationCueWordsObject;
    class ShotCueWordsObject;
    class AwardParticipants;
    class ContractParticipants;
    class Persons;
    class ParticipantOrganizations;
    class AddressNameValueObjects;
    class PersonOrganizations;
    class Locations;
    class TitlesObjects;
    class IdentificationObjects;
    class BrandingObjects;
    class EventObjects;
    class EventAnnotationObjects;
    class AnnotationParticipants;
    class ScriptingLocators;
    class PublicationObjects;
    class AwardObjects;
    class CaptionsDescriptionObjects;
    class AnnotationObjects;
    class ProductionSettingPeriodObjects;
    class SceneSettingPeriodObjects;
    class ScriptingObjects;
    class ClassificationObjects;
    class SceneShotObjects;
    class ClipShotObjects;
    class KeypointObjects;
    class ParticipantObjects;
    class PersonObjects;
    class OrganizationObjects;
    class LocationObjects;
    class AddressObjects;
    class CommunicationsObjects;
    class ContractObjects;
    class RightsObjects;
    class DeviceParametersObjects;
    class ClassificationNameValueObjects;
    class ContactNameValueObjects;
    class DeviceParametersNameValueObjects;
    class MetadataServerLocators;
    class RelatedMaterialLocators;
    class ChannelIDs;
    class MonoSourceTrackIDs;
    class SubDescriptors;
    class PictureComponentSizing;
    class CryptographicContextObject;
  }
}


#include <memory>    // std::auto_ptr
#include <limits>    // std::numeric_limits
#include <algorithm> // std::binary_search

#include <xsd/cxx/xml/char-utf8.hxx>

#include <xsd/cxx/tree/exceptions.hxx>
#include <xsd/cxx/tree/elements.hxx>
#include <xsd/cxx/tree/containers.hxx>
#include <xsd/cxx/tree/list.hxx>

#include <xsd/cxx/xml/dom/parsing-header.hxx>

#include "dataTypes/s377m_types.hxx"

#include "dataTypes/s422m_types.hxx"

#include "groups/s377m_metadata.hxx"

#include "groups/s381m_metadata.hxx"

#include "groups/s385m_metadata.hxx"

#include "groups/s380m_metadata.hxx"

#include "groups/s422m_metadata.hxx"

#include "groups/s429-6_metadata.hxx"

namespace properties
{
  namespace S335M
  {
    class DeltaEntryType: public ::xml_schema::type
    {
      public:
      // PositionTableIndex
      // 
      typedef ::st434::s377m::types::Int8 PositionTableIndex_type;
      typedef ::xsd::cxx::tree::traits< PositionTableIndex_type, char > PositionTableIndex_traits;

      const PositionTableIndex_type&
      PositionTableIndex () const;

      PositionTableIndex_type&
      PositionTableIndex ();

      void
      PositionTableIndex (const PositionTableIndex_type& x);

      void
      PositionTableIndex (::std::auto_ptr< PositionTableIndex_type > p);

      // Slice
      // 
      typedef ::st434::s377m::types::UInt8 Slice_type;
      typedef ::xsd::cxx::tree::traits< Slice_type, char > Slice_traits;

      const Slice_type&
      Slice () const;

      Slice_type&
      Slice ();

      void
      Slice (const Slice_type& x);

      void
      Slice (::std::auto_ptr< Slice_type > p);

      // ElementDelta
      // 
      typedef ::st434::s377m::types::UInt32 ElementDelta_type;
      typedef ::xsd::cxx::tree::traits< ElementDelta_type, char > ElementDelta_traits;

      const ElementDelta_type&
      ElementDelta () const;

      ElementDelta_type&
      ElementDelta ();

      void
      ElementDelta (const ElementDelta_type& x);

      void
      ElementDelta (::std::auto_ptr< ElementDelta_type > p);

      // Constructors.
      //
      DeltaEntryType (const PositionTableIndex_type&,
                      const Slice_type&,
                      const ElementDelta_type&);

      DeltaEntryType (const ::xercesc::DOMElement& e,
                      ::xml_schema::flags f = 0,
                      ::xml_schema::container* c = 0);

      DeltaEntryType (const DeltaEntryType& x,
                      ::xml_schema::flags f = 0,
                      ::xml_schema::container* c = 0);

      virtual DeltaEntryType*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~DeltaEntryType ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      ::xsd::cxx::tree::one< PositionTableIndex_type > PositionTableIndex_;
      ::xsd::cxx::tree::one< Slice_type > Slice_;
      ::xsd::cxx::tree::one< ElementDelta_type > ElementDelta_;
    };

    class IndexEntryType: public ::xml_schema::type
    {
      public:
      // TemporalOffset
      // 
      typedef ::st434::s377m::types::Int8 TemporalOffset_type;
      typedef ::xsd::cxx::tree::traits< TemporalOffset_type, char > TemporalOffset_traits;

      const TemporalOffset_type&
      TemporalOffset () const;

      TemporalOffset_type&
      TemporalOffset ();

      void
      TemporalOffset (const TemporalOffset_type& x);

      void
      TemporalOffset (::std::auto_ptr< TemporalOffset_type > p);

      // KeyFrameOffset
      // 
      typedef ::st434::s377m::types::Int8 KeyFrameOffset_type;
      typedef ::xsd::cxx::tree::traits< KeyFrameOffset_type, char > KeyFrameOffset_traits;

      const KeyFrameOffset_type&
      KeyFrameOffset () const;

      KeyFrameOffset_type&
      KeyFrameOffset ();

      void
      KeyFrameOffset (const KeyFrameOffset_type& x);

      void
      KeyFrameOffset (::std::auto_ptr< KeyFrameOffset_type > p);

      // Flags
      // 
      typedef ::st434::s377m::types::UInt8 Flags_type;
      typedef ::xsd::cxx::tree::traits< Flags_type, char > Flags_traits;

      const Flags_type&
      Flags () const;

      Flags_type&
      Flags ();

      void
      Flags (const Flags_type& x);

      void
      Flags (::std::auto_ptr< Flags_type > p);

      // StreamOffset
      // 
      typedef ::st434::s377m::types::UInt64 StreamOffset_type;
      typedef ::xsd::cxx::tree::traits< StreamOffset_type, char > StreamOffset_traits;

      const StreamOffset_type&
      StreamOffset () const;

      StreamOffset_type&
      StreamOffset ();

      void
      StreamOffset (const StreamOffset_type& x);

      void
      StreamOffset (::std::auto_ptr< StreamOffset_type > p);

      // SliceOffset
      // 
      typedef ::properties::S335M::SliceOffset SliceOffset_type;
      typedef ::xsd::cxx::tree::optional< SliceOffset_type > SliceOffset_optional;
      typedef ::xsd::cxx::tree::traits< SliceOffset_type, char > SliceOffset_traits;

      const SliceOffset_optional&
      SliceOffset () const;

      SliceOffset_optional&
      SliceOffset ();

      void
      SliceOffset (const SliceOffset_type& x);

      void
      SliceOffset (const SliceOffset_optional& x);

      void
      SliceOffset (::std::auto_ptr< SliceOffset_type > p);

      // PositionTable
      // 
      typedef ::properties::S335M::PositionTable PositionTable_type;
      typedef ::xsd::cxx::tree::optional< PositionTable_type > PositionTable_optional;
      typedef ::xsd::cxx::tree::traits< PositionTable_type, char > PositionTable_traits;

      const PositionTable_optional&
      PositionTable () const;

      PositionTable_optional&
      PositionTable ();

      void
      PositionTable (const PositionTable_type& x);

      void
      PositionTable (const PositionTable_optional& x);

      void
      PositionTable (::std::auto_ptr< PositionTable_type > p);

      // Constructors.
      //
      IndexEntryType (const TemporalOffset_type&,
                      const KeyFrameOffset_type&,
                      const Flags_type&,
                      const StreamOffset_type&);

      IndexEntryType (const ::xercesc::DOMElement& e,
                      ::xml_schema::flags f = 0,
                      ::xml_schema::container* c = 0);

      IndexEntryType (const IndexEntryType& x,
                      ::xml_schema::flags f = 0,
                      ::xml_schema::container* c = 0);

      virtual IndexEntryType*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~IndexEntryType ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      ::xsd::cxx::tree::one< TemporalOffset_type > TemporalOffset_;
      ::xsd::cxx::tree::one< KeyFrameOffset_type > KeyFrameOffset_;
      ::xsd::cxx::tree::one< Flags_type > Flags_;
      ::xsd::cxx::tree::one< StreamOffset_type > StreamOffset_;
      SliceOffset_optional SliceOffset_;
      PositionTable_optional PositionTable_;
    };

    class EssenceContainers: public ::st434::s377m::types::Batch
    {
      public:
      // Element
      // 
      typedef ::st434::s377m::types::UL Element_type;
      typedef ::xsd::cxx::tree::sequence< Element_type > Element_sequence;
      typedef Element_sequence::iterator Element_iterator;
      typedef Element_sequence::const_iterator Element_const_iterator;
      typedef ::xsd::cxx::tree::traits< Element_type, char > Element_traits;

      const Element_sequence&
      Element () const;

      Element_sequence&
      Element ();

      void
      Element (const Element_sequence& s);

      // Constructors.
      //
      EssenceContainers ();

      EssenceContainers (const ::xercesc::DOMElement& e,
                         ::xml_schema::flags f = 0,
                         ::xml_schema::container* c = 0);

      EssenceContainers (const EssenceContainers& x,
                         ::xml_schema::flags f = 0,
                         ::xml_schema::container* c = 0);

      virtual EssenceContainers*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~EssenceContainers ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Element_sequence Element_;
    };

    class DescriptiveSchemes: public ::st434::s377m::types::Batch
    {
      public:
      // Element
      // 
      typedef ::st434::s377m::types::UL Element_type;
      typedef ::xsd::cxx::tree::sequence< Element_type > Element_sequence;
      typedef Element_sequence::iterator Element_iterator;
      typedef Element_sequence::const_iterator Element_const_iterator;
      typedef ::xsd::cxx::tree::traits< Element_type, char > Element_traits;

      const Element_sequence&
      Element () const;

      Element_sequence&
      Element ();

      void
      Element (const Element_sequence& s);

      // Constructors.
      //
      DescriptiveSchemes ();

      DescriptiveSchemes (const ::xercesc::DOMElement& e,
                          ::xml_schema::flags f = 0,
                          ::xml_schema::container* c = 0);

      DescriptiveSchemes (const DescriptiveSchemes& x,
                          ::xml_schema::flags f = 0,
                          ::xml_schema::container* c = 0);

      virtual DescriptiveSchemes*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~DescriptiveSchemes ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Element_sequence Element_;
    };

    class DescriptiveClipDescribedTrackIDs: public ::st434::s377m::types::Batch
    {
      public:
      // Element
      // 
      typedef ::st434::s377m::types::UInt32 Element_type;
      typedef ::xsd::cxx::tree::sequence< Element_type > Element_sequence;
      typedef Element_sequence::iterator Element_iterator;
      typedef Element_sequence::const_iterator Element_const_iterator;
      typedef ::xsd::cxx::tree::traits< Element_type, char > Element_traits;

      const Element_sequence&
      Element () const;

      Element_sequence&
      Element ();

      void
      Element (const Element_sequence& s);

      // Constructors.
      //
      DescriptiveClipDescribedTrackIDs ();

      DescriptiveClipDescribedTrackIDs (const ::xercesc::DOMElement& e,
                                        ::xml_schema::flags f = 0,
                                        ::xml_schema::container* c = 0);

      DescriptiveClipDescribedTrackIDs (const DescriptiveClipDescribedTrackIDs& x,
                                        ::xml_schema::flags f = 0,
                                        ::xml_schema::container* c = 0);

      virtual DescriptiveClipDescribedTrackIDs*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~DescriptiveClipDescribedTrackIDs ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Element_sequence Element_;
    };

    class DescribedTrackIDs: public ::st434::s377m::types::Batch
    {
      public:
      // Element
      // 
      typedef ::st434::s377m::types::UInt32 Element_type;
      typedef ::xsd::cxx::tree::sequence< Element_type > Element_sequence;
      typedef Element_sequence::iterator Element_iterator;
      typedef Element_sequence::const_iterator Element_const_iterator;
      typedef ::xsd::cxx::tree::traits< Element_type, char > Element_traits;

      const Element_sequence&
      Element () const;

      Element_sequence&
      Element ();

      void
      Element (const Element_sequence& s);

      // Constructors.
      //
      DescribedTrackIDs ();

      DescribedTrackIDs (const ::xercesc::DOMElement& e,
                         ::xml_schema::flags f = 0,
                         ::xml_schema::container* c = 0);

      DescribedTrackIDs (const DescribedTrackIDs& x,
                         ::xml_schema::flags f = 0,
                         ::xml_schema::container* c = 0);

      virtual DescribedTrackIDs*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~DescribedTrackIDs ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Element_sequence Element_;
    };

    class ShotTrackIDs: public ::st434::s377m::types::Batch
    {
      public:
      // Element
      // 
      typedef ::st434::s377m::types::UInt32 Element_type;
      typedef ::xsd::cxx::tree::sequence< Element_type > Element_sequence;
      typedef Element_sequence::iterator Element_iterator;
      typedef Element_sequence::const_iterator Element_const_iterator;
      typedef ::xsd::cxx::tree::traits< Element_type, char > Element_traits;

      const Element_sequence&
      Element () const;

      Element_sequence&
      Element ();

      void
      Element (const Element_sequence& s);

      // Constructors.
      //
      ShotTrackIDs ();

      ShotTrackIDs (const ::xercesc::DOMElement& e,
                    ::xml_schema::flags f = 0,
                    ::xml_schema::container* c = 0);

      ShotTrackIDs (const ShotTrackIDs& x,
                    ::xml_schema::flags f = 0,
                    ::xml_schema::container* c = 0);

      virtual ShotTrackIDs*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~ShotTrackIDs ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Element_sequence Element_;
    };

    class VideoLineMap: public ::st434::s377m::types::Array
    {
      public:
      // Element
      // 
      typedef ::st434::s377m::types::Int32 Element_type;
      typedef ::xsd::cxx::tree::sequence< Element_type > Element_sequence;
      typedef Element_sequence::iterator Element_iterator;
      typedef Element_sequence::const_iterator Element_const_iterator;
      typedef ::xsd::cxx::tree::traits< Element_type, char > Element_traits;

      const Element_sequence&
      Element () const;

      Element_sequence&
      Element ();

      void
      Element (const Element_sequence& s);

      // Constructors.
      //
      VideoLineMap ();

      VideoLineMap (const ::xercesc::DOMElement& e,
                    ::xml_schema::flags f = 0,
                    ::xml_schema::container* c = 0);

      VideoLineMap (const VideoLineMap& x,
                    ::xml_schema::flags f = 0,
                    ::xml_schema::container* c = 0);

      virtual VideoLineMap*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~VideoLineMap ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Element_sequence Element_;
    };

    class ElectrospatialFormulation: public ::st434::s377m::types::UInt8
    {
      public:
      ElectrospatialFormulation (::xml_schema::unsigned_byte v);

      ElectrospatialFormulation (const ::st434::s377m::types::UInt8& v);

      ElectrospatialFormulation (const ::xercesc::DOMElement& e,
                                 ::xml_schema::flags f = 0,
                                 ::xml_schema::container* c = 0);

      ElectrospatialFormulation (const ::xercesc::DOMAttr& a,
                                 ::xml_schema::flags f = 0,
                                 ::xml_schema::container* c = 0);

      ElectrospatialFormulation (const ::std::string& s,
                                 const ::xercesc::DOMElement* e,
                                 ::xml_schema::flags f = 0,
                                 ::xml_schema::container* c = 0);

      ElectrospatialFormulation (const ElectrospatialFormulation& x,
                                 ::xml_schema::flags f = 0,
                                 ::xml_schema::container* c = 0);

      virtual ElectrospatialFormulation*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;
    };

    class ChannelStatusMode: public ::st434::s377m::types::Array
    {
      public:
      // Element
      // 
      typedef ::st434::s377m::types::UInt8 Element_type;
      typedef ::xsd::cxx::tree::sequence< Element_type > Element_sequence;
      typedef Element_sequence::iterator Element_iterator;
      typedef Element_sequence::const_iterator Element_const_iterator;
      typedef ::xsd::cxx::tree::traits< Element_type, char > Element_traits;

      const Element_sequence&
      Element () const;

      Element_sequence&
      Element ();

      void
      Element (const Element_sequence& s);

      static Element_type
      Element_default_value ();

      // Constructors.
      //
      ChannelStatusMode ();

      ChannelStatusMode (const ::xercesc::DOMElement& e,
                         ::xml_schema::flags f = 0,
                         ::xml_schema::container* c = 0);

      ChannelStatusMode (const ChannelStatusMode& x,
                         ::xml_schema::flags f = 0,
                         ::xml_schema::container* c = 0);

      virtual ChannelStatusMode*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~ChannelStatusMode ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Element_sequence Element_;
    };

    class FixedChannelStatusData: public ::st434::s377m::types::Array
    {
      public:
      // Element
      // 
      typedef ::st434::s377m::types::DataStream Element_type;
      typedef ::xsd::cxx::tree::sequence< Element_type > Element_sequence;
      typedef Element_sequence::iterator Element_iterator;
      typedef Element_sequence::const_iterator Element_const_iterator;
      typedef ::xsd::cxx::tree::traits< Element_type, char > Element_traits;

      const Element_sequence&
      Element () const;

      Element_sequence&
      Element ();

      void
      Element (const Element_sequence& s);

      // Constructors.
      //
      FixedChannelStatusData ();

      FixedChannelStatusData (const ::xercesc::DOMElement& e,
                              ::xml_schema::flags f = 0,
                              ::xml_schema::container* c = 0);

      FixedChannelStatusData (const FixedChannelStatusData& x,
                              ::xml_schema::flags f = 0,
                              ::xml_schema::container* c = 0);

      virtual FixedChannelStatusData*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~FixedChannelStatusData ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Element_sequence Element_;
    };

    class UserDataMode: public ::st434::s377m::types::Array
    {
      public:
      // Element
      // 
      typedef ::st434::s377m::types::UInt8 Element_type;
      typedef ::xsd::cxx::tree::sequence< Element_type > Element_sequence;
      typedef Element_sequence::iterator Element_iterator;
      typedef Element_sequence::const_iterator Element_const_iterator;
      typedef ::xsd::cxx::tree::traits< Element_type, char > Element_traits;

      const Element_sequence&
      Element () const;

      Element_sequence&
      Element ();

      void
      Element (const Element_sequence& s);

      static Element_type
      Element_default_value ();

      // Constructors.
      //
      UserDataMode ();

      UserDataMode (const ::xercesc::DOMElement& e,
                    ::xml_schema::flags f = 0,
                    ::xml_schema::container* c = 0);

      UserDataMode (const UserDataMode& x,
                    ::xml_schema::flags f = 0,
                    ::xml_schema::container* c = 0);

      virtual UserDataMode*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~UserDataMode ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Element_sequence Element_;
    };

    class FixedUserData: public ::st434::s377m::types::Array
    {
      public:
      // Element
      // 
      typedef ::st434::s377m::types::DataStream Element_type;
      typedef ::xsd::cxx::tree::sequence< Element_type > Element_sequence;
      typedef Element_sequence::iterator Element_iterator;
      typedef Element_sequence::const_iterator Element_const_iterator;
      typedef ::xsd::cxx::tree::traits< Element_type, char > Element_traits;

      const Element_sequence&
      Element () const;

      Element_sequence&
      Element ();

      void
      Element (const Element_sequence& s);

      // Constructors.
      //
      FixedUserData ();

      FixedUserData (const ::xercesc::DOMElement& e,
                     ::xml_schema::flags f = 0,
                     ::xml_schema::container* c = 0);

      FixedUserData (const FixedUserData& x,
                     ::xml_schema::flags f = 0,
                     ::xml_schema::container* c = 0);

      virtual FixedUserData*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~FixedUserData ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Element_sequence Element_;
    };

    class SliceOffset: public ::st434::s377m::types::Array
    {
      public:
      // Element
      // 
      typedef ::st434::s377m::types::UInt32 Element_type;
      typedef ::xsd::cxx::tree::sequence< Element_type > Element_sequence;
      typedef Element_sequence::iterator Element_iterator;
      typedef Element_sequence::const_iterator Element_const_iterator;
      typedef ::xsd::cxx::tree::traits< Element_type, char > Element_traits;

      const Element_sequence&
      Element () const;

      Element_sequence&
      Element ();

      void
      Element (const Element_sequence& s);

      // Constructors.
      //
      SliceOffset ();

      SliceOffset (const ::xercesc::DOMElement& e,
                   ::xml_schema::flags f = 0,
                   ::xml_schema::container* c = 0);

      SliceOffset (const SliceOffset& x,
                   ::xml_schema::flags f = 0,
                   ::xml_schema::container* c = 0);

      virtual SliceOffset*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~SliceOffset ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Element_sequence Element_;
    };

    class PositionTable: public ::st434::s377m::types::Array
    {
      public:
      // Element
      // 
      typedef ::st434::s377m::types::Rational Element_type;
      typedef ::xsd::cxx::tree::sequence< Element_type > Element_sequence;
      typedef Element_sequence::iterator Element_iterator;
      typedef Element_sequence::const_iterator Element_const_iterator;
      typedef ::xsd::cxx::tree::traits< Element_type, char > Element_traits;

      const Element_sequence&
      Element () const;

      Element_sequence&
      Element ();

      void
      Element (const Element_sequence& s);

      // Constructors.
      //
      PositionTable ();

      PositionTable (const ::xercesc::DOMElement& e,
                     ::xml_schema::flags f = 0,
                     ::xml_schema::container* c = 0);

      PositionTable (const PositionTable& x,
                     ::xml_schema::flags f = 0,
                     ::xml_schema::container* c = 0);

      virtual PositionTable*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~PositionTable ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Element_sequence Element_;
    };

    class DeltaEntryArray: public ::st434::s377m::types::Array
    {
      public:
      // Element
      // 
      typedef ::properties::S335M::DeltaEntryType Element_type;
      typedef ::xsd::cxx::tree::sequence< Element_type > Element_sequence;
      typedef Element_sequence::iterator Element_iterator;
      typedef Element_sequence::const_iterator Element_const_iterator;
      typedef ::xsd::cxx::tree::traits< Element_type, char > Element_traits;

      const Element_sequence&
      Element () const;

      Element_sequence&
      Element ();

      void
      Element (const Element_sequence& s);

      // Constructors.
      //
      DeltaEntryArray ();

      DeltaEntryArray (const ::xercesc::DOMElement& e,
                       ::xml_schema::flags f = 0,
                       ::xml_schema::container* c = 0);

      DeltaEntryArray (const DeltaEntryArray& x,
                       ::xml_schema::flags f = 0,
                       ::xml_schema::container* c = 0);

      virtual DeltaEntryArray*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~DeltaEntryArray ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Element_sequence Element_;
    };

    class IndexEntryArray: public ::st434::s377m::types::Array
    {
      public:
      // Element
      // 
      typedef ::properties::S335M::IndexEntryType Element_type;
      typedef ::xsd::cxx::tree::sequence< Element_type > Element_sequence;
      typedef Element_sequence::iterator Element_iterator;
      typedef Element_sequence::const_iterator Element_const_iterator;
      typedef ::xsd::cxx::tree::traits< Element_type, char > Element_traits;

      const Element_sequence&
      Element () const;

      Element_sequence&
      Element ();

      void
      Element (const Element_sequence& s);

      // Constructors.
      //
      IndexEntryArray ();

      IndexEntryArray (const ::xercesc::DOMElement& e,
                       ::xml_schema::flags f = 0,
                       ::xml_schema::container* c = 0);

      IndexEntryArray (const IndexEntryArray& x,
                       ::xml_schema::flags f = 0,
                       ::xml_schema::container* c = 0);

      virtual IndexEntryArray*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~IndexEntryArray ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Element_sequence Element_;
    };

    class DescriptiveFrameworkObject: public ::st434::s377m::types::StrongRefHolder
    {
      public:
      // ProductionFramework
      // 
      typedef ::st434::s380m::groups::ProductionFrameworkType ProductionFramework_type;
      typedef ::xsd::cxx::tree::optional< ProductionFramework_type > ProductionFramework_optional;
      typedef ::xsd::cxx::tree::traits< ProductionFramework_type, char > ProductionFramework_traits;

      const ProductionFramework_optional&
      ProductionFramework () const;

      ProductionFramework_optional&
      ProductionFramework ();

      void
      ProductionFramework (const ProductionFramework_type& x);

      void
      ProductionFramework (const ProductionFramework_optional& x);

      void
      ProductionFramework (::std::auto_ptr< ProductionFramework_type > p);

      // ProductionFramework_REF
      // 
      typedef ::st434::s377m::types::Ref ProductionFramework_REF_type;
      typedef ::xsd::cxx::tree::optional< ProductionFramework_REF_type > ProductionFramework_REF_optional;
      typedef ::xsd::cxx::tree::traits< ProductionFramework_REF_type, char > ProductionFramework_REF_traits;

      const ProductionFramework_REF_optional&
      ProductionFramework_REF () const;

      ProductionFramework_REF_optional&
      ProductionFramework_REF ();

      void
      ProductionFramework_REF (const ProductionFramework_REF_type& x);

      void
      ProductionFramework_REF (const ProductionFramework_REF_optional& x);

      void
      ProductionFramework_REF (::std::auto_ptr< ProductionFramework_REF_type > p);

      // ClipFramework
      // 
      typedef ::st434::s380m::groups::ClipFrameworkType ClipFramework_type;
      typedef ::xsd::cxx::tree::optional< ClipFramework_type > ClipFramework_optional;
      typedef ::xsd::cxx::tree::traits< ClipFramework_type, char > ClipFramework_traits;

      const ClipFramework_optional&
      ClipFramework () const;

      ClipFramework_optional&
      ClipFramework ();

      void
      ClipFramework (const ClipFramework_type& x);

      void
      ClipFramework (const ClipFramework_optional& x);

      void
      ClipFramework (::std::auto_ptr< ClipFramework_type > p);

      // ClipFramework_REF
      // 
      typedef ::st434::s377m::types::Ref ClipFramework_REF_type;
      typedef ::xsd::cxx::tree::optional< ClipFramework_REF_type > ClipFramework_REF_optional;
      typedef ::xsd::cxx::tree::traits< ClipFramework_REF_type, char > ClipFramework_REF_traits;

      const ClipFramework_REF_optional&
      ClipFramework_REF () const;

      ClipFramework_REF_optional&
      ClipFramework_REF ();

      void
      ClipFramework_REF (const ClipFramework_REF_type& x);

      void
      ClipFramework_REF (const ClipFramework_REF_optional& x);

      void
      ClipFramework_REF (::std::auto_ptr< ClipFramework_REF_type > p);

      // SceneFramework
      // 
      typedef ::st434::s380m::groups::SceneFrameworkType SceneFramework_type;
      typedef ::xsd::cxx::tree::optional< SceneFramework_type > SceneFramework_optional;
      typedef ::xsd::cxx::tree::traits< SceneFramework_type, char > SceneFramework_traits;

      const SceneFramework_optional&
      SceneFramework () const;

      SceneFramework_optional&
      SceneFramework ();

      void
      SceneFramework (const SceneFramework_type& x);

      void
      SceneFramework (const SceneFramework_optional& x);

      void
      SceneFramework (::std::auto_ptr< SceneFramework_type > p);

      // SceneFramework_REF
      // 
      typedef ::st434::s377m::types::Ref SceneFramework_REF_type;
      typedef ::xsd::cxx::tree::optional< SceneFramework_REF_type > SceneFramework_REF_optional;
      typedef ::xsd::cxx::tree::traits< SceneFramework_REF_type, char > SceneFramework_REF_traits;

      const SceneFramework_REF_optional&
      SceneFramework_REF () const;

      SceneFramework_REF_optional&
      SceneFramework_REF ();

      void
      SceneFramework_REF (const SceneFramework_REF_type& x);

      void
      SceneFramework_REF (const SceneFramework_REF_optional& x);

      void
      SceneFramework_REF (::std::auto_ptr< SceneFramework_REF_type > p);

      // CryptographicFramework
      // 
      typedef ::st434::s429_6::groups::CryptographicFrameworkType CryptographicFramework_type;
      typedef ::xsd::cxx::tree::optional< CryptographicFramework_type > CryptographicFramework_optional;
      typedef ::xsd::cxx::tree::traits< CryptographicFramework_type, char > CryptographicFramework_traits;

      const CryptographicFramework_optional&
      CryptographicFramework () const;

      CryptographicFramework_optional&
      CryptographicFramework ();

      void
      CryptographicFramework (const CryptographicFramework_type& x);

      void
      CryptographicFramework (const CryptographicFramework_optional& x);

      void
      CryptographicFramework (::std::auto_ptr< CryptographicFramework_type > p);

      // CryptographicFramework_REF
      // 
      typedef ::st434::s377m::types::Ref CryptographicFramework_REF_type;
      typedef ::xsd::cxx::tree::optional< CryptographicFramework_REF_type > CryptographicFramework_REF_optional;
      typedef ::xsd::cxx::tree::traits< CryptographicFramework_REF_type, char > CryptographicFramework_REF_traits;

      const CryptographicFramework_REF_optional&
      CryptographicFramework_REF () const;

      CryptographicFramework_REF_optional&
      CryptographicFramework_REF ();

      void
      CryptographicFramework_REF (const CryptographicFramework_REF_type& x);

      void
      CryptographicFramework_REF (const CryptographicFramework_REF_optional& x);

      void
      CryptographicFramework_REF (::std::auto_ptr< CryptographicFramework_REF_type > p);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::optional< DarkGroup_REF_type > DarkGroup_REF_optional;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_optional&
      DarkGroup_REF () const;

      DarkGroup_REF_optional&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_type& x);

      void
      DarkGroup_REF (const DarkGroup_REF_optional& x);

      void
      DarkGroup_REF (::std::auto_ptr< DarkGroup_REF_type > p);

      // Constructors.
      //
      DescriptiveFrameworkObject ();

      DescriptiveFrameworkObject (const ::xercesc::DOMElement& e,
                                  ::xml_schema::flags f = 0,
                                  ::xml_schema::container* c = 0);

      DescriptiveFrameworkObject (const DescriptiveFrameworkObject& x,
                                  ::xml_schema::flags f = 0,
                                  ::xml_schema::container* c = 0);

      virtual DescriptiveFrameworkObject*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~DescriptiveFrameworkObject ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      ProductionFramework_optional ProductionFramework_;
      ProductionFramework_REF_optional ProductionFramework_REF_;
      ClipFramework_optional ClipFramework_;
      ClipFramework_REF_optional ClipFramework_REF_;
      SceneFramework_optional SceneFramework_;
      SceneFramework_REF_optional SceneFramework_REF_;
      CryptographicFramework_optional CryptographicFramework_;
      CryptographicFramework_REF_optional CryptographicFramework_REF_;
      DarkGroup_REF_optional DarkGroup_REF_;
    };

    class EssenceDataObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // EssenceData
      // 
      typedef ::st434::s377m::groups::EssenceDataType EssenceData_type;
      typedef ::xsd::cxx::tree::sequence< EssenceData_type > EssenceData_sequence;
      typedef EssenceData_sequence::iterator EssenceData_iterator;
      typedef EssenceData_sequence::const_iterator EssenceData_const_iterator;
      typedef ::xsd::cxx::tree::traits< EssenceData_type, char > EssenceData_traits;

      const EssenceData_sequence&
      EssenceData () const;

      EssenceData_sequence&
      EssenceData ();

      void
      EssenceData (const EssenceData_sequence& s);

      // EssenceData_REF
      // 
      typedef ::st434::s377m::types::Ref EssenceData_REF_type;
      typedef ::xsd::cxx::tree::sequence< EssenceData_REF_type > EssenceData_REF_sequence;
      typedef EssenceData_REF_sequence::iterator EssenceData_REF_iterator;
      typedef EssenceData_REF_sequence::const_iterator EssenceData_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< EssenceData_REF_type, char > EssenceData_REF_traits;

      const EssenceData_REF_sequence&
      EssenceData_REF () const;

      EssenceData_REF_sequence&
      EssenceData_REF ();

      void
      EssenceData_REF (const EssenceData_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      EssenceDataObjects ();

      EssenceDataObjects (const ::xercesc::DOMElement& e,
                          ::xml_schema::flags f = 0,
                          ::xml_schema::container* c = 0);

      EssenceDataObjects (const EssenceDataObjects& x,
                          ::xml_schema::flags f = 0,
                          ::xml_schema::container* c = 0);

      virtual EssenceDataObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~EssenceDataObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      EssenceData_sequence EssenceData_;
      EssenceData_REF_sequence EssenceData_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class Packages: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // MaterialPackage
      // 
      typedef ::st434::s377m::groups::MaterialPackageType MaterialPackage_type;
      typedef ::xsd::cxx::tree::sequence< MaterialPackage_type > MaterialPackage_sequence;
      typedef MaterialPackage_sequence::iterator MaterialPackage_iterator;
      typedef MaterialPackage_sequence::const_iterator MaterialPackage_const_iterator;
      typedef ::xsd::cxx::tree::traits< MaterialPackage_type, char > MaterialPackage_traits;

      const MaterialPackage_sequence&
      MaterialPackage () const;

      MaterialPackage_sequence&
      MaterialPackage ();

      void
      MaterialPackage (const MaterialPackage_sequence& s);

      // MaterialPackage_REF
      // 
      typedef ::st434::s377m::types::Ref MaterialPackage_REF_type;
      typedef ::xsd::cxx::tree::sequence< MaterialPackage_REF_type > MaterialPackage_REF_sequence;
      typedef MaterialPackage_REF_sequence::iterator MaterialPackage_REF_iterator;
      typedef MaterialPackage_REF_sequence::const_iterator MaterialPackage_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< MaterialPackage_REF_type, char > MaterialPackage_REF_traits;

      const MaterialPackage_REF_sequence&
      MaterialPackage_REF () const;

      MaterialPackage_REF_sequence&
      MaterialPackage_REF ();

      void
      MaterialPackage_REF (const MaterialPackage_REF_sequence& s);

      // SourcePackage
      // 
      typedef ::st434::s377m::groups::SourcePackageType SourcePackage_type;
      typedef ::xsd::cxx::tree::sequence< SourcePackage_type > SourcePackage_sequence;
      typedef SourcePackage_sequence::iterator SourcePackage_iterator;
      typedef SourcePackage_sequence::const_iterator SourcePackage_const_iterator;
      typedef ::xsd::cxx::tree::traits< SourcePackage_type, char > SourcePackage_traits;

      const SourcePackage_sequence&
      SourcePackage () const;

      SourcePackage_sequence&
      SourcePackage ();

      void
      SourcePackage (const SourcePackage_sequence& s);

      // SourcePackage_REF
      // 
      typedef ::st434::s377m::types::Ref SourcePackage_REF_type;
      typedef ::xsd::cxx::tree::sequence< SourcePackage_REF_type > SourcePackage_REF_sequence;
      typedef SourcePackage_REF_sequence::iterator SourcePackage_REF_iterator;
      typedef SourcePackage_REF_sequence::const_iterator SourcePackage_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< SourcePackage_REF_type, char > SourcePackage_REF_traits;

      const SourcePackage_REF_sequence&
      SourcePackage_REF () const;

      SourcePackage_REF_sequence&
      SourcePackage_REF ();

      void
      SourcePackage_REF (const SourcePackage_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      Packages ();

      Packages (const ::xercesc::DOMElement& e,
                ::xml_schema::flags f = 0,
                ::xml_schema::container* c = 0);

      Packages (const Packages& x,
                ::xml_schema::flags f = 0,
                ::xml_schema::container* c = 0);

      virtual Packages*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~Packages ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      MaterialPackage_sequence MaterialPackage_;
      MaterialPackage_REF_sequence MaterialPackage_REF_;
      SourcePackage_sequence SourcePackage_;
      SourcePackage_REF_sequence SourcePackage_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class PrimaryPackage: public ::st434::s377m::types::WeakRefHolder
    {
      public:
      // MaterialPackage
      // 
      typedef ::st434::s377m::groups::MaterialPackageType MaterialPackage_type;
      typedef ::xsd::cxx::tree::optional< MaterialPackage_type > MaterialPackage_optional;
      typedef ::xsd::cxx::tree::traits< MaterialPackage_type, char > MaterialPackage_traits;

      const MaterialPackage_optional&
      MaterialPackage () const;

      MaterialPackage_optional&
      MaterialPackage ();

      void
      MaterialPackage (const MaterialPackage_type& x);

      void
      MaterialPackage (const MaterialPackage_optional& x);

      void
      MaterialPackage (::std::auto_ptr< MaterialPackage_type > p);

      // MaterialPackage_REF
      // 
      typedef ::st434::s377m::types::Ref MaterialPackage_REF_type;
      typedef ::xsd::cxx::tree::optional< MaterialPackage_REF_type > MaterialPackage_REF_optional;
      typedef ::xsd::cxx::tree::traits< MaterialPackage_REF_type, char > MaterialPackage_REF_traits;

      const MaterialPackage_REF_optional&
      MaterialPackage_REF () const;

      MaterialPackage_REF_optional&
      MaterialPackage_REF ();

      void
      MaterialPackage_REF (const MaterialPackage_REF_type& x);

      void
      MaterialPackage_REF (const MaterialPackage_REF_optional& x);

      void
      MaterialPackage_REF (::std::auto_ptr< MaterialPackage_REF_type > p);

      // SourcePackage
      // 
      typedef ::st434::s377m::groups::SourcePackageType SourcePackage_type;
      typedef ::xsd::cxx::tree::optional< SourcePackage_type > SourcePackage_optional;
      typedef ::xsd::cxx::tree::traits< SourcePackage_type, char > SourcePackage_traits;

      const SourcePackage_optional&
      SourcePackage () const;

      SourcePackage_optional&
      SourcePackage ();

      void
      SourcePackage (const SourcePackage_type& x);

      void
      SourcePackage (const SourcePackage_optional& x);

      void
      SourcePackage (::std::auto_ptr< SourcePackage_type > p);

      // SourcePackage_REF
      // 
      typedef ::st434::s377m::types::Ref SourcePackage_REF_type;
      typedef ::xsd::cxx::tree::optional< SourcePackage_REF_type > SourcePackage_REF_optional;
      typedef ::xsd::cxx::tree::traits< SourcePackage_REF_type, char > SourcePackage_REF_traits;

      const SourcePackage_REF_optional&
      SourcePackage_REF () const;

      SourcePackage_REF_optional&
      SourcePackage_REF ();

      void
      SourcePackage_REF (const SourcePackage_REF_type& x);

      void
      SourcePackage_REF (const SourcePackage_REF_optional& x);

      void
      SourcePackage_REF (::std::auto_ptr< SourcePackage_REF_type > p);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::optional< DarkGroup_REF_type > DarkGroup_REF_optional;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_optional&
      DarkGroup_REF () const;

      DarkGroup_REF_optional&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_type& x);

      void
      DarkGroup_REF (const DarkGroup_REF_optional& x);

      void
      DarkGroup_REF (::std::auto_ptr< DarkGroup_REF_type > p);

      // Constructors.
      //
      PrimaryPackage ();

      PrimaryPackage (const ::xercesc::DOMElement& e,
                      ::xml_schema::flags f = 0,
                      ::xml_schema::container* c = 0);

      PrimaryPackage (const PrimaryPackage& x,
                      ::xml_schema::flags f = 0,
                      ::xml_schema::container* c = 0);

      virtual PrimaryPackage*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~PrimaryPackage ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      MaterialPackage_optional MaterialPackage_;
      MaterialPackage_REF_optional MaterialPackage_REF_;
      SourcePackage_optional SourcePackage_;
      SourcePackage_REF_optional SourcePackage_REF_;
      DarkGroup_REF_optional DarkGroup_REF_;
    };

    class PackageTracks: public ::st434::s377m::types::StrongRefArray
    {
      public:
      // TimelineTrack
      // 
      typedef ::st434::s377m::groups::TimelineTrackType TimelineTrack_type;
      typedef ::xsd::cxx::tree::sequence< TimelineTrack_type > TimelineTrack_sequence;
      typedef TimelineTrack_sequence::iterator TimelineTrack_iterator;
      typedef TimelineTrack_sequence::const_iterator TimelineTrack_const_iterator;
      typedef ::xsd::cxx::tree::traits< TimelineTrack_type, char > TimelineTrack_traits;

      const TimelineTrack_sequence&
      TimelineTrack () const;

      TimelineTrack_sequence&
      TimelineTrack ();

      void
      TimelineTrack (const TimelineTrack_sequence& s);

      // TimelineTrack_REF
      // 
      typedef ::st434::s377m::types::Ref TimelineTrack_REF_type;
      typedef ::xsd::cxx::tree::sequence< TimelineTrack_REF_type > TimelineTrack_REF_sequence;
      typedef TimelineTrack_REF_sequence::iterator TimelineTrack_REF_iterator;
      typedef TimelineTrack_REF_sequence::const_iterator TimelineTrack_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< TimelineTrack_REF_type, char > TimelineTrack_REF_traits;

      const TimelineTrack_REF_sequence&
      TimelineTrack_REF () const;

      TimelineTrack_REF_sequence&
      TimelineTrack_REF ();

      void
      TimelineTrack_REF (const TimelineTrack_REF_sequence& s);

      // EventTrack
      // 
      typedef ::st434::s377m::groups::EventTrackType EventTrack_type;
      typedef ::xsd::cxx::tree::sequence< EventTrack_type > EventTrack_sequence;
      typedef EventTrack_sequence::iterator EventTrack_iterator;
      typedef EventTrack_sequence::const_iterator EventTrack_const_iterator;
      typedef ::xsd::cxx::tree::traits< EventTrack_type, char > EventTrack_traits;

      const EventTrack_sequence&
      EventTrack () const;

      EventTrack_sequence&
      EventTrack ();

      void
      EventTrack (const EventTrack_sequence& s);

      // EventTrack_REF
      // 
      typedef ::st434::s377m::types::Ref EventTrack_REF_type;
      typedef ::xsd::cxx::tree::sequence< EventTrack_REF_type > EventTrack_REF_sequence;
      typedef EventTrack_REF_sequence::iterator EventTrack_REF_iterator;
      typedef EventTrack_REF_sequence::const_iterator EventTrack_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< EventTrack_REF_type, char > EventTrack_REF_traits;

      const EventTrack_REF_sequence&
      EventTrack_REF () const;

      EventTrack_REF_sequence&
      EventTrack_REF ();

      void
      EventTrack_REF (const EventTrack_REF_sequence& s);

      // StaticTrack
      // 
      typedef ::st434::s377m::groups::StaticTrackType StaticTrack_type;
      typedef ::xsd::cxx::tree::sequence< StaticTrack_type > StaticTrack_sequence;
      typedef StaticTrack_sequence::iterator StaticTrack_iterator;
      typedef StaticTrack_sequence::const_iterator StaticTrack_const_iterator;
      typedef ::xsd::cxx::tree::traits< StaticTrack_type, char > StaticTrack_traits;

      const StaticTrack_sequence&
      StaticTrack () const;

      StaticTrack_sequence&
      StaticTrack ();

      void
      StaticTrack (const StaticTrack_sequence& s);

      // StaticTrack_REF
      // 
      typedef ::st434::s377m::types::Ref StaticTrack_REF_type;
      typedef ::xsd::cxx::tree::sequence< StaticTrack_REF_type > StaticTrack_REF_sequence;
      typedef StaticTrack_REF_sequence::iterator StaticTrack_REF_iterator;
      typedef StaticTrack_REF_sequence::const_iterator StaticTrack_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< StaticTrack_REF_type, char > StaticTrack_REF_traits;

      const StaticTrack_REF_sequence&
      StaticTrack_REF () const;

      StaticTrack_REF_sequence&
      StaticTrack_REF ();

      void
      StaticTrack_REF (const StaticTrack_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      PackageTracks ();

      PackageTracks (const ::xercesc::DOMElement& e,
                     ::xml_schema::flags f = 0,
                     ::xml_schema::container* c = 0);

      PackageTracks (const PackageTracks& x,
                     ::xml_schema::flags f = 0,
                     ::xml_schema::container* c = 0);

      virtual PackageTracks*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~PackageTracks ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      TimelineTrack_sequence TimelineTrack_;
      TimelineTrack_REF_sequence TimelineTrack_REF_;
      EventTrack_sequence EventTrack_;
      EventTrack_REF_sequence EventTrack_REF_;
      StaticTrack_sequence StaticTrack_;
      StaticTrack_REF_sequence StaticTrack_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class ComponentObjects: public ::st434::s377m::types::StrongRefArray
    {
      public:
      // Timecode
      // 
      typedef ::st434::s377m::groups::TimecodeType Timecode_type;
      typedef ::xsd::cxx::tree::sequence< Timecode_type > Timecode_sequence;
      typedef Timecode_sequence::iterator Timecode_iterator;
      typedef Timecode_sequence::const_iterator Timecode_const_iterator;
      typedef ::xsd::cxx::tree::traits< Timecode_type, char > Timecode_traits;

      const Timecode_sequence&
      Timecode () const;

      Timecode_sequence&
      Timecode ();

      void
      Timecode (const Timecode_sequence& s);

      // Timecode_REF
      // 
      typedef ::st434::s377m::types::Ref Timecode_REF_type;
      typedef ::xsd::cxx::tree::sequence< Timecode_REF_type > Timecode_REF_sequence;
      typedef Timecode_REF_sequence::iterator Timecode_REF_iterator;
      typedef Timecode_REF_sequence::const_iterator Timecode_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Timecode_REF_type, char > Timecode_REF_traits;

      const Timecode_REF_sequence&
      Timecode_REF () const;

      Timecode_REF_sequence&
      Timecode_REF ();

      void
      Timecode_REF (const Timecode_REF_sequence& s);

      // SourceClip
      // 
      typedef ::st434::s377m::groups::SourceClipType SourceClip_type;
      typedef ::xsd::cxx::tree::sequence< SourceClip_type > SourceClip_sequence;
      typedef SourceClip_sequence::iterator SourceClip_iterator;
      typedef SourceClip_sequence::const_iterator SourceClip_const_iterator;
      typedef ::xsd::cxx::tree::traits< SourceClip_type, char > SourceClip_traits;

      const SourceClip_sequence&
      SourceClip () const;

      SourceClip_sequence&
      SourceClip ();

      void
      SourceClip (const SourceClip_sequence& s);

      // SourceClip_REF
      // 
      typedef ::st434::s377m::types::Ref SourceClip_REF_type;
      typedef ::xsd::cxx::tree::sequence< SourceClip_REF_type > SourceClip_REF_sequence;
      typedef SourceClip_REF_sequence::iterator SourceClip_REF_iterator;
      typedef SourceClip_REF_sequence::const_iterator SourceClip_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< SourceClip_REF_type, char > SourceClip_REF_traits;

      const SourceClip_REF_sequence&
      SourceClip_REF () const;

      SourceClip_REF_sequence&
      SourceClip_REF ();

      void
      SourceClip_REF (const SourceClip_REF_sequence& s);

      // DescriptiveClip
      // 
      typedef ::st434::s377m::groups::DescriptiveClipType DescriptiveClip_type;
      typedef ::xsd::cxx::tree::sequence< DescriptiveClip_type > DescriptiveClip_sequence;
      typedef DescriptiveClip_sequence::iterator DescriptiveClip_iterator;
      typedef DescriptiveClip_sequence::const_iterator DescriptiveClip_const_iterator;
      typedef ::xsd::cxx::tree::traits< DescriptiveClip_type, char > DescriptiveClip_traits;

      const DescriptiveClip_sequence&
      DescriptiveClip () const;

      DescriptiveClip_sequence&
      DescriptiveClip ();

      void
      DescriptiveClip (const DescriptiveClip_sequence& s);

      // DescriptiveClip_REF
      // 
      typedef ::st434::s377m::types::Ref DescriptiveClip_REF_type;
      typedef ::xsd::cxx::tree::sequence< DescriptiveClip_REF_type > DescriptiveClip_REF_sequence;
      typedef DescriptiveClip_REF_sequence::iterator DescriptiveClip_REF_iterator;
      typedef DescriptiveClip_REF_sequence::const_iterator DescriptiveClip_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DescriptiveClip_REF_type, char > DescriptiveClip_REF_traits;

      const DescriptiveClip_REF_sequence&
      DescriptiveClip_REF () const;

      DescriptiveClip_REF_sequence&
      DescriptiveClip_REF ();

      void
      DescriptiveClip_REF (const DescriptiveClip_REF_sequence& s);

      // DescriptiveMarker
      // 
      typedef ::st434::s377m::groups::DescriptiveMarkerType DescriptiveMarker_type;
      typedef ::xsd::cxx::tree::sequence< DescriptiveMarker_type > DescriptiveMarker_sequence;
      typedef DescriptiveMarker_sequence::iterator DescriptiveMarker_iterator;
      typedef DescriptiveMarker_sequence::const_iterator DescriptiveMarker_const_iterator;
      typedef ::xsd::cxx::tree::traits< DescriptiveMarker_type, char > DescriptiveMarker_traits;

      const DescriptiveMarker_sequence&
      DescriptiveMarker () const;

      DescriptiveMarker_sequence&
      DescriptiveMarker ();

      void
      DescriptiveMarker (const DescriptiveMarker_sequence& s);

      // DescriptiveMarker_REF
      // 
      typedef ::st434::s377m::types::Ref DescriptiveMarker_REF_type;
      typedef ::xsd::cxx::tree::sequence< DescriptiveMarker_REF_type > DescriptiveMarker_REF_sequence;
      typedef DescriptiveMarker_REF_sequence::iterator DescriptiveMarker_REF_iterator;
      typedef DescriptiveMarker_REF_sequence::const_iterator DescriptiveMarker_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DescriptiveMarker_REF_type, char > DescriptiveMarker_REF_traits;

      const DescriptiveMarker_REF_sequence&
      DescriptiveMarker_REF () const;

      DescriptiveMarker_REF_sequence&
      DescriptiveMarker_REF ();

      void
      DescriptiveMarker_REF (const DescriptiveMarker_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      ComponentObjects ();

      ComponentObjects (const ::xercesc::DOMElement& e,
                        ::xml_schema::flags f = 0,
                        ::xml_schema::container* c = 0);

      ComponentObjects (const ComponentObjects& x,
                        ::xml_schema::flags f = 0,
                        ::xml_schema::container* c = 0);

      virtual ComponentObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~ComponentObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Timecode_sequence Timecode_;
      Timecode_REF_sequence Timecode_REF_;
      SourceClip_sequence SourceClip_;
      SourceClip_REF_sequence SourceClip_REF_;
      DescriptiveClip_sequence DescriptiveClip_;
      DescriptiveClip_REF_sequence DescriptiveClip_REF_;
      DescriptiveMarker_sequence DescriptiveMarker_;
      DescriptiveMarker_REF_sequence DescriptiveMarker_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class TrackSegment: public ::st434::s377m::types::StrongRefHolder
    {
      public:
      // Sequence
      // 
      typedef ::st434::s377m::groups::SequenceType Sequence_type;
      typedef ::xsd::cxx::tree::optional< Sequence_type > Sequence_optional;
      typedef ::xsd::cxx::tree::traits< Sequence_type, char > Sequence_traits;

      const Sequence_optional&
      Sequence () const;

      Sequence_optional&
      Sequence ();

      void
      Sequence (const Sequence_type& x);

      void
      Sequence (const Sequence_optional& x);

      void
      Sequence (::std::auto_ptr< Sequence_type > p);

      // Sequence_REF
      // 
      typedef ::st434::s377m::types::Ref Sequence_REF_type;
      typedef ::xsd::cxx::tree::optional< Sequence_REF_type > Sequence_REF_optional;
      typedef ::xsd::cxx::tree::traits< Sequence_REF_type, char > Sequence_REF_traits;

      const Sequence_REF_optional&
      Sequence_REF () const;

      Sequence_REF_optional&
      Sequence_REF ();

      void
      Sequence_REF (const Sequence_REF_type& x);

      void
      Sequence_REF (const Sequence_REF_optional& x);

      void
      Sequence_REF (::std::auto_ptr< Sequence_REF_type > p);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::optional< DarkGroup_REF_type > DarkGroup_REF_optional;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_optional&
      DarkGroup_REF () const;

      DarkGroup_REF_optional&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_type& x);

      void
      DarkGroup_REF (const DarkGroup_REF_optional& x);

      void
      DarkGroup_REF (::std::auto_ptr< DarkGroup_REF_type > p);

      // Constructors.
      //
      TrackSegment ();

      TrackSegment (const ::xercesc::DOMElement& e,
                    ::xml_schema::flags f = 0,
                    ::xml_schema::container* c = 0);

      TrackSegment (const TrackSegment& x,
                    ::xml_schema::flags f = 0,
                    ::xml_schema::container* c = 0);

      virtual TrackSegment*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~TrackSegment ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Sequence_optional Sequence_;
      Sequence_REF_optional Sequence_REF_;
      DarkGroup_REF_optional DarkGroup_REF_;
    };

    class ContentStorageObject: public ::st434::s377m::types::StrongRefHolder
    {
      public:
      // ContentStorage
      // 
      typedef ::st434::s377m::groups::ContentStorageType ContentStorage_type;
      typedef ::xsd::cxx::tree::optional< ContentStorage_type > ContentStorage_optional;
      typedef ::xsd::cxx::tree::traits< ContentStorage_type, char > ContentStorage_traits;

      const ContentStorage_optional&
      ContentStorage () const;

      ContentStorage_optional&
      ContentStorage ();

      void
      ContentStorage (const ContentStorage_type& x);

      void
      ContentStorage (const ContentStorage_optional& x);

      void
      ContentStorage (::std::auto_ptr< ContentStorage_type > p);

      // ContentStorage_REF
      // 
      typedef ::st434::s377m::types::Ref ContentStorage_REF_type;
      typedef ::xsd::cxx::tree::optional< ContentStorage_REF_type > ContentStorage_REF_optional;
      typedef ::xsd::cxx::tree::traits< ContentStorage_REF_type, char > ContentStorage_REF_traits;

      const ContentStorage_REF_optional&
      ContentStorage_REF () const;

      ContentStorage_REF_optional&
      ContentStorage_REF ();

      void
      ContentStorage_REF (const ContentStorage_REF_type& x);

      void
      ContentStorage_REF (const ContentStorage_REF_optional& x);

      void
      ContentStorage_REF (::std::auto_ptr< ContentStorage_REF_type > p);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::optional< DarkGroup_REF_type > DarkGroup_REF_optional;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_optional&
      DarkGroup_REF () const;

      DarkGroup_REF_optional&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_type& x);

      void
      DarkGroup_REF (const DarkGroup_REF_optional& x);

      void
      DarkGroup_REF (::std::auto_ptr< DarkGroup_REF_type > p);

      // Constructors.
      //
      ContentStorageObject ();

      ContentStorageObject (const ::xercesc::DOMElement& e,
                            ::xml_schema::flags f = 0,
                            ::xml_schema::container* c = 0);

      ContentStorageObject (const ContentStorageObject& x,
                            ::xml_schema::flags f = 0,
                            ::xml_schema::container* c = 0);

      virtual ContentStorageObject*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~ContentStorageObject ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      ContentStorage_optional ContentStorage_;
      ContentStorage_REF_optional ContentStorage_REF_;
      DarkGroup_REF_optional DarkGroup_REF_;
    };

    class EssenceDescription: public ::st434::s377m::types::StrongRefHolder
    {
      public:
      // FileDescriptor
      // 
      typedef ::st434::s377m::groups::FileDescriptorType FileDescriptor_type;
      typedef ::xsd::cxx::tree::optional< FileDescriptor_type > FileDescriptor_optional;
      typedef ::xsd::cxx::tree::traits< FileDescriptor_type, char > FileDescriptor_traits;

      const FileDescriptor_optional&
      FileDescriptor () const;

      FileDescriptor_optional&
      FileDescriptor ();

      void
      FileDescriptor (const FileDescriptor_type& x);

      void
      FileDescriptor (const FileDescriptor_optional& x);

      void
      FileDescriptor (::std::auto_ptr< FileDescriptor_type > p);

      // FileDescriptor_REF
      // 
      typedef ::st434::s377m::types::Ref FileDescriptor_REF_type;
      typedef ::xsd::cxx::tree::optional< FileDescriptor_REF_type > FileDescriptor_REF_optional;
      typedef ::xsd::cxx::tree::traits< FileDescriptor_REF_type, char > FileDescriptor_REF_traits;

      const FileDescriptor_REF_optional&
      FileDescriptor_REF () const;

      FileDescriptor_REF_optional&
      FileDescriptor_REF ();

      void
      FileDescriptor_REF (const FileDescriptor_REF_type& x);

      void
      FileDescriptor_REF (const FileDescriptor_REF_optional& x);

      void
      FileDescriptor_REF (::std::auto_ptr< FileDescriptor_REF_type > p);

      // MultipleDescriptor
      // 
      typedef ::st434::s377m::groups::MultipleDescriptorType MultipleDescriptor_type;
      typedef ::xsd::cxx::tree::optional< MultipleDescriptor_type > MultipleDescriptor_optional;
      typedef ::xsd::cxx::tree::traits< MultipleDescriptor_type, char > MultipleDescriptor_traits;

      const MultipleDescriptor_optional&
      MultipleDescriptor () const;

      MultipleDescriptor_optional&
      MultipleDescriptor ();

      void
      MultipleDescriptor (const MultipleDescriptor_type& x);

      void
      MultipleDescriptor (const MultipleDescriptor_optional& x);

      void
      MultipleDescriptor (::std::auto_ptr< MultipleDescriptor_type > p);

      // MultipleDescriptor_REF
      // 
      typedef ::st434::s377m::types::Ref MultipleDescriptor_REF_type;
      typedef ::xsd::cxx::tree::optional< MultipleDescriptor_REF_type > MultipleDescriptor_REF_optional;
      typedef ::xsd::cxx::tree::traits< MultipleDescriptor_REF_type, char > MultipleDescriptor_REF_traits;

      const MultipleDescriptor_REF_optional&
      MultipleDescriptor_REF () const;

      MultipleDescriptor_REF_optional&
      MultipleDescriptor_REF ();

      void
      MultipleDescriptor_REF (const MultipleDescriptor_REF_type& x);

      void
      MultipleDescriptor_REF (const MultipleDescriptor_REF_optional& x);

      void
      MultipleDescriptor_REF (::std::auto_ptr< MultipleDescriptor_REF_type > p);

      // PictureDescriptor_REF
      // 
      typedef ::st434::s377m::types::Ref PictureDescriptor_REF_type;
      typedef ::xsd::cxx::tree::optional< PictureDescriptor_REF_type > PictureDescriptor_REF_optional;
      typedef ::xsd::cxx::tree::traits< PictureDescriptor_REF_type, char > PictureDescriptor_REF_traits;

      const PictureDescriptor_REF_optional&
      PictureDescriptor_REF () const;

      PictureDescriptor_REF_optional&
      PictureDescriptor_REF ();

      void
      PictureDescriptor_REF (const PictureDescriptor_REF_type& x);

      void
      PictureDescriptor_REF (const PictureDescriptor_REF_optional& x);

      void
      PictureDescriptor_REF (::std::auto_ptr< PictureDescriptor_REF_type > p);

      // PictureDescriptor
      // 
      typedef ::st434::s377m::groups::PictureDescriptorType PictureDescriptor_type;
      typedef ::xsd::cxx::tree::optional< PictureDescriptor_type > PictureDescriptor_optional;
      typedef ::xsd::cxx::tree::traits< PictureDescriptor_type, char > PictureDescriptor_traits;

      const PictureDescriptor_optional&
      PictureDescriptor () const;

      PictureDescriptor_optional&
      PictureDescriptor ();

      void
      PictureDescriptor (const PictureDescriptor_type& x);

      void
      PictureDescriptor (const PictureDescriptor_optional& x);

      void
      PictureDescriptor (::std::auto_ptr< PictureDescriptor_type > p);

      // CDCIDescriptor_REF
      // 
      typedef ::st434::s377m::types::Ref CDCIDescriptor_REF_type;
      typedef ::xsd::cxx::tree::optional< CDCIDescriptor_REF_type > CDCIDescriptor_REF_optional;
      typedef ::xsd::cxx::tree::traits< CDCIDescriptor_REF_type, char > CDCIDescriptor_REF_traits;

      const CDCIDescriptor_REF_optional&
      CDCIDescriptor_REF () const;

      CDCIDescriptor_REF_optional&
      CDCIDescriptor_REF ();

      void
      CDCIDescriptor_REF (const CDCIDescriptor_REF_type& x);

      void
      CDCIDescriptor_REF (const CDCIDescriptor_REF_optional& x);

      void
      CDCIDescriptor_REF (::std::auto_ptr< CDCIDescriptor_REF_type > p);

      // CDCIDescriptor
      // 
      typedef ::st434::s377m::groups::CDCIDescriptorType CDCIDescriptor_type;
      typedef ::xsd::cxx::tree::optional< CDCIDescriptor_type > CDCIDescriptor_optional;
      typedef ::xsd::cxx::tree::traits< CDCIDescriptor_type, char > CDCIDescriptor_traits;

      const CDCIDescriptor_optional&
      CDCIDescriptor () const;

      CDCIDescriptor_optional&
      CDCIDescriptor ();

      void
      CDCIDescriptor (const CDCIDescriptor_type& x);

      void
      CDCIDescriptor (const CDCIDescriptor_optional& x);

      void
      CDCIDescriptor (::std::auto_ptr< CDCIDescriptor_type > p);

      // RGBADescriptor_REF
      // 
      typedef ::st434::s377m::types::Ref RGBADescriptor_REF_type;
      typedef ::xsd::cxx::tree::optional< RGBADescriptor_REF_type > RGBADescriptor_REF_optional;
      typedef ::xsd::cxx::tree::traits< RGBADescriptor_REF_type, char > RGBADescriptor_REF_traits;

      const RGBADescriptor_REF_optional&
      RGBADescriptor_REF () const;

      RGBADescriptor_REF_optional&
      RGBADescriptor_REF ();

      void
      RGBADescriptor_REF (const RGBADescriptor_REF_type& x);

      void
      RGBADescriptor_REF (const RGBADescriptor_REF_optional& x);

      void
      RGBADescriptor_REF (::std::auto_ptr< RGBADescriptor_REF_type > p);

      // RGBADescriptor
      // 
      typedef ::st434::s377m::groups::RGBADescriptorType RGBADescriptor_type;
      typedef ::xsd::cxx::tree::optional< RGBADescriptor_type > RGBADescriptor_optional;
      typedef ::xsd::cxx::tree::traits< RGBADescriptor_type, char > RGBADescriptor_traits;

      const RGBADescriptor_optional&
      RGBADescriptor () const;

      RGBADescriptor_optional&
      RGBADescriptor ();

      void
      RGBADescriptor (const RGBADescriptor_type& x);

      void
      RGBADescriptor (const RGBADescriptor_optional& x);

      void
      RGBADescriptor (::std::auto_ptr< RGBADescriptor_type > p);

      // SoundDescriptor_REF
      // 
      typedef ::st434::s377m::types::Ref SoundDescriptor_REF_type;
      typedef ::xsd::cxx::tree::optional< SoundDescriptor_REF_type > SoundDescriptor_REF_optional;
      typedef ::xsd::cxx::tree::traits< SoundDescriptor_REF_type, char > SoundDescriptor_REF_traits;

      const SoundDescriptor_REF_optional&
      SoundDescriptor_REF () const;

      SoundDescriptor_REF_optional&
      SoundDescriptor_REF ();

      void
      SoundDescriptor_REF (const SoundDescriptor_REF_type& x);

      void
      SoundDescriptor_REF (const SoundDescriptor_REF_optional& x);

      void
      SoundDescriptor_REF (::std::auto_ptr< SoundDescriptor_REF_type > p);

      // SoundDescriptor
      // 
      typedef ::st434::s377m::groups::SoundDescriptorType SoundDescriptor_type;
      typedef ::xsd::cxx::tree::optional< SoundDescriptor_type > SoundDescriptor_optional;
      typedef ::xsd::cxx::tree::traits< SoundDescriptor_type, char > SoundDescriptor_traits;

      const SoundDescriptor_optional&
      SoundDescriptor () const;

      SoundDescriptor_optional&
      SoundDescriptor ();

      void
      SoundDescriptor (const SoundDescriptor_type& x);

      void
      SoundDescriptor (const SoundDescriptor_optional& x);

      void
      SoundDescriptor (::std::auto_ptr< SoundDescriptor_type > p);

      // DataEssenceDescriptor_REF
      // 
      typedef ::st434::s377m::types::Ref DataEssenceDescriptor_REF_type;
      typedef ::xsd::cxx::tree::optional< DataEssenceDescriptor_REF_type > DataEssenceDescriptor_REF_optional;
      typedef ::xsd::cxx::tree::traits< DataEssenceDescriptor_REF_type, char > DataEssenceDescriptor_REF_traits;

      const DataEssenceDescriptor_REF_optional&
      DataEssenceDescriptor_REF () const;

      DataEssenceDescriptor_REF_optional&
      DataEssenceDescriptor_REF ();

      void
      DataEssenceDescriptor_REF (const DataEssenceDescriptor_REF_type& x);

      void
      DataEssenceDescriptor_REF (const DataEssenceDescriptor_REF_optional& x);

      void
      DataEssenceDescriptor_REF (::std::auto_ptr< DataEssenceDescriptor_REF_type > p);

      // DataEssenceDescriptor
      // 
      typedef ::st434::s377m::groups::DataEssenceDescriptorType DataEssenceDescriptor_type;
      typedef ::xsd::cxx::tree::optional< DataEssenceDescriptor_type > DataEssenceDescriptor_optional;
      typedef ::xsd::cxx::tree::traits< DataEssenceDescriptor_type, char > DataEssenceDescriptor_traits;

      const DataEssenceDescriptor_optional&
      DataEssenceDescriptor () const;

      DataEssenceDescriptor_optional&
      DataEssenceDescriptor ();

      void
      DataEssenceDescriptor (const DataEssenceDescriptor_type& x);

      void
      DataEssenceDescriptor (const DataEssenceDescriptor_optional& x);

      void
      DataEssenceDescriptor (::std::auto_ptr< DataEssenceDescriptor_type > p);

      // MPEGVideoDescriptor_REF
      // 
      typedef ::st434::s377m::types::Ref MPEGVideoDescriptor_REF_type;
      typedef ::xsd::cxx::tree::optional< MPEGVideoDescriptor_REF_type > MPEGVideoDescriptor_REF_optional;
      typedef ::xsd::cxx::tree::traits< MPEGVideoDescriptor_REF_type, char > MPEGVideoDescriptor_REF_traits;

      const MPEGVideoDescriptor_REF_optional&
      MPEGVideoDescriptor_REF () const;

      MPEGVideoDescriptor_REF_optional&
      MPEGVideoDescriptor_REF ();

      void
      MPEGVideoDescriptor_REF (const MPEGVideoDescriptor_REF_type& x);

      void
      MPEGVideoDescriptor_REF (const MPEGVideoDescriptor_REF_optional& x);

      void
      MPEGVideoDescriptor_REF (::std::auto_ptr< MPEGVideoDescriptor_REF_type > p);

      // MPEGVideoDescriptor
      // 
      typedef ::st434::s381m::groups::MPEGVideoDescriptorType MPEGVideoDescriptor_type;
      typedef ::xsd::cxx::tree::optional< MPEGVideoDescriptor_type > MPEGVideoDescriptor_optional;
      typedef ::xsd::cxx::tree::traits< MPEGVideoDescriptor_type, char > MPEGVideoDescriptor_traits;

      const MPEGVideoDescriptor_optional&
      MPEGVideoDescriptor () const;

      MPEGVideoDescriptor_optional&
      MPEGVideoDescriptor ();

      void
      MPEGVideoDescriptor (const MPEGVideoDescriptor_type& x);

      void
      MPEGVideoDescriptor (const MPEGVideoDescriptor_optional& x);

      void
      MPEGVideoDescriptor (::std::auto_ptr< MPEGVideoDescriptor_type > p);

      // DateTimeDescriptor_REF
      // 
      typedef ::st434::s377m::types::Ref DateTimeDescriptor_REF_type;
      typedef ::xsd::cxx::tree::optional< DateTimeDescriptor_REF_type > DateTimeDescriptor_REF_optional;
      typedef ::xsd::cxx::tree::traits< DateTimeDescriptor_REF_type, char > DateTimeDescriptor_REF_traits;

      const DateTimeDescriptor_REF_optional&
      DateTimeDescriptor_REF () const;

      DateTimeDescriptor_REF_optional&
      DateTimeDescriptor_REF ();

      void
      DateTimeDescriptor_REF (const DateTimeDescriptor_REF_type& x);

      void
      DateTimeDescriptor_REF (const DateTimeDescriptor_REF_optional& x);

      void
      DateTimeDescriptor_REF (::std::auto_ptr< DateTimeDescriptor_REF_type > p);

      // DateTimeDescriptor
      // 
      typedef ::st434::s385m::groups::DateTimeDescriptorType DateTimeDescriptor_type;
      typedef ::xsd::cxx::tree::optional< DateTimeDescriptor_type > DateTimeDescriptor_optional;
      typedef ::xsd::cxx::tree::traits< DateTimeDescriptor_type, char > DateTimeDescriptor_traits;

      const DateTimeDescriptor_optional&
      DateTimeDescriptor () const;

      DateTimeDescriptor_optional&
      DateTimeDescriptor ();

      void
      DateTimeDescriptor (const DateTimeDescriptor_type& x);

      void
      DateTimeDescriptor (const DateTimeDescriptor_optional& x);

      void
      DateTimeDescriptor (::std::auto_ptr< DateTimeDescriptor_type > p);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::optional< DarkGroup_REF_type > DarkGroup_REF_optional;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_optional&
      DarkGroup_REF () const;

      DarkGroup_REF_optional&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_type& x);

      void
      DarkGroup_REF (const DarkGroup_REF_optional& x);

      void
      DarkGroup_REF (::std::auto_ptr< DarkGroup_REF_type > p);

      // Constructors.
      //
      EssenceDescription ();

      EssenceDescription (const ::xercesc::DOMElement& e,
                          ::xml_schema::flags f = 0,
                          ::xml_schema::container* c = 0);

      EssenceDescription (const EssenceDescription& x,
                          ::xml_schema::flags f = 0,
                          ::xml_schema::container* c = 0);

      virtual EssenceDescription*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~EssenceDescription ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      FileDescriptor_optional FileDescriptor_;
      FileDescriptor_REF_optional FileDescriptor_REF_;
      MultipleDescriptor_optional MultipleDescriptor_;
      MultipleDescriptor_REF_optional MultipleDescriptor_REF_;
      PictureDescriptor_REF_optional PictureDescriptor_REF_;
      PictureDescriptor_optional PictureDescriptor_;
      CDCIDescriptor_REF_optional CDCIDescriptor_REF_;
      CDCIDescriptor_optional CDCIDescriptor_;
      RGBADescriptor_REF_optional RGBADescriptor_REF_;
      RGBADescriptor_optional RGBADescriptor_;
      SoundDescriptor_REF_optional SoundDescriptor_REF_;
      SoundDescriptor_optional SoundDescriptor_;
      DataEssenceDescriptor_REF_optional DataEssenceDescriptor_REF_;
      DataEssenceDescriptor_optional DataEssenceDescriptor_;
      MPEGVideoDescriptor_REF_optional MPEGVideoDescriptor_REF_;
      MPEGVideoDescriptor_optional MPEGVideoDescriptor_;
      DateTimeDescriptor_REF_optional DateTimeDescriptor_REF_;
      DateTimeDescriptor_optional DateTimeDescriptor_;
      DarkGroup_REF_optional DarkGroup_REF_;
    };

    class Locators: public ::st434::s377m::types::StrongRefArray
    {
      public:
      // NetworkLocator
      // 
      typedef ::st434::s377m::groups::NetworkLocatorType NetworkLocator_type;
      typedef ::xsd::cxx::tree::sequence< NetworkLocator_type > NetworkLocator_sequence;
      typedef NetworkLocator_sequence::iterator NetworkLocator_iterator;
      typedef NetworkLocator_sequence::const_iterator NetworkLocator_const_iterator;
      typedef ::xsd::cxx::tree::traits< NetworkLocator_type, char > NetworkLocator_traits;

      const NetworkLocator_sequence&
      NetworkLocator () const;

      NetworkLocator_sequence&
      NetworkLocator ();

      void
      NetworkLocator (const NetworkLocator_sequence& s);

      // NetworkLocator_REF
      // 
      typedef ::st434::s377m::types::Ref NetworkLocator_REF_type;
      typedef ::xsd::cxx::tree::sequence< NetworkLocator_REF_type > NetworkLocator_REF_sequence;
      typedef NetworkLocator_REF_sequence::iterator NetworkLocator_REF_iterator;
      typedef NetworkLocator_REF_sequence::const_iterator NetworkLocator_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< NetworkLocator_REF_type, char > NetworkLocator_REF_traits;

      const NetworkLocator_REF_sequence&
      NetworkLocator_REF () const;

      NetworkLocator_REF_sequence&
      NetworkLocator_REF ();

      void
      NetworkLocator_REF (const NetworkLocator_REF_sequence& s);

      // TextLocator
      // 
      typedef ::st434::s377m::groups::TextLocatorType TextLocator_type;
      typedef ::xsd::cxx::tree::sequence< TextLocator_type > TextLocator_sequence;
      typedef TextLocator_sequence::iterator TextLocator_iterator;
      typedef TextLocator_sequence::const_iterator TextLocator_const_iterator;
      typedef ::xsd::cxx::tree::traits< TextLocator_type, char > TextLocator_traits;

      const TextLocator_sequence&
      TextLocator () const;

      TextLocator_sequence&
      TextLocator ();

      void
      TextLocator (const TextLocator_sequence& s);

      // TextLocator_REF
      // 
      typedef ::st434::s377m::types::Ref TextLocator_REF_type;
      typedef ::xsd::cxx::tree::sequence< TextLocator_REF_type > TextLocator_REF_sequence;
      typedef TextLocator_REF_sequence::iterator TextLocator_REF_iterator;
      typedef TextLocator_REF_sequence::const_iterator TextLocator_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< TextLocator_REF_type, char > TextLocator_REF_traits;

      const TextLocator_REF_sequence&
      TextLocator_REF () const;

      TextLocator_REF_sequence&
      TextLocator_REF ();

      void
      TextLocator_REF (const TextLocator_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      Locators ();

      Locators (const ::xercesc::DOMElement& e,
                ::xml_schema::flags f = 0,
                ::xml_schema::container* c = 0);

      Locators (const Locators& x,
                ::xml_schema::flags f = 0,
                ::xml_schema::container* c = 0);

      virtual Locators*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~Locators ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      NetworkLocator_sequence NetworkLocator_;
      NetworkLocator_REF_sequence NetworkLocator_REF_;
      TextLocator_sequence TextLocator_;
      TextLocator_REF_sequence TextLocator_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class IdentificationList: public ::st434::s377m::types::StrongRefArray
    {
      public:
      // Identification
      // 
      typedef ::st434::s377m::groups::IdentificationType Identification_type;
      typedef ::xsd::cxx::tree::sequence< Identification_type > Identification_sequence;
      typedef Identification_sequence::iterator Identification_iterator;
      typedef Identification_sequence::const_iterator Identification_const_iterator;
      typedef ::xsd::cxx::tree::traits< Identification_type, char > Identification_traits;

      const Identification_sequence&
      Identification () const;

      Identification_sequence&
      Identification ();

      void
      Identification (const Identification_sequence& s);

      // Identification_REF
      // 
      typedef ::st434::s377m::types::Ref Identification_REF_type;
      typedef ::xsd::cxx::tree::sequence< Identification_REF_type > Identification_REF_sequence;
      typedef Identification_REF_sequence::iterator Identification_REF_iterator;
      typedef Identification_REF_sequence::const_iterator Identification_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Identification_REF_type, char > Identification_REF_traits;

      const Identification_REF_sequence&
      Identification_REF () const;

      Identification_REF_sequence&
      Identification_REF ();

      void
      Identification_REF (const Identification_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      IdentificationList ();

      IdentificationList (const ::xercesc::DOMElement& e,
                          ::xml_schema::flags f = 0,
                          ::xml_schema::container* c = 0);

      IdentificationList (const IdentificationList& x,
                          ::xml_schema::flags f = 0,
                          ::xml_schema::container* c = 0);

      virtual IdentificationList*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~IdentificationList ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Identification_sequence Identification_;
      Identification_REF_sequence Identification_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class FileDescriptors: public ::st434::s377m::types::StrongRefArray
    {
      public:
      // FileDescriptor
      // 
      typedef ::st434::s377m::groups::FileDescriptorType FileDescriptor_type;
      typedef ::xsd::cxx::tree::sequence< FileDescriptor_type > FileDescriptor_sequence;
      typedef FileDescriptor_sequence::iterator FileDescriptor_iterator;
      typedef FileDescriptor_sequence::const_iterator FileDescriptor_const_iterator;
      typedef ::xsd::cxx::tree::traits< FileDescriptor_type, char > FileDescriptor_traits;

      const FileDescriptor_sequence&
      FileDescriptor () const;

      FileDescriptor_sequence&
      FileDescriptor ();

      void
      FileDescriptor (const FileDescriptor_sequence& s);

      // FileDescriptor_REF
      // 
      typedef ::st434::s377m::types::Ref FileDescriptor_REF_type;
      typedef ::xsd::cxx::tree::sequence< FileDescriptor_REF_type > FileDescriptor_REF_sequence;
      typedef FileDescriptor_REF_sequence::iterator FileDescriptor_REF_iterator;
      typedef FileDescriptor_REF_sequence::const_iterator FileDescriptor_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< FileDescriptor_REF_type, char > FileDescriptor_REF_traits;

      const FileDescriptor_REF_sequence&
      FileDescriptor_REF () const;

      FileDescriptor_REF_sequence&
      FileDescriptor_REF ();

      void
      FileDescriptor_REF (const FileDescriptor_REF_sequence& s);

      // PictureDescriptor_REF
      // 
      typedef ::st434::s377m::types::Ref PictureDescriptor_REF_type;
      typedef ::xsd::cxx::tree::sequence< PictureDescriptor_REF_type > PictureDescriptor_REF_sequence;
      typedef PictureDescriptor_REF_sequence::iterator PictureDescriptor_REF_iterator;
      typedef PictureDescriptor_REF_sequence::const_iterator PictureDescriptor_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< PictureDescriptor_REF_type, char > PictureDescriptor_REF_traits;

      const PictureDescriptor_REF_sequence&
      PictureDescriptor_REF () const;

      PictureDescriptor_REF_sequence&
      PictureDescriptor_REF ();

      void
      PictureDescriptor_REF (const PictureDescriptor_REF_sequence& s);

      // PictureDescriptor
      // 
      typedef ::st434::s377m::groups::PictureDescriptorType PictureDescriptor_type;
      typedef ::xsd::cxx::tree::sequence< PictureDescriptor_type > PictureDescriptor_sequence;
      typedef PictureDescriptor_sequence::iterator PictureDescriptor_iterator;
      typedef PictureDescriptor_sequence::const_iterator PictureDescriptor_const_iterator;
      typedef ::xsd::cxx::tree::traits< PictureDescriptor_type, char > PictureDescriptor_traits;

      const PictureDescriptor_sequence&
      PictureDescriptor () const;

      PictureDescriptor_sequence&
      PictureDescriptor ();

      void
      PictureDescriptor (const PictureDescriptor_sequence& s);

      // CDCIDescriptor_REF
      // 
      typedef ::st434::s377m::types::Ref CDCIDescriptor_REF_type;
      typedef ::xsd::cxx::tree::sequence< CDCIDescriptor_REF_type > CDCIDescriptor_REF_sequence;
      typedef CDCIDescriptor_REF_sequence::iterator CDCIDescriptor_REF_iterator;
      typedef CDCIDescriptor_REF_sequence::const_iterator CDCIDescriptor_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< CDCIDescriptor_REF_type, char > CDCIDescriptor_REF_traits;

      const CDCIDescriptor_REF_sequence&
      CDCIDescriptor_REF () const;

      CDCIDescriptor_REF_sequence&
      CDCIDescriptor_REF ();

      void
      CDCIDescriptor_REF (const CDCIDescriptor_REF_sequence& s);

      // CDCIDescriptor
      // 
      typedef ::st434::s377m::groups::CDCIDescriptorType CDCIDescriptor_type;
      typedef ::xsd::cxx::tree::sequence< CDCIDescriptor_type > CDCIDescriptor_sequence;
      typedef CDCIDescriptor_sequence::iterator CDCIDescriptor_iterator;
      typedef CDCIDescriptor_sequence::const_iterator CDCIDescriptor_const_iterator;
      typedef ::xsd::cxx::tree::traits< CDCIDescriptor_type, char > CDCIDescriptor_traits;

      const CDCIDescriptor_sequence&
      CDCIDescriptor () const;

      CDCIDescriptor_sequence&
      CDCIDescriptor ();

      void
      CDCIDescriptor (const CDCIDescriptor_sequence& s);

      // RGBADescriptor_REF
      // 
      typedef ::st434::s377m::types::Ref RGBADescriptor_REF_type;
      typedef ::xsd::cxx::tree::sequence< RGBADescriptor_REF_type > RGBADescriptor_REF_sequence;
      typedef RGBADescriptor_REF_sequence::iterator RGBADescriptor_REF_iterator;
      typedef RGBADescriptor_REF_sequence::const_iterator RGBADescriptor_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< RGBADescriptor_REF_type, char > RGBADescriptor_REF_traits;

      const RGBADescriptor_REF_sequence&
      RGBADescriptor_REF () const;

      RGBADescriptor_REF_sequence&
      RGBADescriptor_REF ();

      void
      RGBADescriptor_REF (const RGBADescriptor_REF_sequence& s);

      // RGBADescriptor
      // 
      typedef ::st434::s377m::groups::RGBADescriptorType RGBADescriptor_type;
      typedef ::xsd::cxx::tree::sequence< RGBADescriptor_type > RGBADescriptor_sequence;
      typedef RGBADescriptor_sequence::iterator RGBADescriptor_iterator;
      typedef RGBADescriptor_sequence::const_iterator RGBADescriptor_const_iterator;
      typedef ::xsd::cxx::tree::traits< RGBADescriptor_type, char > RGBADescriptor_traits;

      const RGBADescriptor_sequence&
      RGBADescriptor () const;

      RGBADescriptor_sequence&
      RGBADescriptor ();

      void
      RGBADescriptor (const RGBADescriptor_sequence& s);

      // SoundDescriptor_REF
      // 
      typedef ::st434::s377m::types::Ref SoundDescriptor_REF_type;
      typedef ::xsd::cxx::tree::sequence< SoundDescriptor_REF_type > SoundDescriptor_REF_sequence;
      typedef SoundDescriptor_REF_sequence::iterator SoundDescriptor_REF_iterator;
      typedef SoundDescriptor_REF_sequence::const_iterator SoundDescriptor_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< SoundDescriptor_REF_type, char > SoundDescriptor_REF_traits;

      const SoundDescriptor_REF_sequence&
      SoundDescriptor_REF () const;

      SoundDescriptor_REF_sequence&
      SoundDescriptor_REF ();

      void
      SoundDescriptor_REF (const SoundDescriptor_REF_sequence& s);

      // SoundDescriptor
      // 
      typedef ::st434::s377m::groups::SoundDescriptorType SoundDescriptor_type;
      typedef ::xsd::cxx::tree::sequence< SoundDescriptor_type > SoundDescriptor_sequence;
      typedef SoundDescriptor_sequence::iterator SoundDescriptor_iterator;
      typedef SoundDescriptor_sequence::const_iterator SoundDescriptor_const_iterator;
      typedef ::xsd::cxx::tree::traits< SoundDescriptor_type, char > SoundDescriptor_traits;

      const SoundDescriptor_sequence&
      SoundDescriptor () const;

      SoundDescriptor_sequence&
      SoundDescriptor ();

      void
      SoundDescriptor (const SoundDescriptor_sequence& s);

      // DataEssenceDescriptor_REF
      // 
      typedef ::st434::s377m::types::Ref DataEssenceDescriptor_REF_type;
      typedef ::xsd::cxx::tree::sequence< DataEssenceDescriptor_REF_type > DataEssenceDescriptor_REF_sequence;
      typedef DataEssenceDescriptor_REF_sequence::iterator DataEssenceDescriptor_REF_iterator;
      typedef DataEssenceDescriptor_REF_sequence::const_iterator DataEssenceDescriptor_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DataEssenceDescriptor_REF_type, char > DataEssenceDescriptor_REF_traits;

      const DataEssenceDescriptor_REF_sequence&
      DataEssenceDescriptor_REF () const;

      DataEssenceDescriptor_REF_sequence&
      DataEssenceDescriptor_REF ();

      void
      DataEssenceDescriptor_REF (const DataEssenceDescriptor_REF_sequence& s);

      // DataEssenceDescriptor
      // 
      typedef ::st434::s377m::groups::DataEssenceDescriptorType DataEssenceDescriptor_type;
      typedef ::xsd::cxx::tree::sequence< DataEssenceDescriptor_type > DataEssenceDescriptor_sequence;
      typedef DataEssenceDescriptor_sequence::iterator DataEssenceDescriptor_iterator;
      typedef DataEssenceDescriptor_sequence::const_iterator DataEssenceDescriptor_const_iterator;
      typedef ::xsd::cxx::tree::traits< DataEssenceDescriptor_type, char > DataEssenceDescriptor_traits;

      const DataEssenceDescriptor_sequence&
      DataEssenceDescriptor () const;

      DataEssenceDescriptor_sequence&
      DataEssenceDescriptor ();

      void
      DataEssenceDescriptor (const DataEssenceDescriptor_sequence& s);

      // MPEGVideoDescriptor_REF
      // 
      typedef ::st434::s377m::types::Ref MPEGVideoDescriptor_REF_type;
      typedef ::xsd::cxx::tree::sequence< MPEGVideoDescriptor_REF_type > MPEGVideoDescriptor_REF_sequence;
      typedef MPEGVideoDescriptor_REF_sequence::iterator MPEGVideoDescriptor_REF_iterator;
      typedef MPEGVideoDescriptor_REF_sequence::const_iterator MPEGVideoDescriptor_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< MPEGVideoDescriptor_REF_type, char > MPEGVideoDescriptor_REF_traits;

      const MPEGVideoDescriptor_REF_sequence&
      MPEGVideoDescriptor_REF () const;

      MPEGVideoDescriptor_REF_sequence&
      MPEGVideoDescriptor_REF ();

      void
      MPEGVideoDescriptor_REF (const MPEGVideoDescriptor_REF_sequence& s);

      // MPEGVideoDescriptor
      // 
      typedef ::st434::s381m::groups::MPEGVideoDescriptorType MPEGVideoDescriptor_type;
      typedef ::xsd::cxx::tree::sequence< MPEGVideoDescriptor_type > MPEGVideoDescriptor_sequence;
      typedef MPEGVideoDescriptor_sequence::iterator MPEGVideoDescriptor_iterator;
      typedef MPEGVideoDescriptor_sequence::const_iterator MPEGVideoDescriptor_const_iterator;
      typedef ::xsd::cxx::tree::traits< MPEGVideoDescriptor_type, char > MPEGVideoDescriptor_traits;

      const MPEGVideoDescriptor_sequence&
      MPEGVideoDescriptor () const;

      MPEGVideoDescriptor_sequence&
      MPEGVideoDescriptor ();

      void
      MPEGVideoDescriptor (const MPEGVideoDescriptor_sequence& s);

      // DateTimeDescriptor_REF
      // 
      typedef ::st434::s377m::types::Ref DateTimeDescriptor_REF_type;
      typedef ::xsd::cxx::tree::sequence< DateTimeDescriptor_REF_type > DateTimeDescriptor_REF_sequence;
      typedef DateTimeDescriptor_REF_sequence::iterator DateTimeDescriptor_REF_iterator;
      typedef DateTimeDescriptor_REF_sequence::const_iterator DateTimeDescriptor_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DateTimeDescriptor_REF_type, char > DateTimeDescriptor_REF_traits;

      const DateTimeDescriptor_REF_sequence&
      DateTimeDescriptor_REF () const;

      DateTimeDescriptor_REF_sequence&
      DateTimeDescriptor_REF ();

      void
      DateTimeDescriptor_REF (const DateTimeDescriptor_REF_sequence& s);

      // DateTimeDescriptor
      // 
      typedef ::st434::s385m::groups::DateTimeDescriptorType DateTimeDescriptor_type;
      typedef ::xsd::cxx::tree::sequence< DateTimeDescriptor_type > DateTimeDescriptor_sequence;
      typedef DateTimeDescriptor_sequence::iterator DateTimeDescriptor_iterator;
      typedef DateTimeDescriptor_sequence::const_iterator DateTimeDescriptor_const_iterator;
      typedef ::xsd::cxx::tree::traits< DateTimeDescriptor_type, char > DateTimeDescriptor_traits;

      const DateTimeDescriptor_sequence&
      DateTimeDescriptor () const;

      DateTimeDescriptor_sequence&
      DateTimeDescriptor ();

      void
      DateTimeDescriptor (const DateTimeDescriptor_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      FileDescriptors ();

      FileDescriptors (const ::xercesc::DOMElement& e,
                       ::xml_schema::flags f = 0,
                       ::xml_schema::container* c = 0);

      FileDescriptors (const FileDescriptors& x,
                       ::xml_schema::flags f = 0,
                       ::xml_schema::container* c = 0);

      virtual FileDescriptors*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~FileDescriptors ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      FileDescriptor_sequence FileDescriptor_;
      FileDescriptor_REF_sequence FileDescriptor_REF_;
      PictureDescriptor_REF_sequence PictureDescriptor_REF_;
      PictureDescriptor_sequence PictureDescriptor_;
      CDCIDescriptor_REF_sequence CDCIDescriptor_REF_;
      CDCIDescriptor_sequence CDCIDescriptor_;
      RGBADescriptor_REF_sequence RGBADescriptor_REF_;
      RGBADescriptor_sequence RGBADescriptor_;
      SoundDescriptor_REF_sequence SoundDescriptor_REF_;
      SoundDescriptor_sequence SoundDescriptor_;
      DataEssenceDescriptor_REF_sequence DataEssenceDescriptor_REF_;
      DataEssenceDescriptor_sequence DataEssenceDescriptor_;
      MPEGVideoDescriptor_REF_sequence MPEGVideoDescriptor_REF_;
      MPEGVideoDescriptor_sequence MPEGVideoDescriptor_;
      DateTimeDescriptor_REF_sequence DateTimeDescriptor_REF_;
      DateTimeDescriptor_sequence DateTimeDescriptor_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class UnknownBWFChunks: public ::st434::s377m::types::StrongRefArray
    {
      public:
      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      UnknownBWFChunks ();

      UnknownBWFChunks (const ::xercesc::DOMElement& e,
                        ::xml_schema::flags f = 0,
                        ::xml_schema::container* c = 0);

      UnknownBWFChunks (const UnknownBWFChunks& x,
                        ::xml_schema::flags f = 0,
                        ::xml_schema::container* c = 0);

      virtual UnknownBWFChunks*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~UnknownBWFChunks ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class PictureFormatObject: public ::st434::s377m::types::StrongRefHolder
    {
      public:
      // PictureFormat
      // 
      typedef ::st434::s380m::groups::PictureFormatType PictureFormat_type;
      typedef ::xsd::cxx::tree::optional< PictureFormat_type > PictureFormat_optional;
      typedef ::xsd::cxx::tree::traits< PictureFormat_type, char > PictureFormat_traits;

      const PictureFormat_optional&
      PictureFormat () const;

      PictureFormat_optional&
      PictureFormat ();

      void
      PictureFormat (const PictureFormat_type& x);

      void
      PictureFormat (const PictureFormat_optional& x);

      void
      PictureFormat (::std::auto_ptr< PictureFormat_type > p);

      // PictureFormat_REF
      // 
      typedef ::st434::s377m::types::Ref PictureFormat_REF_type;
      typedef ::xsd::cxx::tree::optional< PictureFormat_REF_type > PictureFormat_REF_optional;
      typedef ::xsd::cxx::tree::traits< PictureFormat_REF_type, char > PictureFormat_REF_traits;

      const PictureFormat_REF_optional&
      PictureFormat_REF () const;

      PictureFormat_REF_optional&
      PictureFormat_REF ();

      void
      PictureFormat_REF (const PictureFormat_REF_type& x);

      void
      PictureFormat_REF (const PictureFormat_REF_optional& x);

      void
      PictureFormat_REF (::std::auto_ptr< PictureFormat_REF_type > p);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::optional< DarkGroup_REF_type > DarkGroup_REF_optional;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_optional&
      DarkGroup_REF () const;

      DarkGroup_REF_optional&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_type& x);

      void
      DarkGroup_REF (const DarkGroup_REF_optional& x);

      void
      DarkGroup_REF (::std::auto_ptr< DarkGroup_REF_type > p);

      // Constructors.
      //
      PictureFormatObject ();

      PictureFormatObject (const ::xercesc::DOMElement& e,
                           ::xml_schema::flags f = 0,
                           ::xml_schema::container* c = 0);

      PictureFormatObject (const PictureFormatObject& x,
                           ::xml_schema::flags f = 0,
                           ::xml_schema::container* c = 0);

      virtual PictureFormatObject*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~PictureFormatObject ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      PictureFormat_optional PictureFormat_;
      PictureFormat_REF_optional PictureFormat_REF_;
      DarkGroup_REF_optional DarkGroup_REF_;
    };

    class ProjectObject: public ::st434::s377m::types::StrongRefHolder
    {
      public:
      // Project
      // 
      typedef ::st434::s380m::groups::ProjectType Project_type;
      typedef ::xsd::cxx::tree::optional< Project_type > Project_optional;
      typedef ::xsd::cxx::tree::traits< Project_type, char > Project_traits;

      const Project_optional&
      Project () const;

      Project_optional&
      Project ();

      void
      Project (const Project_type& x);

      void
      Project (const Project_optional& x);

      void
      Project (::std::auto_ptr< Project_type > p);

      // Project_REF
      // 
      typedef ::st434::s377m::types::Ref Project_REF_type;
      typedef ::xsd::cxx::tree::optional< Project_REF_type > Project_REF_optional;
      typedef ::xsd::cxx::tree::traits< Project_REF_type, char > Project_REF_traits;

      const Project_REF_optional&
      Project_REF () const;

      Project_REF_optional&
      Project_REF ();

      void
      Project_REF (const Project_REF_type& x);

      void
      Project_REF (const Project_REF_optional& x);

      void
      Project_REF (::std::auto_ptr< Project_REF_type > p);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::optional< DarkGroup_REF_type > DarkGroup_REF_optional;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_optional&
      DarkGroup_REF () const;

      DarkGroup_REF_optional&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_type& x);

      void
      DarkGroup_REF (const DarkGroup_REF_optional& x);

      void
      DarkGroup_REF (::std::auto_ptr< DarkGroup_REF_type > p);

      // Constructors.
      //
      ProjectObject ();

      ProjectObject (const ::xercesc::DOMElement& e,
                     ::xml_schema::flags f = 0,
                     ::xml_schema::container* c = 0);

      ProjectObject (const ProjectObject& x,
                     ::xml_schema::flags f = 0,
                     ::xml_schema::container* c = 0);

      virtual ProjectObject*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~ProjectObject ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Project_optional Project_;
      Project_REF_optional Project_REF_;
      DarkGroup_REF_optional DarkGroup_REF_;
    };

    class GroupRelationshipObjects: public ::st434::s377m::types::StrongRefHolder
    {
      public:
      // GroupRelationship
      // 
      typedef ::st434::s380m::groups::GroupRelationshipType GroupRelationship_type;
      typedef ::xsd::cxx::tree::optional< GroupRelationship_type > GroupRelationship_optional;
      typedef ::xsd::cxx::tree::traits< GroupRelationship_type, char > GroupRelationship_traits;

      const GroupRelationship_optional&
      GroupRelationship () const;

      GroupRelationship_optional&
      GroupRelationship ();

      void
      GroupRelationship (const GroupRelationship_type& x);

      void
      GroupRelationship (const GroupRelationship_optional& x);

      void
      GroupRelationship (::std::auto_ptr< GroupRelationship_type > p);

      // GroupRelationship_REF
      // 
      typedef ::st434::s377m::types::Ref GroupRelationship_REF_type;
      typedef ::xsd::cxx::tree::optional< GroupRelationship_REF_type > GroupRelationship_REF_optional;
      typedef ::xsd::cxx::tree::traits< GroupRelationship_REF_type, char > GroupRelationship_REF_traits;

      const GroupRelationship_REF_optional&
      GroupRelationship_REF () const;

      GroupRelationship_REF_optional&
      GroupRelationship_REF ();

      void
      GroupRelationship_REF (const GroupRelationship_REF_type& x);

      void
      GroupRelationship_REF (const GroupRelationship_REF_optional& x);

      void
      GroupRelationship_REF (::std::auto_ptr< GroupRelationship_REF_type > p);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::optional< DarkGroup_REF_type > DarkGroup_REF_optional;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_optional&
      DarkGroup_REF () const;

      DarkGroup_REF_optional&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_type& x);

      void
      DarkGroup_REF (const DarkGroup_REF_optional& x);

      void
      DarkGroup_REF (::std::auto_ptr< DarkGroup_REF_type > p);

      // Constructors.
      //
      GroupRelationshipObjects ();

      GroupRelationshipObjects (const ::xercesc::DOMElement& e,
                                ::xml_schema::flags f = 0,
                                ::xml_schema::container* c = 0);

      GroupRelationshipObjects (const GroupRelationshipObjects& x,
                                ::xml_schema::flags f = 0,
                                ::xml_schema::container* c = 0);

      virtual GroupRelationshipObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~GroupRelationshipObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      GroupRelationship_optional GroupRelationship_;
      GroupRelationship_REF_optional GroupRelationship_REF_;
      DarkGroup_REF_optional DarkGroup_REF_;
    };

    class ProcessingObject: public ::st434::s377m::types::StrongRefHolder
    {
      public:
      // Processing
      // 
      typedef ::st434::s380m::groups::ProcessingType Processing_type;
      typedef ::xsd::cxx::tree::optional< Processing_type > Processing_optional;
      typedef ::xsd::cxx::tree::traits< Processing_type, char > Processing_traits;

      const Processing_optional&
      Processing () const;

      Processing_optional&
      Processing ();

      void
      Processing (const Processing_type& x);

      void
      Processing (const Processing_optional& x);

      void
      Processing (::std::auto_ptr< Processing_type > p);

      // Processing_REF
      // 
      typedef ::st434::s377m::types::Ref Processing_REF_type;
      typedef ::xsd::cxx::tree::optional< Processing_REF_type > Processing_REF_optional;
      typedef ::xsd::cxx::tree::traits< Processing_REF_type, char > Processing_REF_traits;

      const Processing_REF_optional&
      Processing_REF () const;

      Processing_REF_optional&
      Processing_REF ();

      void
      Processing_REF (const Processing_REF_type& x);

      void
      Processing_REF (const Processing_REF_optional& x);

      void
      Processing_REF (::std::auto_ptr< Processing_REF_type > p);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::optional< DarkGroup_REF_type > DarkGroup_REF_optional;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_optional&
      DarkGroup_REF () const;

      DarkGroup_REF_optional&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_type& x);

      void
      DarkGroup_REF (const DarkGroup_REF_optional& x);

      void
      DarkGroup_REF (::std::auto_ptr< DarkGroup_REF_type > p);

      // Constructors.
      //
      ProcessingObject ();

      ProcessingObject (const ::xercesc::DOMElement& e,
                        ::xml_schema::flags f = 0,
                        ::xml_schema::container* c = 0);

      ProcessingObject (const ProcessingObject& x,
                        ::xml_schema::flags f = 0,
                        ::xml_schema::container* c = 0);

      virtual ProcessingObject*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~ProcessingObject ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Processing_optional Processing_;
      Processing_REF_optional Processing_REF_;
      DarkGroup_REF_optional DarkGroup_REF_;
    };

    class ContactsListObject: public ::st434::s377m::types::StrongRefHolder
    {
      public:
      // ContactsList
      // 
      typedef ::st434::s380m::groups::ContactsListType ContactsList_type;
      typedef ::xsd::cxx::tree::optional< ContactsList_type > ContactsList_optional;
      typedef ::xsd::cxx::tree::traits< ContactsList_type, char > ContactsList_traits;

      const ContactsList_optional&
      ContactsList () const;

      ContactsList_optional&
      ContactsList ();

      void
      ContactsList (const ContactsList_type& x);

      void
      ContactsList (const ContactsList_optional& x);

      void
      ContactsList (::std::auto_ptr< ContactsList_type > p);

      // ContactsList_REF
      // 
      typedef ::st434::s377m::types::Ref ContactsList_REF_type;
      typedef ::xsd::cxx::tree::optional< ContactsList_REF_type > ContactsList_REF_optional;
      typedef ::xsd::cxx::tree::traits< ContactsList_REF_type, char > ContactsList_REF_traits;

      const ContactsList_REF_optional&
      ContactsList_REF () const;

      ContactsList_REF_optional&
      ContactsList_REF ();

      void
      ContactsList_REF (const ContactsList_REF_type& x);

      void
      ContactsList_REF (const ContactsList_REF_optional& x);

      void
      ContactsList_REF (::std::auto_ptr< ContactsList_REF_type > p);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::optional< DarkGroup_REF_type > DarkGroup_REF_optional;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_optional&
      DarkGroup_REF () const;

      DarkGroup_REF_optional&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_type& x);

      void
      DarkGroup_REF (const DarkGroup_REF_optional& x);

      void
      DarkGroup_REF (::std::auto_ptr< DarkGroup_REF_type > p);

      // Constructors.
      //
      ContactsListObject ();

      ContactsListObject (const ::xercesc::DOMElement& e,
                          ::xml_schema::flags f = 0,
                          ::xml_schema::container* c = 0);

      ContactsListObject (const ContactsListObject& x,
                          ::xml_schema::flags f = 0,
                          ::xml_schema::container* c = 0);

      virtual ContactsListObject*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~ContactsListObject ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      ContactsList_optional ContactsList_;
      ContactsList_REF_optional ContactsList_REF_;
      DarkGroup_REF_optional DarkGroup_REF_;
    };

    class AnnotationCueWordsObject: public ::st434::s377m::types::StrongRefHolder
    {
      public:
      // CueWords
      // 
      typedef ::st434::s380m::groups::CueWordsType CueWords_type;
      typedef ::xsd::cxx::tree::optional< CueWords_type > CueWords_optional;
      typedef ::xsd::cxx::tree::traits< CueWords_type, char > CueWords_traits;

      const CueWords_optional&
      CueWords () const;

      CueWords_optional&
      CueWords ();

      void
      CueWords (const CueWords_type& x);

      void
      CueWords (const CueWords_optional& x);

      void
      CueWords (::std::auto_ptr< CueWords_type > p);

      // CueWords_REF
      // 
      typedef ::st434::s377m::types::Ref CueWords_REF_type;
      typedef ::xsd::cxx::tree::optional< CueWords_REF_type > CueWords_REF_optional;
      typedef ::xsd::cxx::tree::traits< CueWords_REF_type, char > CueWords_REF_traits;

      const CueWords_REF_optional&
      CueWords_REF () const;

      CueWords_REF_optional&
      CueWords_REF ();

      void
      CueWords_REF (const CueWords_REF_type& x);

      void
      CueWords_REF (const CueWords_REF_optional& x);

      void
      CueWords_REF (::std::auto_ptr< CueWords_REF_type > p);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::optional< DarkGroup_REF_type > DarkGroup_REF_optional;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_optional&
      DarkGroup_REF () const;

      DarkGroup_REF_optional&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_type& x);

      void
      DarkGroup_REF (const DarkGroup_REF_optional& x);

      void
      DarkGroup_REF (::std::auto_ptr< DarkGroup_REF_type > p);

      // Constructors.
      //
      AnnotationCueWordsObject ();

      AnnotationCueWordsObject (const ::xercesc::DOMElement& e,
                                ::xml_schema::flags f = 0,
                                ::xml_schema::container* c = 0);

      AnnotationCueWordsObject (const AnnotationCueWordsObject& x,
                                ::xml_schema::flags f = 0,
                                ::xml_schema::container* c = 0);

      virtual AnnotationCueWordsObject*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~AnnotationCueWordsObject ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      CueWords_optional CueWords_;
      CueWords_REF_optional CueWords_REF_;
      DarkGroup_REF_optional DarkGroup_REF_;
    };

    class ShotCueWordsObject: public ::st434::s377m::types::StrongRefHolder
    {
      public:
      // CueWords
      // 
      typedef ::st434::s380m::groups::CueWordsType CueWords_type;
      typedef ::xsd::cxx::tree::optional< CueWords_type > CueWords_optional;
      typedef ::xsd::cxx::tree::traits< CueWords_type, char > CueWords_traits;

      const CueWords_optional&
      CueWords () const;

      CueWords_optional&
      CueWords ();

      void
      CueWords (const CueWords_type& x);

      void
      CueWords (const CueWords_optional& x);

      void
      CueWords (::std::auto_ptr< CueWords_type > p);

      // CueWords_REF
      // 
      typedef ::st434::s377m::types::Ref CueWords_REF_type;
      typedef ::xsd::cxx::tree::optional< CueWords_REF_type > CueWords_REF_optional;
      typedef ::xsd::cxx::tree::traits< CueWords_REF_type, char > CueWords_REF_traits;

      const CueWords_REF_optional&
      CueWords_REF () const;

      CueWords_REF_optional&
      CueWords_REF ();

      void
      CueWords_REF (const CueWords_REF_type& x);

      void
      CueWords_REF (const CueWords_REF_optional& x);

      void
      CueWords_REF (::std::auto_ptr< CueWords_REF_type > p);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::optional< DarkGroup_REF_type > DarkGroup_REF_optional;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_optional&
      DarkGroup_REF () const;

      DarkGroup_REF_optional&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_type& x);

      void
      DarkGroup_REF (const DarkGroup_REF_optional& x);

      void
      DarkGroup_REF (::std::auto_ptr< DarkGroup_REF_type > p);

      // Constructors.
      //
      ShotCueWordsObject ();

      ShotCueWordsObject (const ::xercesc::DOMElement& e,
                          ::xml_schema::flags f = 0,
                          ::xml_schema::container* c = 0);

      ShotCueWordsObject (const ShotCueWordsObject& x,
                          ::xml_schema::flags f = 0,
                          ::xml_schema::container* c = 0);

      virtual ShotCueWordsObject*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~ShotCueWordsObject ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      CueWords_optional CueWords_;
      CueWords_REF_optional CueWords_REF_;
      DarkGroup_REF_optional DarkGroup_REF_;
    };

    class AwardParticipants: public ::st434::s377m::types::WeakRefBatch
    {
      public:
      // Participant
      // 
      typedef ::st434::s380m::groups::ParticipantType Participant_type;
      typedef ::xsd::cxx::tree::sequence< Participant_type > Participant_sequence;
      typedef Participant_sequence::iterator Participant_iterator;
      typedef Participant_sequence::const_iterator Participant_const_iterator;
      typedef ::xsd::cxx::tree::traits< Participant_type, char > Participant_traits;

      const Participant_sequence&
      Participant () const;

      Participant_sequence&
      Participant ();

      void
      Participant (const Participant_sequence& s);

      // Participant_REF
      // 
      typedef ::st434::s377m::types::Ref Participant_REF_type;
      typedef ::xsd::cxx::tree::sequence< Participant_REF_type > Participant_REF_sequence;
      typedef Participant_REF_sequence::iterator Participant_REF_iterator;
      typedef Participant_REF_sequence::const_iterator Participant_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Participant_REF_type, char > Participant_REF_traits;

      const Participant_REF_sequence&
      Participant_REF () const;

      Participant_REF_sequence&
      Participant_REF ();

      void
      Participant_REF (const Participant_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      AwardParticipants ();

      AwardParticipants (const ::xercesc::DOMElement& e,
                         ::xml_schema::flags f = 0,
                         ::xml_schema::container* c = 0);

      AwardParticipants (const AwardParticipants& x,
                         ::xml_schema::flags f = 0,
                         ::xml_schema::container* c = 0);

      virtual AwardParticipants*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~AwardParticipants ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Participant_sequence Participant_;
      Participant_REF_sequence Participant_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class ContractParticipants: public ::st434::s377m::types::WeakRefBatch
    {
      public:
      // Participant
      // 
      typedef ::st434::s380m::groups::ParticipantType Participant_type;
      typedef ::xsd::cxx::tree::sequence< Participant_type > Participant_sequence;
      typedef Participant_sequence::iterator Participant_iterator;
      typedef Participant_sequence::const_iterator Participant_const_iterator;
      typedef ::xsd::cxx::tree::traits< Participant_type, char > Participant_traits;

      const Participant_sequence&
      Participant () const;

      Participant_sequence&
      Participant ();

      void
      Participant (const Participant_sequence& s);

      // Participant_REF
      // 
      typedef ::st434::s377m::types::Ref Participant_REF_type;
      typedef ::xsd::cxx::tree::sequence< Participant_REF_type > Participant_REF_sequence;
      typedef Participant_REF_sequence::iterator Participant_REF_iterator;
      typedef Participant_REF_sequence::const_iterator Participant_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Participant_REF_type, char > Participant_REF_traits;

      const Participant_REF_sequence&
      Participant_REF () const;

      Participant_REF_sequence&
      Participant_REF ();

      void
      Participant_REF (const Participant_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      ContractParticipants ();

      ContractParticipants (const ::xercesc::DOMElement& e,
                            ::xml_schema::flags f = 0,
                            ::xml_schema::container* c = 0);

      ContractParticipants (const ContractParticipants& x,
                            ::xml_schema::flags f = 0,
                            ::xml_schema::container* c = 0);

      virtual ContractParticipants*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~ContractParticipants ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Participant_sequence Participant_;
      Participant_REF_sequence Participant_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class Persons: public ::st434::s377m::types::WeakRefBatch
    {
      public:
      // Person
      // 
      typedef ::st434::s380m::groups::PersonType Person_type;
      typedef ::xsd::cxx::tree::sequence< Person_type > Person_sequence;
      typedef Person_sequence::iterator Person_iterator;
      typedef Person_sequence::const_iterator Person_const_iterator;
      typedef ::xsd::cxx::tree::traits< Person_type, char > Person_traits;

      const Person_sequence&
      Person () const;

      Person_sequence&
      Person ();

      void
      Person (const Person_sequence& s);

      // Person_REF
      // 
      typedef ::st434::s377m::types::Ref Person_REF_type;
      typedef ::xsd::cxx::tree::sequence< Person_REF_type > Person_REF_sequence;
      typedef Person_REF_sequence::iterator Person_REF_iterator;
      typedef Person_REF_sequence::const_iterator Person_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Person_REF_type, char > Person_REF_traits;

      const Person_REF_sequence&
      Person_REF () const;

      Person_REF_sequence&
      Person_REF ();

      void
      Person_REF (const Person_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      Persons ();

      Persons (const ::xercesc::DOMElement& e,
               ::xml_schema::flags f = 0,
               ::xml_schema::container* c = 0);

      Persons (const Persons& x,
               ::xml_schema::flags f = 0,
               ::xml_schema::container* c = 0);

      virtual Persons*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~Persons ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Person_sequence Person_;
      Person_REF_sequence Person_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class ParticipantOrganizations: public ::st434::s377m::types::WeakRefBatch
    {
      public:
      // Organization
      // 
      typedef ::st434::s380m::groups::OrganizationType Organization_type;
      typedef ::xsd::cxx::tree::sequence< Organization_type > Organization_sequence;
      typedef Organization_sequence::iterator Organization_iterator;
      typedef Organization_sequence::const_iterator Organization_const_iterator;
      typedef ::xsd::cxx::tree::traits< Organization_type, char > Organization_traits;

      const Organization_sequence&
      Organization () const;

      Organization_sequence&
      Organization ();

      void
      Organization (const Organization_sequence& s);

      // Organization_REF
      // 
      typedef ::st434::s377m::types::Ref Organization_REF_type;
      typedef ::xsd::cxx::tree::sequence< Organization_REF_type > Organization_REF_sequence;
      typedef Organization_REF_sequence::iterator Organization_REF_iterator;
      typedef Organization_REF_sequence::const_iterator Organization_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Organization_REF_type, char > Organization_REF_traits;

      const Organization_REF_sequence&
      Organization_REF () const;

      Organization_REF_sequence&
      Organization_REF ();

      void
      Organization_REF (const Organization_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      ParticipantOrganizations ();

      ParticipantOrganizations (const ::xercesc::DOMElement& e,
                                ::xml_schema::flags f = 0,
                                ::xml_schema::container* c = 0);

      ParticipantOrganizations (const ParticipantOrganizations& x,
                                ::xml_schema::flags f = 0,
                                ::xml_schema::container* c = 0);

      virtual ParticipantOrganizations*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~ParticipantOrganizations ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Organization_sequence Organization_;
      Organization_REF_sequence Organization_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class AddressNameValueObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // NameValue
      // 
      typedef ::st434::s380m::groups::NameValueType NameValue_type;
      typedef ::xsd::cxx::tree::sequence< NameValue_type > NameValue_sequence;
      typedef NameValue_sequence::iterator NameValue_iterator;
      typedef NameValue_sequence::const_iterator NameValue_const_iterator;
      typedef ::xsd::cxx::tree::traits< NameValue_type, char > NameValue_traits;

      const NameValue_sequence&
      NameValue () const;

      NameValue_sequence&
      NameValue ();

      void
      NameValue (const NameValue_sequence& s);

      // NameValue_REF
      // 
      typedef ::st434::s377m::types::Ref NameValue_REF_type;
      typedef ::xsd::cxx::tree::sequence< NameValue_REF_type > NameValue_REF_sequence;
      typedef NameValue_REF_sequence::iterator NameValue_REF_iterator;
      typedef NameValue_REF_sequence::const_iterator NameValue_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< NameValue_REF_type, char > NameValue_REF_traits;

      const NameValue_REF_sequence&
      NameValue_REF () const;

      NameValue_REF_sequence&
      NameValue_REF ();

      void
      NameValue_REF (const NameValue_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      AddressNameValueObjects ();

      AddressNameValueObjects (const ::xercesc::DOMElement& e,
                               ::xml_schema::flags f = 0,
                               ::xml_schema::container* c = 0);

      AddressNameValueObjects (const AddressNameValueObjects& x,
                               ::xml_schema::flags f = 0,
                               ::xml_schema::container* c = 0);

      virtual AddressNameValueObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~AddressNameValueObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      NameValue_sequence NameValue_;
      NameValue_REF_sequence NameValue_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class PersonOrganizations: public ::st434::s377m::types::WeakRefBatch
    {
      public:
      // Organization
      // 
      typedef ::st434::s380m::groups::OrganizationType Organization_type;
      typedef ::xsd::cxx::tree::sequence< Organization_type > Organization_sequence;
      typedef Organization_sequence::iterator Organization_iterator;
      typedef Organization_sequence::const_iterator Organization_const_iterator;
      typedef ::xsd::cxx::tree::traits< Organization_type, char > Organization_traits;

      const Organization_sequence&
      Organization () const;

      Organization_sequence&
      Organization ();

      void
      Organization (const Organization_sequence& s);

      // Organization_REF
      // 
      typedef ::st434::s377m::types::Ref Organization_REF_type;
      typedef ::xsd::cxx::tree::sequence< Organization_REF_type > Organization_REF_sequence;
      typedef Organization_REF_sequence::iterator Organization_REF_iterator;
      typedef Organization_REF_sequence::const_iterator Organization_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Organization_REF_type, char > Organization_REF_traits;

      const Organization_REF_sequence&
      Organization_REF () const;

      Organization_REF_sequence&
      Organization_REF ();

      void
      Organization_REF (const Organization_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      PersonOrganizations ();

      PersonOrganizations (const ::xercesc::DOMElement& e,
                           ::xml_schema::flags f = 0,
                           ::xml_schema::container* c = 0);

      PersonOrganizations (const PersonOrganizations& x,
                           ::xml_schema::flags f = 0,
                           ::xml_schema::container* c = 0);

      virtual PersonOrganizations*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~PersonOrganizations ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Organization_sequence Organization_;
      Organization_REF_sequence Organization_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class Locations: public ::st434::s377m::types::WeakRefBatch
    {
      public:
      // Location
      // 
      typedef ::st434::s380m::groups::LocationType Location_type;
      typedef ::xsd::cxx::tree::sequence< Location_type > Location_sequence;
      typedef Location_sequence::iterator Location_iterator;
      typedef Location_sequence::const_iterator Location_const_iterator;
      typedef ::xsd::cxx::tree::traits< Location_type, char > Location_traits;

      const Location_sequence&
      Location () const;

      Location_sequence&
      Location ();

      void
      Location (const Location_sequence& s);

      // Location_REF
      // 
      typedef ::st434::s377m::types::Ref Location_REF_type;
      typedef ::xsd::cxx::tree::sequence< Location_REF_type > Location_REF_sequence;
      typedef Location_REF_sequence::iterator Location_REF_iterator;
      typedef Location_REF_sequence::const_iterator Location_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Location_REF_type, char > Location_REF_traits;

      const Location_REF_sequence&
      Location_REF () const;

      Location_REF_sequence&
      Location_REF ();

      void
      Location_REF (const Location_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      Locations ();

      Locations (const ::xercesc::DOMElement& e,
                 ::xml_schema::flags f = 0,
                 ::xml_schema::container* c = 0);

      Locations (const Locations& x,
                 ::xml_schema::flags f = 0,
                 ::xml_schema::container* c = 0);

      virtual Locations*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~Locations ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Location_sequence Location_;
      Location_REF_sequence Location_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class TitlesObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // Titles
      // 
      typedef ::st434::s380m::groups::TitlesType Titles_type;
      typedef ::xsd::cxx::tree::sequence< Titles_type > Titles_sequence;
      typedef Titles_sequence::iterator Titles_iterator;
      typedef Titles_sequence::const_iterator Titles_const_iterator;
      typedef ::xsd::cxx::tree::traits< Titles_type, char > Titles_traits;

      const Titles_sequence&
      Titles () const;

      Titles_sequence&
      Titles ();

      void
      Titles (const Titles_sequence& s);

      // Titles_REF
      // 
      typedef ::st434::s377m::types::Ref Titles_REF_type;
      typedef ::xsd::cxx::tree::sequence< Titles_REF_type > Titles_REF_sequence;
      typedef Titles_REF_sequence::iterator Titles_REF_iterator;
      typedef Titles_REF_sequence::const_iterator Titles_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Titles_REF_type, char > Titles_REF_traits;

      const Titles_REF_sequence&
      Titles_REF () const;

      Titles_REF_sequence&
      Titles_REF ();

      void
      Titles_REF (const Titles_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      TitlesObjects ();

      TitlesObjects (const ::xercesc::DOMElement& e,
                     ::xml_schema::flags f = 0,
                     ::xml_schema::container* c = 0);

      TitlesObjects (const TitlesObjects& x,
                     ::xml_schema::flags f = 0,
                     ::xml_schema::container* c = 0);

      virtual TitlesObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~TitlesObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Titles_sequence Titles_;
      Titles_REF_sequence Titles_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class IdentificationObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // DMS1Identification
      // 
      typedef ::st434::s380m::groups::DMS1IdentificationType DMS1Identification_type;
      typedef ::xsd::cxx::tree::sequence< DMS1Identification_type > DMS1Identification_sequence;
      typedef DMS1Identification_sequence::iterator DMS1Identification_iterator;
      typedef DMS1Identification_sequence::const_iterator DMS1Identification_const_iterator;
      typedef ::xsd::cxx::tree::traits< DMS1Identification_type, char > DMS1Identification_traits;

      const DMS1Identification_sequence&
      DMS1Identification () const;

      DMS1Identification_sequence&
      DMS1Identification ();

      void
      DMS1Identification (const DMS1Identification_sequence& s);

      // DMS1Identification_REF
      // 
      typedef ::st434::s377m::types::Ref DMS1Identification_REF_type;
      typedef ::xsd::cxx::tree::sequence< DMS1Identification_REF_type > DMS1Identification_REF_sequence;
      typedef DMS1Identification_REF_sequence::iterator DMS1Identification_REF_iterator;
      typedef DMS1Identification_REF_sequence::const_iterator DMS1Identification_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DMS1Identification_REF_type, char > DMS1Identification_REF_traits;

      const DMS1Identification_REF_sequence&
      DMS1Identification_REF () const;

      DMS1Identification_REF_sequence&
      DMS1Identification_REF ();

      void
      DMS1Identification_REF (const DMS1Identification_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      IdentificationObjects ();

      IdentificationObjects (const ::xercesc::DOMElement& e,
                             ::xml_schema::flags f = 0,
                             ::xml_schema::container* c = 0);

      IdentificationObjects (const IdentificationObjects& x,
                             ::xml_schema::flags f = 0,
                             ::xml_schema::container* c = 0);

      virtual IdentificationObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~IdentificationObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      DMS1Identification_sequence DMS1Identification_;
      DMS1Identification_REF_sequence DMS1Identification_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class BrandingObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // Branding
      // 
      typedef ::st434::s380m::groups::BrandingType Branding_type;
      typedef ::xsd::cxx::tree::sequence< Branding_type > Branding_sequence;
      typedef Branding_sequence::iterator Branding_iterator;
      typedef Branding_sequence::const_iterator Branding_const_iterator;
      typedef ::xsd::cxx::tree::traits< Branding_type, char > Branding_traits;

      const Branding_sequence&
      Branding () const;

      Branding_sequence&
      Branding ();

      void
      Branding (const Branding_sequence& s);

      // Branding_REF
      // 
      typedef ::st434::s377m::types::Ref Branding_REF_type;
      typedef ::xsd::cxx::tree::sequence< Branding_REF_type > Branding_REF_sequence;
      typedef Branding_REF_sequence::iterator Branding_REF_iterator;
      typedef Branding_REF_sequence::const_iterator Branding_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Branding_REF_type, char > Branding_REF_traits;

      const Branding_REF_sequence&
      Branding_REF () const;

      Branding_REF_sequence&
      Branding_REF ();

      void
      Branding_REF (const Branding_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      BrandingObjects ();

      BrandingObjects (const ::xercesc::DOMElement& e,
                       ::xml_schema::flags f = 0,
                       ::xml_schema::container* c = 0);

      BrandingObjects (const BrandingObjects& x,
                       ::xml_schema::flags f = 0,
                       ::xml_schema::container* c = 0);

      virtual BrandingObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~BrandingObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Branding_sequence Branding_;
      Branding_REF_sequence Branding_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class EventObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // DMS1Event
      // 
      typedef ::st434::s380m::groups::DMS1EventType DMS1Event_type;
      typedef ::xsd::cxx::tree::sequence< DMS1Event_type > DMS1Event_sequence;
      typedef DMS1Event_sequence::iterator DMS1Event_iterator;
      typedef DMS1Event_sequence::const_iterator DMS1Event_const_iterator;
      typedef ::xsd::cxx::tree::traits< DMS1Event_type, char > DMS1Event_traits;

      const DMS1Event_sequence&
      DMS1Event () const;

      DMS1Event_sequence&
      DMS1Event ();

      void
      DMS1Event (const DMS1Event_sequence& s);

      // DMS1Event_REF
      // 
      typedef ::st434::s377m::types::Ref DMS1Event_REF_type;
      typedef ::xsd::cxx::tree::sequence< DMS1Event_REF_type > DMS1Event_REF_sequence;
      typedef DMS1Event_REF_sequence::iterator DMS1Event_REF_iterator;
      typedef DMS1Event_REF_sequence::const_iterator DMS1Event_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DMS1Event_REF_type, char > DMS1Event_REF_traits;

      const DMS1Event_REF_sequence&
      DMS1Event_REF () const;

      DMS1Event_REF_sequence&
      DMS1Event_REF ();

      void
      DMS1Event_REF (const DMS1Event_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      EventObjects ();

      EventObjects (const ::xercesc::DOMElement& e,
                    ::xml_schema::flags f = 0,
                    ::xml_schema::container* c = 0);

      EventObjects (const EventObjects& x,
                    ::xml_schema::flags f = 0,
                    ::xml_schema::container* c = 0);

      virtual EventObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~EventObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      DMS1Event_sequence DMS1Event_;
      DMS1Event_REF_sequence DMS1Event_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class EventAnnotationObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // DMS1Annotation
      // 
      typedef ::st434::s380m::groups::DMS1AnnotationType DMS1Annotation_type;
      typedef ::xsd::cxx::tree::sequence< DMS1Annotation_type > DMS1Annotation_sequence;
      typedef DMS1Annotation_sequence::iterator DMS1Annotation_iterator;
      typedef DMS1Annotation_sequence::const_iterator DMS1Annotation_const_iterator;
      typedef ::xsd::cxx::tree::traits< DMS1Annotation_type, char > DMS1Annotation_traits;

      const DMS1Annotation_sequence&
      DMS1Annotation () const;

      DMS1Annotation_sequence&
      DMS1Annotation ();

      void
      DMS1Annotation (const DMS1Annotation_sequence& s);

      // DMS1Annotation_REF
      // 
      typedef ::st434::s377m::types::Ref DMS1Annotation_REF_type;
      typedef ::xsd::cxx::tree::sequence< DMS1Annotation_REF_type > DMS1Annotation_REF_sequence;
      typedef DMS1Annotation_REF_sequence::iterator DMS1Annotation_REF_iterator;
      typedef DMS1Annotation_REF_sequence::const_iterator DMS1Annotation_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DMS1Annotation_REF_type, char > DMS1Annotation_REF_traits;

      const DMS1Annotation_REF_sequence&
      DMS1Annotation_REF () const;

      DMS1Annotation_REF_sequence&
      DMS1Annotation_REF ();

      void
      DMS1Annotation_REF (const DMS1Annotation_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      EventAnnotationObjects ();

      EventAnnotationObjects (const ::xercesc::DOMElement& e,
                              ::xml_schema::flags f = 0,
                              ::xml_schema::container* c = 0);

      EventAnnotationObjects (const EventAnnotationObjects& x,
                              ::xml_schema::flags f = 0,
                              ::xml_schema::container* c = 0);

      virtual EventAnnotationObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~EventAnnotationObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      DMS1Annotation_sequence DMS1Annotation_;
      DMS1Annotation_REF_sequence DMS1Annotation_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class AnnotationParticipants: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // Participant
      // 
      typedef ::st434::s380m::groups::ParticipantType Participant_type;
      typedef ::xsd::cxx::tree::sequence< Participant_type > Participant_sequence;
      typedef Participant_sequence::iterator Participant_iterator;
      typedef Participant_sequence::const_iterator Participant_const_iterator;
      typedef ::xsd::cxx::tree::traits< Participant_type, char > Participant_traits;

      const Participant_sequence&
      Participant () const;

      Participant_sequence&
      Participant ();

      void
      Participant (const Participant_sequence& s);

      // Participant_REF
      // 
      typedef ::st434::s377m::types::Ref Participant_REF_type;
      typedef ::xsd::cxx::tree::sequence< Participant_REF_type > Participant_REF_sequence;
      typedef Participant_REF_sequence::iterator Participant_REF_iterator;
      typedef Participant_REF_sequence::const_iterator Participant_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Participant_REF_type, char > Participant_REF_traits;

      const Participant_REF_sequence&
      Participant_REF () const;

      Participant_REF_sequence&
      Participant_REF ();

      void
      Participant_REF (const Participant_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      AnnotationParticipants ();

      AnnotationParticipants (const ::xercesc::DOMElement& e,
                              ::xml_schema::flags f = 0,
                              ::xml_schema::container* c = 0);

      AnnotationParticipants (const AnnotationParticipants& x,
                              ::xml_schema::flags f = 0,
                              ::xml_schema::container* c = 0);

      virtual AnnotationParticipants*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~AnnotationParticipants ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Participant_sequence Participant_;
      Participant_REF_sequence Participant_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class ScriptingLocators: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // Participant
      // 
      typedef ::st434::s380m::groups::ParticipantType Participant_type;
      typedef ::xsd::cxx::tree::sequence< Participant_type > Participant_sequence;
      typedef Participant_sequence::iterator Participant_iterator;
      typedef Participant_sequence::const_iterator Participant_const_iterator;
      typedef ::xsd::cxx::tree::traits< Participant_type, char > Participant_traits;

      const Participant_sequence&
      Participant () const;

      Participant_sequence&
      Participant ();

      void
      Participant (const Participant_sequence& s);

      // Participant_REF
      // 
      typedef ::st434::s377m::types::Ref Participant_REF_type;
      typedef ::xsd::cxx::tree::sequence< Participant_REF_type > Participant_REF_sequence;
      typedef Participant_REF_sequence::iterator Participant_REF_iterator;
      typedef Participant_REF_sequence::const_iterator Participant_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Participant_REF_type, char > Participant_REF_traits;

      const Participant_REF_sequence&
      Participant_REF () const;

      Participant_REF_sequence&
      Participant_REF ();

      void
      Participant_REF (const Participant_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      ScriptingLocators ();

      ScriptingLocators (const ::xercesc::DOMElement& e,
                         ::xml_schema::flags f = 0,
                         ::xml_schema::container* c = 0);

      ScriptingLocators (const ScriptingLocators& x,
                         ::xml_schema::flags f = 0,
                         ::xml_schema::container* c = 0);

      virtual ScriptingLocators*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~ScriptingLocators ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Participant_sequence Participant_;
      Participant_REF_sequence Participant_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class PublicationObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // Publication
      // 
      typedef ::st434::s380m::groups::PublicationType Publication_type;
      typedef ::xsd::cxx::tree::sequence< Publication_type > Publication_sequence;
      typedef Publication_sequence::iterator Publication_iterator;
      typedef Publication_sequence::const_iterator Publication_const_iterator;
      typedef ::xsd::cxx::tree::traits< Publication_type, char > Publication_traits;

      const Publication_sequence&
      Publication () const;

      Publication_sequence&
      Publication ();

      void
      Publication (const Publication_sequence& s);

      // Publication_REF
      // 
      typedef ::st434::s377m::types::Ref Publication_REF_type;
      typedef ::xsd::cxx::tree::sequence< Publication_REF_type > Publication_REF_sequence;
      typedef Publication_REF_sequence::iterator Publication_REF_iterator;
      typedef Publication_REF_sequence::const_iterator Publication_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Publication_REF_type, char > Publication_REF_traits;

      const Publication_REF_sequence&
      Publication_REF () const;

      Publication_REF_sequence&
      Publication_REF ();

      void
      Publication_REF (const Publication_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      PublicationObjects ();

      PublicationObjects (const ::xercesc::DOMElement& e,
                          ::xml_schema::flags f = 0,
                          ::xml_schema::container* c = 0);

      PublicationObjects (const PublicationObjects& x,
                          ::xml_schema::flags f = 0,
                          ::xml_schema::container* c = 0);

      virtual PublicationObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~PublicationObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Publication_sequence Publication_;
      Publication_REF_sequence Publication_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class AwardObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // Award
      // 
      typedef ::st434::s380m::groups::AwardType Award_type;
      typedef ::xsd::cxx::tree::sequence< Award_type > Award_sequence;
      typedef Award_sequence::iterator Award_iterator;
      typedef Award_sequence::const_iterator Award_const_iterator;
      typedef ::xsd::cxx::tree::traits< Award_type, char > Award_traits;

      const Award_sequence&
      Award () const;

      Award_sequence&
      Award ();

      void
      Award (const Award_sequence& s);

      // Award_REF
      // 
      typedef ::st434::s377m::types::Ref Award_REF_type;
      typedef ::xsd::cxx::tree::sequence< Award_REF_type > Award_REF_sequence;
      typedef Award_REF_sequence::iterator Award_REF_iterator;
      typedef Award_REF_sequence::const_iterator Award_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Award_REF_type, char > Award_REF_traits;

      const Award_REF_sequence&
      Award_REF () const;

      Award_REF_sequence&
      Award_REF ();

      void
      Award_REF (const Award_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      AwardObjects ();

      AwardObjects (const ::xercesc::DOMElement& e,
                    ::xml_schema::flags f = 0,
                    ::xml_schema::container* c = 0);

      AwardObjects (const AwardObjects& x,
                    ::xml_schema::flags f = 0,
                    ::xml_schema::container* c = 0);

      virtual AwardObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~AwardObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Award_sequence Award_;
      Award_REF_sequence Award_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class CaptionsDescriptionObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // CaptionsDescription
      // 
      typedef ::st434::s380m::groups::CaptionsDescriptionType CaptionsDescription_type;
      typedef ::xsd::cxx::tree::sequence< CaptionsDescription_type > CaptionsDescription_sequence;
      typedef CaptionsDescription_sequence::iterator CaptionsDescription_iterator;
      typedef CaptionsDescription_sequence::const_iterator CaptionsDescription_const_iterator;
      typedef ::xsd::cxx::tree::traits< CaptionsDescription_type, char > CaptionsDescription_traits;

      const CaptionsDescription_sequence&
      CaptionsDescription () const;

      CaptionsDescription_sequence&
      CaptionsDescription ();

      void
      CaptionsDescription (const CaptionsDescription_sequence& s);

      // CaptionsDescription_REF
      // 
      typedef ::st434::s377m::types::Ref CaptionsDescription_REF_type;
      typedef ::xsd::cxx::tree::sequence< CaptionsDescription_REF_type > CaptionsDescription_REF_sequence;
      typedef CaptionsDescription_REF_sequence::iterator CaptionsDescription_REF_iterator;
      typedef CaptionsDescription_REF_sequence::const_iterator CaptionsDescription_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< CaptionsDescription_REF_type, char > CaptionsDescription_REF_traits;

      const CaptionsDescription_REF_sequence&
      CaptionsDescription_REF () const;

      CaptionsDescription_REF_sequence&
      CaptionsDescription_REF ();

      void
      CaptionsDescription_REF (const CaptionsDescription_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      CaptionsDescriptionObjects ();

      CaptionsDescriptionObjects (const ::xercesc::DOMElement& e,
                                  ::xml_schema::flags f = 0,
                                  ::xml_schema::container* c = 0);

      CaptionsDescriptionObjects (const CaptionsDescriptionObjects& x,
                                  ::xml_schema::flags f = 0,
                                  ::xml_schema::container* c = 0);

      virtual CaptionsDescriptionObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~CaptionsDescriptionObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      CaptionsDescription_sequence CaptionsDescription_;
      CaptionsDescription_REF_sequence CaptionsDescription_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class AnnotationObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // DMS1Annotation
      // 
      typedef ::st434::s380m::groups::DMS1AnnotationType DMS1Annotation_type;
      typedef ::xsd::cxx::tree::sequence< DMS1Annotation_type > DMS1Annotation_sequence;
      typedef DMS1Annotation_sequence::iterator DMS1Annotation_iterator;
      typedef DMS1Annotation_sequence::const_iterator DMS1Annotation_const_iterator;
      typedef ::xsd::cxx::tree::traits< DMS1Annotation_type, char > DMS1Annotation_traits;

      const DMS1Annotation_sequence&
      DMS1Annotation () const;

      DMS1Annotation_sequence&
      DMS1Annotation ();

      void
      DMS1Annotation (const DMS1Annotation_sequence& s);

      // DMS1Annotation_REF
      // 
      typedef ::st434::s377m::types::Ref DMS1Annotation_REF_type;
      typedef ::xsd::cxx::tree::sequence< DMS1Annotation_REF_type > DMS1Annotation_REF_sequence;
      typedef DMS1Annotation_REF_sequence::iterator DMS1Annotation_REF_iterator;
      typedef DMS1Annotation_REF_sequence::const_iterator DMS1Annotation_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DMS1Annotation_REF_type, char > DMS1Annotation_REF_traits;

      const DMS1Annotation_REF_sequence&
      DMS1Annotation_REF () const;

      DMS1Annotation_REF_sequence&
      DMS1Annotation_REF ();

      void
      DMS1Annotation_REF (const DMS1Annotation_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      AnnotationObjects ();

      AnnotationObjects (const ::xercesc::DOMElement& e,
                         ::xml_schema::flags f = 0,
                         ::xml_schema::container* c = 0);

      AnnotationObjects (const AnnotationObjects& x,
                         ::xml_schema::flags f = 0,
                         ::xml_schema::container* c = 0);

      virtual AnnotationObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~AnnotationObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      DMS1Annotation_sequence DMS1Annotation_;
      DMS1Annotation_REF_sequence DMS1Annotation_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class ProductionSettingPeriodObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // SettingPeriod
      // 
      typedef ::st434::s380m::groups::SettingPeriodType SettingPeriod_type;
      typedef ::xsd::cxx::tree::sequence< SettingPeriod_type > SettingPeriod_sequence;
      typedef SettingPeriod_sequence::iterator SettingPeriod_iterator;
      typedef SettingPeriod_sequence::const_iterator SettingPeriod_const_iterator;
      typedef ::xsd::cxx::tree::traits< SettingPeriod_type, char > SettingPeriod_traits;

      const SettingPeriod_sequence&
      SettingPeriod () const;

      SettingPeriod_sequence&
      SettingPeriod ();

      void
      SettingPeriod (const SettingPeriod_sequence& s);

      // SettingPeriod_REF
      // 
      typedef ::st434::s377m::types::Ref SettingPeriod_REF_type;
      typedef ::xsd::cxx::tree::sequence< SettingPeriod_REF_type > SettingPeriod_REF_sequence;
      typedef SettingPeriod_REF_sequence::iterator SettingPeriod_REF_iterator;
      typedef SettingPeriod_REF_sequence::const_iterator SettingPeriod_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< SettingPeriod_REF_type, char > SettingPeriod_REF_traits;

      const SettingPeriod_REF_sequence&
      SettingPeriod_REF () const;

      SettingPeriod_REF_sequence&
      SettingPeriod_REF ();

      void
      SettingPeriod_REF (const SettingPeriod_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      ProductionSettingPeriodObjects ();

      ProductionSettingPeriodObjects (const ::xercesc::DOMElement& e,
                                      ::xml_schema::flags f = 0,
                                      ::xml_schema::container* c = 0);

      ProductionSettingPeriodObjects (const ProductionSettingPeriodObjects& x,
                                      ::xml_schema::flags f = 0,
                                      ::xml_schema::container* c = 0);

      virtual ProductionSettingPeriodObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~ProductionSettingPeriodObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      SettingPeriod_sequence SettingPeriod_;
      SettingPeriod_REF_sequence SettingPeriod_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class SceneSettingPeriodObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // SettingPeriod
      // 
      typedef ::st434::s380m::groups::SettingPeriodType SettingPeriod_type;
      typedef ::xsd::cxx::tree::sequence< SettingPeriod_type > SettingPeriod_sequence;
      typedef SettingPeriod_sequence::iterator SettingPeriod_iterator;
      typedef SettingPeriod_sequence::const_iterator SettingPeriod_const_iterator;
      typedef ::xsd::cxx::tree::traits< SettingPeriod_type, char > SettingPeriod_traits;

      const SettingPeriod_sequence&
      SettingPeriod () const;

      SettingPeriod_sequence&
      SettingPeriod ();

      void
      SettingPeriod (const SettingPeriod_sequence& s);

      // SettingPeriod_REF
      // 
      typedef ::st434::s377m::types::Ref SettingPeriod_REF_type;
      typedef ::xsd::cxx::tree::sequence< SettingPeriod_REF_type > SettingPeriod_REF_sequence;
      typedef SettingPeriod_REF_sequence::iterator SettingPeriod_REF_iterator;
      typedef SettingPeriod_REF_sequence::const_iterator SettingPeriod_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< SettingPeriod_REF_type, char > SettingPeriod_REF_traits;

      const SettingPeriod_REF_sequence&
      SettingPeriod_REF () const;

      SettingPeriod_REF_sequence&
      SettingPeriod_REF ();

      void
      SettingPeriod_REF (const SettingPeriod_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      SceneSettingPeriodObjects ();

      SceneSettingPeriodObjects (const ::xercesc::DOMElement& e,
                                 ::xml_schema::flags f = 0,
                                 ::xml_schema::container* c = 0);

      SceneSettingPeriodObjects (const SceneSettingPeriodObjects& x,
                                 ::xml_schema::flags f = 0,
                                 ::xml_schema::container* c = 0);

      virtual SceneSettingPeriodObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~SceneSettingPeriodObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      SettingPeriod_sequence SettingPeriod_;
      SettingPeriod_REF_sequence SettingPeriod_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class ScriptingObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // Scripting
      // 
      typedef ::st434::s380m::groups::ScriptingType Scripting_type;
      typedef ::xsd::cxx::tree::sequence< Scripting_type > Scripting_sequence;
      typedef Scripting_sequence::iterator Scripting_iterator;
      typedef Scripting_sequence::const_iterator Scripting_const_iterator;
      typedef ::xsd::cxx::tree::traits< Scripting_type, char > Scripting_traits;

      const Scripting_sequence&
      Scripting () const;

      Scripting_sequence&
      Scripting ();

      void
      Scripting (const Scripting_sequence& s);

      // Scripting_REF
      // 
      typedef ::st434::s377m::types::Ref Scripting_REF_type;
      typedef ::xsd::cxx::tree::sequence< Scripting_REF_type > Scripting_REF_sequence;
      typedef Scripting_REF_sequence::iterator Scripting_REF_iterator;
      typedef Scripting_REF_sequence::const_iterator Scripting_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Scripting_REF_type, char > Scripting_REF_traits;

      const Scripting_REF_sequence&
      Scripting_REF () const;

      Scripting_REF_sequence&
      Scripting_REF ();

      void
      Scripting_REF (const Scripting_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      ScriptingObjects ();

      ScriptingObjects (const ::xercesc::DOMElement& e,
                        ::xml_schema::flags f = 0,
                        ::xml_schema::container* c = 0);

      ScriptingObjects (const ScriptingObjects& x,
                        ::xml_schema::flags f = 0,
                        ::xml_schema::container* c = 0);

      virtual ScriptingObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~ScriptingObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Scripting_sequence Scripting_;
      Scripting_REF_sequence Scripting_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class ClassificationObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // Classification
      // 
      typedef ::st434::s380m::groups::ClassificationType Classification_type;
      typedef ::xsd::cxx::tree::sequence< Classification_type > Classification_sequence;
      typedef Classification_sequence::iterator Classification_iterator;
      typedef Classification_sequence::const_iterator Classification_const_iterator;
      typedef ::xsd::cxx::tree::traits< Classification_type, char > Classification_traits;

      const Classification_sequence&
      Classification () const;

      Classification_sequence&
      Classification ();

      void
      Classification (const Classification_sequence& s);

      // Classification_REF
      // 
      typedef ::st434::s377m::types::Ref Classification_REF_type;
      typedef ::xsd::cxx::tree::sequence< Classification_REF_type > Classification_REF_sequence;
      typedef Classification_REF_sequence::iterator Classification_REF_iterator;
      typedef Classification_REF_sequence::const_iterator Classification_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Classification_REF_type, char > Classification_REF_traits;

      const Classification_REF_sequence&
      Classification_REF () const;

      Classification_REF_sequence&
      Classification_REF ();

      void
      Classification_REF (const Classification_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      ClassificationObjects ();

      ClassificationObjects (const ::xercesc::DOMElement& e,
                             ::xml_schema::flags f = 0,
                             ::xml_schema::container* c = 0);

      ClassificationObjects (const ClassificationObjects& x,
                             ::xml_schema::flags f = 0,
                             ::xml_schema::container* c = 0);

      virtual ClassificationObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~ClassificationObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Classification_sequence Classification_;
      Classification_REF_sequence Classification_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class SceneShotObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // Shot
      // 
      typedef ::st434::s380m::groups::ShotType Shot_type;
      typedef ::xsd::cxx::tree::sequence< Shot_type > Shot_sequence;
      typedef Shot_sequence::iterator Shot_iterator;
      typedef Shot_sequence::const_iterator Shot_const_iterator;
      typedef ::xsd::cxx::tree::traits< Shot_type, char > Shot_traits;

      const Shot_sequence&
      Shot () const;

      Shot_sequence&
      Shot ();

      void
      Shot (const Shot_sequence& s);

      // Shot_REF
      // 
      typedef ::st434::s377m::types::Ref Shot_REF_type;
      typedef ::xsd::cxx::tree::sequence< Shot_REF_type > Shot_REF_sequence;
      typedef Shot_REF_sequence::iterator Shot_REF_iterator;
      typedef Shot_REF_sequence::const_iterator Shot_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Shot_REF_type, char > Shot_REF_traits;

      const Shot_REF_sequence&
      Shot_REF () const;

      Shot_REF_sequence&
      Shot_REF ();

      void
      Shot_REF (const Shot_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      SceneShotObjects ();

      SceneShotObjects (const ::xercesc::DOMElement& e,
                        ::xml_schema::flags f = 0,
                        ::xml_schema::container* c = 0);

      SceneShotObjects (const SceneShotObjects& x,
                        ::xml_schema::flags f = 0,
                        ::xml_schema::container* c = 0);

      virtual SceneShotObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~SceneShotObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Shot_sequence Shot_;
      Shot_REF_sequence Shot_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class ClipShotObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // Shot
      // 
      typedef ::st434::s380m::groups::ShotType Shot_type;
      typedef ::xsd::cxx::tree::sequence< Shot_type > Shot_sequence;
      typedef Shot_sequence::iterator Shot_iterator;
      typedef Shot_sequence::const_iterator Shot_const_iterator;
      typedef ::xsd::cxx::tree::traits< Shot_type, char > Shot_traits;

      const Shot_sequence&
      Shot () const;

      Shot_sequence&
      Shot ();

      void
      Shot (const Shot_sequence& s);

      // Shot_REF
      // 
      typedef ::st434::s377m::types::Ref Shot_REF_type;
      typedef ::xsd::cxx::tree::sequence< Shot_REF_type > Shot_REF_sequence;
      typedef Shot_REF_sequence::iterator Shot_REF_iterator;
      typedef Shot_REF_sequence::const_iterator Shot_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Shot_REF_type, char > Shot_REF_traits;

      const Shot_REF_sequence&
      Shot_REF () const;

      Shot_REF_sequence&
      Shot_REF ();

      void
      Shot_REF (const Shot_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      ClipShotObjects ();

      ClipShotObjects (const ::xercesc::DOMElement& e,
                       ::xml_schema::flags f = 0,
                       ::xml_schema::container* c = 0);

      ClipShotObjects (const ClipShotObjects& x,
                       ::xml_schema::flags f = 0,
                       ::xml_schema::container* c = 0);

      virtual ClipShotObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~ClipShotObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Shot_sequence Shot_;
      Shot_REF_sequence Shot_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class KeypointObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // Keypoint
      // 
      typedef ::st434::s380m::groups::KeypointType Keypoint_type;
      typedef ::xsd::cxx::tree::sequence< Keypoint_type > Keypoint_sequence;
      typedef Keypoint_sequence::iterator Keypoint_iterator;
      typedef Keypoint_sequence::const_iterator Keypoint_const_iterator;
      typedef ::xsd::cxx::tree::traits< Keypoint_type, char > Keypoint_traits;

      const Keypoint_sequence&
      Keypoint () const;

      Keypoint_sequence&
      Keypoint ();

      void
      Keypoint (const Keypoint_sequence& s);

      // Keypoint_REF
      // 
      typedef ::st434::s377m::types::Ref Keypoint_REF_type;
      typedef ::xsd::cxx::tree::sequence< Keypoint_REF_type > Keypoint_REF_sequence;
      typedef Keypoint_REF_sequence::iterator Keypoint_REF_iterator;
      typedef Keypoint_REF_sequence::const_iterator Keypoint_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Keypoint_REF_type, char > Keypoint_REF_traits;

      const Keypoint_REF_sequence&
      Keypoint_REF () const;

      Keypoint_REF_sequence&
      Keypoint_REF ();

      void
      Keypoint_REF (const Keypoint_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      KeypointObjects ();

      KeypointObjects (const ::xercesc::DOMElement& e,
                       ::xml_schema::flags f = 0,
                       ::xml_schema::container* c = 0);

      KeypointObjects (const KeypointObjects& x,
                       ::xml_schema::flags f = 0,
                       ::xml_schema::container* c = 0);

      virtual KeypointObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~KeypointObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Keypoint_sequence Keypoint_;
      Keypoint_REF_sequence Keypoint_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class ParticipantObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // Participant
      // 
      typedef ::st434::s380m::groups::ParticipantType Participant_type;
      typedef ::xsd::cxx::tree::sequence< Participant_type > Participant_sequence;
      typedef Participant_sequence::iterator Participant_iterator;
      typedef Participant_sequence::const_iterator Participant_const_iterator;
      typedef ::xsd::cxx::tree::traits< Participant_type, char > Participant_traits;

      const Participant_sequence&
      Participant () const;

      Participant_sequence&
      Participant ();

      void
      Participant (const Participant_sequence& s);

      // Participant_REF
      // 
      typedef ::st434::s377m::types::Ref Participant_REF_type;
      typedef ::xsd::cxx::tree::sequence< Participant_REF_type > Participant_REF_sequence;
      typedef Participant_REF_sequence::iterator Participant_REF_iterator;
      typedef Participant_REF_sequence::const_iterator Participant_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Participant_REF_type, char > Participant_REF_traits;

      const Participant_REF_sequence&
      Participant_REF () const;

      Participant_REF_sequence&
      Participant_REF ();

      void
      Participant_REF (const Participant_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      ParticipantObjects ();

      ParticipantObjects (const ::xercesc::DOMElement& e,
                          ::xml_schema::flags f = 0,
                          ::xml_schema::container* c = 0);

      ParticipantObjects (const ParticipantObjects& x,
                          ::xml_schema::flags f = 0,
                          ::xml_schema::container* c = 0);

      virtual ParticipantObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~ParticipantObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Participant_sequence Participant_;
      Participant_REF_sequence Participant_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class PersonObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // Person
      // 
      typedef ::st434::s380m::groups::PersonType Person_type;
      typedef ::xsd::cxx::tree::sequence< Person_type > Person_sequence;
      typedef Person_sequence::iterator Person_iterator;
      typedef Person_sequence::const_iterator Person_const_iterator;
      typedef ::xsd::cxx::tree::traits< Person_type, char > Person_traits;

      const Person_sequence&
      Person () const;

      Person_sequence&
      Person ();

      void
      Person (const Person_sequence& s);

      // Person_REF
      // 
      typedef ::st434::s377m::types::Ref Person_REF_type;
      typedef ::xsd::cxx::tree::sequence< Person_REF_type > Person_REF_sequence;
      typedef Person_REF_sequence::iterator Person_REF_iterator;
      typedef Person_REF_sequence::const_iterator Person_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Person_REF_type, char > Person_REF_traits;

      const Person_REF_sequence&
      Person_REF () const;

      Person_REF_sequence&
      Person_REF ();

      void
      Person_REF (const Person_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      PersonObjects ();

      PersonObjects (const ::xercesc::DOMElement& e,
                     ::xml_schema::flags f = 0,
                     ::xml_schema::container* c = 0);

      PersonObjects (const PersonObjects& x,
                     ::xml_schema::flags f = 0,
                     ::xml_schema::container* c = 0);

      virtual PersonObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~PersonObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Person_sequence Person_;
      Person_REF_sequence Person_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class OrganizationObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // Organization
      // 
      typedef ::st434::s380m::groups::OrganizationType Organization_type;
      typedef ::xsd::cxx::tree::sequence< Organization_type > Organization_sequence;
      typedef Organization_sequence::iterator Organization_iterator;
      typedef Organization_sequence::const_iterator Organization_const_iterator;
      typedef ::xsd::cxx::tree::traits< Organization_type, char > Organization_traits;

      const Organization_sequence&
      Organization () const;

      Organization_sequence&
      Organization ();

      void
      Organization (const Organization_sequence& s);

      // Organization_REF
      // 
      typedef ::st434::s377m::types::Ref Organization_REF_type;
      typedef ::xsd::cxx::tree::sequence< Organization_REF_type > Organization_REF_sequence;
      typedef Organization_REF_sequence::iterator Organization_REF_iterator;
      typedef Organization_REF_sequence::const_iterator Organization_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Organization_REF_type, char > Organization_REF_traits;

      const Organization_REF_sequence&
      Organization_REF () const;

      Organization_REF_sequence&
      Organization_REF ();

      void
      Organization_REF (const Organization_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      OrganizationObjects ();

      OrganizationObjects (const ::xercesc::DOMElement& e,
                           ::xml_schema::flags f = 0,
                           ::xml_schema::container* c = 0);

      OrganizationObjects (const OrganizationObjects& x,
                           ::xml_schema::flags f = 0,
                           ::xml_schema::container* c = 0);

      virtual OrganizationObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~OrganizationObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Organization_sequence Organization_;
      Organization_REF_sequence Organization_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class LocationObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // Location
      // 
      typedef ::st434::s380m::groups::LocationType Location_type;
      typedef ::xsd::cxx::tree::sequence< Location_type > Location_sequence;
      typedef Location_sequence::iterator Location_iterator;
      typedef Location_sequence::const_iterator Location_const_iterator;
      typedef ::xsd::cxx::tree::traits< Location_type, char > Location_traits;

      const Location_sequence&
      Location () const;

      Location_sequence&
      Location ();

      void
      Location (const Location_sequence& s);

      // Location_REF
      // 
      typedef ::st434::s377m::types::Ref Location_REF_type;
      typedef ::xsd::cxx::tree::sequence< Location_REF_type > Location_REF_sequence;
      typedef Location_REF_sequence::iterator Location_REF_iterator;
      typedef Location_REF_sequence::const_iterator Location_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Location_REF_type, char > Location_REF_traits;

      const Location_REF_sequence&
      Location_REF () const;

      Location_REF_sequence&
      Location_REF ();

      void
      Location_REF (const Location_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      LocationObjects ();

      LocationObjects (const ::xercesc::DOMElement& e,
                       ::xml_schema::flags f = 0,
                       ::xml_schema::container* c = 0);

      LocationObjects (const LocationObjects& x,
                       ::xml_schema::flags f = 0,
                       ::xml_schema::container* c = 0);

      virtual LocationObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~LocationObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Location_sequence Location_;
      Location_REF_sequence Location_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class AddressObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // Address
      // 
      typedef ::st434::s380m::groups::AddressType Address_type;
      typedef ::xsd::cxx::tree::sequence< Address_type > Address_sequence;
      typedef Address_sequence::iterator Address_iterator;
      typedef Address_sequence::const_iterator Address_const_iterator;
      typedef ::xsd::cxx::tree::traits< Address_type, char > Address_traits;

      const Address_sequence&
      Address () const;

      Address_sequence&
      Address ();

      void
      Address (const Address_sequence& s);

      // Address_REF
      // 
      typedef ::st434::s377m::types::Ref Address_REF_type;
      typedef ::xsd::cxx::tree::sequence< Address_REF_type > Address_REF_sequence;
      typedef Address_REF_sequence::iterator Address_REF_iterator;
      typedef Address_REF_sequence::const_iterator Address_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Address_REF_type, char > Address_REF_traits;

      const Address_REF_sequence&
      Address_REF () const;

      Address_REF_sequence&
      Address_REF ();

      void
      Address_REF (const Address_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      AddressObjects ();

      AddressObjects (const ::xercesc::DOMElement& e,
                      ::xml_schema::flags f = 0,
                      ::xml_schema::container* c = 0);

      AddressObjects (const AddressObjects& x,
                      ::xml_schema::flags f = 0,
                      ::xml_schema::container* c = 0);

      virtual AddressObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~AddressObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Address_sequence Address_;
      Address_REF_sequence Address_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class CommunicationsObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // Communications
      // 
      typedef ::st434::s380m::groups::CommunicationsType Communications_type;
      typedef ::xsd::cxx::tree::sequence< Communications_type > Communications_sequence;
      typedef Communications_sequence::iterator Communications_iterator;
      typedef Communications_sequence::const_iterator Communications_const_iterator;
      typedef ::xsd::cxx::tree::traits< Communications_type, char > Communications_traits;

      const Communications_sequence&
      Communications () const;

      Communications_sequence&
      Communications ();

      void
      Communications (const Communications_sequence& s);

      // Communications_REF
      // 
      typedef ::st434::s377m::types::Ref Communications_REF_type;
      typedef ::xsd::cxx::tree::sequence< Communications_REF_type > Communications_REF_sequence;
      typedef Communications_REF_sequence::iterator Communications_REF_iterator;
      typedef Communications_REF_sequence::const_iterator Communications_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Communications_REF_type, char > Communications_REF_traits;

      const Communications_REF_sequence&
      Communications_REF () const;

      Communications_REF_sequence&
      Communications_REF ();

      void
      Communications_REF (const Communications_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      CommunicationsObjects ();

      CommunicationsObjects (const ::xercesc::DOMElement& e,
                             ::xml_schema::flags f = 0,
                             ::xml_schema::container* c = 0);

      CommunicationsObjects (const CommunicationsObjects& x,
                             ::xml_schema::flags f = 0,
                             ::xml_schema::container* c = 0);

      virtual CommunicationsObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~CommunicationsObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Communications_sequence Communications_;
      Communications_REF_sequence Communications_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class ContractObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // Contract
      // 
      typedef ::st434::s380m::groups::ContractType Contract_type;
      typedef ::xsd::cxx::tree::sequence< Contract_type > Contract_sequence;
      typedef Contract_sequence::iterator Contract_iterator;
      typedef Contract_sequence::const_iterator Contract_const_iterator;
      typedef ::xsd::cxx::tree::traits< Contract_type, char > Contract_traits;

      const Contract_sequence&
      Contract () const;

      Contract_sequence&
      Contract ();

      void
      Contract (const Contract_sequence& s);

      // Contract_REF
      // 
      typedef ::st434::s377m::types::Ref Contract_REF_type;
      typedef ::xsd::cxx::tree::sequence< Contract_REF_type > Contract_REF_sequence;
      typedef Contract_REF_sequence::iterator Contract_REF_iterator;
      typedef Contract_REF_sequence::const_iterator Contract_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Contract_REF_type, char > Contract_REF_traits;

      const Contract_REF_sequence&
      Contract_REF () const;

      Contract_REF_sequence&
      Contract_REF ();

      void
      Contract_REF (const Contract_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      ContractObjects ();

      ContractObjects (const ::xercesc::DOMElement& e,
                       ::xml_schema::flags f = 0,
                       ::xml_schema::container* c = 0);

      ContractObjects (const ContractObjects& x,
                       ::xml_schema::flags f = 0,
                       ::xml_schema::container* c = 0);

      virtual ContractObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~ContractObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Contract_sequence Contract_;
      Contract_REF_sequence Contract_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class RightsObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // Rights
      // 
      typedef ::st434::s380m::groups::RightsType Rights_type;
      typedef ::xsd::cxx::tree::sequence< Rights_type > Rights_sequence;
      typedef Rights_sequence::iterator Rights_iterator;
      typedef Rights_sequence::const_iterator Rights_const_iterator;
      typedef ::xsd::cxx::tree::traits< Rights_type, char > Rights_traits;

      const Rights_sequence&
      Rights () const;

      Rights_sequence&
      Rights ();

      void
      Rights (const Rights_sequence& s);

      // Rights_REF
      // 
      typedef ::st434::s377m::types::Ref Rights_REF_type;
      typedef ::xsd::cxx::tree::sequence< Rights_REF_type > Rights_REF_sequence;
      typedef Rights_REF_sequence::iterator Rights_REF_iterator;
      typedef Rights_REF_sequence::const_iterator Rights_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< Rights_REF_type, char > Rights_REF_traits;

      const Rights_REF_sequence&
      Rights_REF () const;

      Rights_REF_sequence&
      Rights_REF ();

      void
      Rights_REF (const Rights_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      RightsObjects ();

      RightsObjects (const ::xercesc::DOMElement& e,
                     ::xml_schema::flags f = 0,
                     ::xml_schema::container* c = 0);

      RightsObjects (const RightsObjects& x,
                     ::xml_schema::flags f = 0,
                     ::xml_schema::container* c = 0);

      virtual RightsObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~RightsObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Rights_sequence Rights_;
      Rights_REF_sequence Rights_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class DeviceParametersObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // DeviceParameters
      // 
      typedef ::st434::s380m::groups::DeviceParametersType DeviceParameters_type;
      typedef ::xsd::cxx::tree::sequence< DeviceParameters_type > DeviceParameters_sequence;
      typedef DeviceParameters_sequence::iterator DeviceParameters_iterator;
      typedef DeviceParameters_sequence::const_iterator DeviceParameters_const_iterator;
      typedef ::xsd::cxx::tree::traits< DeviceParameters_type, char > DeviceParameters_traits;

      const DeviceParameters_sequence&
      DeviceParameters () const;

      DeviceParameters_sequence&
      DeviceParameters ();

      void
      DeviceParameters (const DeviceParameters_sequence& s);

      // DeviceParameters_REF
      // 
      typedef ::st434::s377m::types::Ref DeviceParameters_REF_type;
      typedef ::xsd::cxx::tree::sequence< DeviceParameters_REF_type > DeviceParameters_REF_sequence;
      typedef DeviceParameters_REF_sequence::iterator DeviceParameters_REF_iterator;
      typedef DeviceParameters_REF_sequence::const_iterator DeviceParameters_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DeviceParameters_REF_type, char > DeviceParameters_REF_traits;

      const DeviceParameters_REF_sequence&
      DeviceParameters_REF () const;

      DeviceParameters_REF_sequence&
      DeviceParameters_REF ();

      void
      DeviceParameters_REF (const DeviceParameters_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      DeviceParametersObjects ();

      DeviceParametersObjects (const ::xercesc::DOMElement& e,
                               ::xml_schema::flags f = 0,
                               ::xml_schema::container* c = 0);

      DeviceParametersObjects (const DeviceParametersObjects& x,
                               ::xml_schema::flags f = 0,
                               ::xml_schema::container* c = 0);

      virtual DeviceParametersObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~DeviceParametersObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      DeviceParameters_sequence DeviceParameters_;
      DeviceParameters_REF_sequence DeviceParameters_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class ClassificationNameValueObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // NameValue
      // 
      typedef ::st434::s380m::groups::NameValueType NameValue_type;
      typedef ::xsd::cxx::tree::sequence< NameValue_type > NameValue_sequence;
      typedef NameValue_sequence::iterator NameValue_iterator;
      typedef NameValue_sequence::const_iterator NameValue_const_iterator;
      typedef ::xsd::cxx::tree::traits< NameValue_type, char > NameValue_traits;

      const NameValue_sequence&
      NameValue () const;

      NameValue_sequence&
      NameValue ();

      void
      NameValue (const NameValue_sequence& s);

      // NameValue_REF
      // 
      typedef ::st434::s377m::types::Ref NameValue_REF_type;
      typedef ::xsd::cxx::tree::sequence< NameValue_REF_type > NameValue_REF_sequence;
      typedef NameValue_REF_sequence::iterator NameValue_REF_iterator;
      typedef NameValue_REF_sequence::const_iterator NameValue_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< NameValue_REF_type, char > NameValue_REF_traits;

      const NameValue_REF_sequence&
      NameValue_REF () const;

      NameValue_REF_sequence&
      NameValue_REF ();

      void
      NameValue_REF (const NameValue_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      ClassificationNameValueObjects ();

      ClassificationNameValueObjects (const ::xercesc::DOMElement& e,
                                      ::xml_schema::flags f = 0,
                                      ::xml_schema::container* c = 0);

      ClassificationNameValueObjects (const ClassificationNameValueObjects& x,
                                      ::xml_schema::flags f = 0,
                                      ::xml_schema::container* c = 0);

      virtual ClassificationNameValueObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~ClassificationNameValueObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      NameValue_sequence NameValue_;
      NameValue_REF_sequence NameValue_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class ContactNameValueObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // NameValue
      // 
      typedef ::st434::s380m::groups::NameValueType NameValue_type;
      typedef ::xsd::cxx::tree::sequence< NameValue_type > NameValue_sequence;
      typedef NameValue_sequence::iterator NameValue_iterator;
      typedef NameValue_sequence::const_iterator NameValue_const_iterator;
      typedef ::xsd::cxx::tree::traits< NameValue_type, char > NameValue_traits;

      const NameValue_sequence&
      NameValue () const;

      NameValue_sequence&
      NameValue ();

      void
      NameValue (const NameValue_sequence& s);

      // NameValue_REF
      // 
      typedef ::st434::s377m::types::Ref NameValue_REF_type;
      typedef ::xsd::cxx::tree::sequence< NameValue_REF_type > NameValue_REF_sequence;
      typedef NameValue_REF_sequence::iterator NameValue_REF_iterator;
      typedef NameValue_REF_sequence::const_iterator NameValue_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< NameValue_REF_type, char > NameValue_REF_traits;

      const NameValue_REF_sequence&
      NameValue_REF () const;

      NameValue_REF_sequence&
      NameValue_REF ();

      void
      NameValue_REF (const NameValue_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      ContactNameValueObjects ();

      ContactNameValueObjects (const ::xercesc::DOMElement& e,
                               ::xml_schema::flags f = 0,
                               ::xml_schema::container* c = 0);

      ContactNameValueObjects (const ContactNameValueObjects& x,
                               ::xml_schema::flags f = 0,
                               ::xml_schema::container* c = 0);

      virtual ContactNameValueObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~ContactNameValueObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      NameValue_sequence NameValue_;
      NameValue_REF_sequence NameValue_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class DeviceParametersNameValueObjects: public ::st434::s377m::types::StrongRefBatch
    {
      public:
      // NameValue
      // 
      typedef ::st434::s380m::groups::NameValueType NameValue_type;
      typedef ::xsd::cxx::tree::sequence< NameValue_type > NameValue_sequence;
      typedef NameValue_sequence::iterator NameValue_iterator;
      typedef NameValue_sequence::const_iterator NameValue_const_iterator;
      typedef ::xsd::cxx::tree::traits< NameValue_type, char > NameValue_traits;

      const NameValue_sequence&
      NameValue () const;

      NameValue_sequence&
      NameValue ();

      void
      NameValue (const NameValue_sequence& s);

      // NameValue_REF
      // 
      typedef ::st434::s377m::types::Ref NameValue_REF_type;
      typedef ::xsd::cxx::tree::sequence< NameValue_REF_type > NameValue_REF_sequence;
      typedef NameValue_REF_sequence::iterator NameValue_REF_iterator;
      typedef NameValue_REF_sequence::const_iterator NameValue_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< NameValue_REF_type, char > NameValue_REF_traits;

      const NameValue_REF_sequence&
      NameValue_REF () const;

      NameValue_REF_sequence&
      NameValue_REF ();

      void
      NameValue_REF (const NameValue_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      DeviceParametersNameValueObjects ();

      DeviceParametersNameValueObjects (const ::xercesc::DOMElement& e,
                                        ::xml_schema::flags f = 0,
                                        ::xml_schema::container* c = 0);

      DeviceParametersNameValueObjects (const DeviceParametersNameValueObjects& x,
                                        ::xml_schema::flags f = 0,
                                        ::xml_schema::container* c = 0);

      virtual DeviceParametersNameValueObjects*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~DeviceParametersNameValueObjects ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      NameValue_sequence NameValue_;
      NameValue_REF_sequence NameValue_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class MetadataServerLocators: public ::st434::s377m::types::StrongRefArray
    {
      public:
      // NetworkLocator
      // 
      typedef ::st434::s377m::groups::NetworkLocatorType NetworkLocator_type;
      typedef ::xsd::cxx::tree::sequence< NetworkLocator_type > NetworkLocator_sequence;
      typedef NetworkLocator_sequence::iterator NetworkLocator_iterator;
      typedef NetworkLocator_sequence::const_iterator NetworkLocator_const_iterator;
      typedef ::xsd::cxx::tree::traits< NetworkLocator_type, char > NetworkLocator_traits;

      const NetworkLocator_sequence&
      NetworkLocator () const;

      NetworkLocator_sequence&
      NetworkLocator ();

      void
      NetworkLocator (const NetworkLocator_sequence& s);

      // NetworkLocator_REF
      // 
      typedef ::st434::s377m::types::Ref NetworkLocator_REF_type;
      typedef ::xsd::cxx::tree::sequence< NetworkLocator_REF_type > NetworkLocator_REF_sequence;
      typedef NetworkLocator_REF_sequence::iterator NetworkLocator_REF_iterator;
      typedef NetworkLocator_REF_sequence::const_iterator NetworkLocator_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< NetworkLocator_REF_type, char > NetworkLocator_REF_traits;

      const NetworkLocator_REF_sequence&
      NetworkLocator_REF () const;

      NetworkLocator_REF_sequence&
      NetworkLocator_REF ();

      void
      NetworkLocator_REF (const NetworkLocator_REF_sequence& s);

      // TextLocator
      // 
      typedef ::st434::s377m::groups::TextLocatorType TextLocator_type;
      typedef ::xsd::cxx::tree::sequence< TextLocator_type > TextLocator_sequence;
      typedef TextLocator_sequence::iterator TextLocator_iterator;
      typedef TextLocator_sequence::const_iterator TextLocator_const_iterator;
      typedef ::xsd::cxx::tree::traits< TextLocator_type, char > TextLocator_traits;

      const TextLocator_sequence&
      TextLocator () const;

      TextLocator_sequence&
      TextLocator ();

      void
      TextLocator (const TextLocator_sequence& s);

      // TextLocator_REF
      // 
      typedef ::st434::s377m::types::Ref TextLocator_REF_type;
      typedef ::xsd::cxx::tree::sequence< TextLocator_REF_type > TextLocator_REF_sequence;
      typedef TextLocator_REF_sequence::iterator TextLocator_REF_iterator;
      typedef TextLocator_REF_sequence::const_iterator TextLocator_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< TextLocator_REF_type, char > TextLocator_REF_traits;

      const TextLocator_REF_sequence&
      TextLocator_REF () const;

      TextLocator_REF_sequence&
      TextLocator_REF ();

      void
      TextLocator_REF (const TextLocator_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      MetadataServerLocators ();

      MetadataServerLocators (const ::xercesc::DOMElement& e,
                              ::xml_schema::flags f = 0,
                              ::xml_schema::container* c = 0);

      MetadataServerLocators (const MetadataServerLocators& x,
                              ::xml_schema::flags f = 0,
                              ::xml_schema::container* c = 0);

      virtual MetadataServerLocators*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~MetadataServerLocators ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      NetworkLocator_sequence NetworkLocator_;
      NetworkLocator_REF_sequence NetworkLocator_REF_;
      TextLocator_sequence TextLocator_;
      TextLocator_REF_sequence TextLocator_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class RelatedMaterialLocators: public ::st434::s377m::types::StrongRefArray
    {
      public:
      // NetworkLocator
      // 
      typedef ::st434::s377m::groups::NetworkLocatorType NetworkLocator_type;
      typedef ::xsd::cxx::tree::sequence< NetworkLocator_type > NetworkLocator_sequence;
      typedef NetworkLocator_sequence::iterator NetworkLocator_iterator;
      typedef NetworkLocator_sequence::const_iterator NetworkLocator_const_iterator;
      typedef ::xsd::cxx::tree::traits< NetworkLocator_type, char > NetworkLocator_traits;

      const NetworkLocator_sequence&
      NetworkLocator () const;

      NetworkLocator_sequence&
      NetworkLocator ();

      void
      NetworkLocator (const NetworkLocator_sequence& s);

      // NetworkLocator_REF
      // 
      typedef ::st434::s377m::types::Ref NetworkLocator_REF_type;
      typedef ::xsd::cxx::tree::sequence< NetworkLocator_REF_type > NetworkLocator_REF_sequence;
      typedef NetworkLocator_REF_sequence::iterator NetworkLocator_REF_iterator;
      typedef NetworkLocator_REF_sequence::const_iterator NetworkLocator_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< NetworkLocator_REF_type, char > NetworkLocator_REF_traits;

      const NetworkLocator_REF_sequence&
      NetworkLocator_REF () const;

      NetworkLocator_REF_sequence&
      NetworkLocator_REF ();

      void
      NetworkLocator_REF (const NetworkLocator_REF_sequence& s);

      // TextLocator
      // 
      typedef ::st434::s377m::groups::TextLocatorType TextLocator_type;
      typedef ::xsd::cxx::tree::sequence< TextLocator_type > TextLocator_sequence;
      typedef TextLocator_sequence::iterator TextLocator_iterator;
      typedef TextLocator_sequence::const_iterator TextLocator_const_iterator;
      typedef ::xsd::cxx::tree::traits< TextLocator_type, char > TextLocator_traits;

      const TextLocator_sequence&
      TextLocator () const;

      TextLocator_sequence&
      TextLocator ();

      void
      TextLocator (const TextLocator_sequence& s);

      // TextLocator_REF
      // 
      typedef ::st434::s377m::types::Ref TextLocator_REF_type;
      typedef ::xsd::cxx::tree::sequence< TextLocator_REF_type > TextLocator_REF_sequence;
      typedef TextLocator_REF_sequence::iterator TextLocator_REF_iterator;
      typedef TextLocator_REF_sequence::const_iterator TextLocator_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< TextLocator_REF_type, char > TextLocator_REF_traits;

      const TextLocator_REF_sequence&
      TextLocator_REF () const;

      TextLocator_REF_sequence&
      TextLocator_REF ();

      void
      TextLocator_REF (const TextLocator_REF_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      RelatedMaterialLocators ();

      RelatedMaterialLocators (const ::xercesc::DOMElement& e,
                               ::xml_schema::flags f = 0,
                               ::xml_schema::container* c = 0);

      RelatedMaterialLocators (const RelatedMaterialLocators& x,
                               ::xml_schema::flags f = 0,
                               ::xml_schema::container* c = 0);

      virtual RelatedMaterialLocators*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~RelatedMaterialLocators ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      NetworkLocator_sequence NetworkLocator_;
      NetworkLocator_REF_sequence NetworkLocator_REF_;
      TextLocator_sequence TextLocator_;
      TextLocator_REF_sequence TextLocator_REF_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class ChannelIDs: public ::st434::s377m::types::Array
    {
      public:
      // Element
      // 
      typedef ::st434::s377m::types::UInt32 Element_type;
      typedef ::xsd::cxx::tree::sequence< Element_type > Element_sequence;
      typedef Element_sequence::iterator Element_iterator;
      typedef Element_sequence::const_iterator Element_const_iterator;
      typedef ::xsd::cxx::tree::traits< Element_type, char > Element_traits;

      const Element_sequence&
      Element () const;

      Element_sequence&
      Element ();

      void
      Element (const Element_sequence& s);

      // Constructors.
      //
      ChannelIDs ();

      ChannelIDs (const ::xercesc::DOMElement& e,
                  ::xml_schema::flags f = 0,
                  ::xml_schema::container* c = 0);

      ChannelIDs (const ChannelIDs& x,
                  ::xml_schema::flags f = 0,
                  ::xml_schema::container* c = 0);

      virtual ChannelIDs*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~ChannelIDs ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Element_sequence Element_;
    };

    class MonoSourceTrackIDs: public ::st434::s377m::types::Array
    {
      public:
      // Element
      // 
      typedef ::st434::s377m::types::UInt32 Element_type;
      typedef ::xsd::cxx::tree::sequence< Element_type > Element_sequence;
      typedef Element_sequence::iterator Element_iterator;
      typedef Element_sequence::const_iterator Element_const_iterator;
      typedef ::xsd::cxx::tree::traits< Element_type, char > Element_traits;

      const Element_sequence&
      Element () const;

      Element_sequence&
      Element ();

      void
      Element (const Element_sequence& s);

      // Constructors.
      //
      MonoSourceTrackIDs ();

      MonoSourceTrackIDs (const ::xercesc::DOMElement& e,
                          ::xml_schema::flags f = 0,
                          ::xml_schema::container* c = 0);

      MonoSourceTrackIDs (const MonoSourceTrackIDs& x,
                          ::xml_schema::flags f = 0,
                          ::xml_schema::container* c = 0);

      virtual MonoSourceTrackIDs*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~MonoSourceTrackIDs ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      Element_sequence Element_;
    };

    class SubDescriptors: public ::st434::s377m::types::StrongRefArray
    {
      public:
      // JPEG2000SubDescriptor_REF
      // 
      typedef ::st434::s377m::types::Ref JPEG2000SubDescriptor_REF_type;
      typedef ::xsd::cxx::tree::sequence< JPEG2000SubDescriptor_REF_type > JPEG2000SubDescriptor_REF_sequence;
      typedef JPEG2000SubDescriptor_REF_sequence::iterator JPEG2000SubDescriptor_REF_iterator;
      typedef JPEG2000SubDescriptor_REF_sequence::const_iterator JPEG2000SubDescriptor_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< JPEG2000SubDescriptor_REF_type, char > JPEG2000SubDescriptor_REF_traits;

      const JPEG2000SubDescriptor_REF_sequence&
      JPEG2000SubDescriptor_REF () const;

      JPEG2000SubDescriptor_REF_sequence&
      JPEG2000SubDescriptor_REF ();

      void
      JPEG2000SubDescriptor_REF (const JPEG2000SubDescriptor_REF_sequence& s);

      // JPEG2000SubDescriptor
      // 
      typedef ::st434::s422m::groups::JPEG2000SubDescriptorType JPEG2000SubDescriptor_type;
      typedef ::xsd::cxx::tree::sequence< JPEG2000SubDescriptor_type > JPEG2000SubDescriptor_sequence;
      typedef JPEG2000SubDescriptor_sequence::iterator JPEG2000SubDescriptor_iterator;
      typedef JPEG2000SubDescriptor_sequence::const_iterator JPEG2000SubDescriptor_const_iterator;
      typedef ::xsd::cxx::tree::traits< JPEG2000SubDescriptor_type, char > JPEG2000SubDescriptor_traits;

      const JPEG2000SubDescriptor_sequence&
      JPEG2000SubDescriptor () const;

      JPEG2000SubDescriptor_sequence&
      JPEG2000SubDescriptor ();

      void
      JPEG2000SubDescriptor (const JPEG2000SubDescriptor_sequence& s);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::sequence< DarkGroup_REF_type > DarkGroup_REF_sequence;
      typedef DarkGroup_REF_sequence::iterator DarkGroup_REF_iterator;
      typedef DarkGroup_REF_sequence::const_iterator DarkGroup_REF_const_iterator;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_sequence&
      DarkGroup_REF () const;

      DarkGroup_REF_sequence&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_sequence& s);

      // Constructors.
      //
      SubDescriptors ();

      SubDescriptors (const ::xercesc::DOMElement& e,
                      ::xml_schema::flags f = 0,
                      ::xml_schema::container* c = 0);

      SubDescriptors (const SubDescriptors& x,
                      ::xml_schema::flags f = 0,
                      ::xml_schema::container* c = 0);

      virtual SubDescriptors*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~SubDescriptors ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      JPEG2000SubDescriptor_REF_sequence JPEG2000SubDescriptor_REF_;
      JPEG2000SubDescriptor_sequence JPEG2000SubDescriptor_;
      DarkGroup_REF_sequence DarkGroup_REF_;
    };

    class PictureComponentSizing: public ::st434::s377m::types::Array
    {
      public:
      // Element
      // 
      typedef ::st434::s422m::types::J2KPictureComponentType Element_type;
      typedef ::xsd::cxx::tree::traits< Element_type, char > Element_traits;

      const Element_type&
      Element () const;

      Element_type&
      Element ();

      void
      Element (const Element_type& x);

      void
      Element (::std::auto_ptr< Element_type > p);

      // Constructors.
      //
      PictureComponentSizing (const Element_type&);

      PictureComponentSizing (::std::auto_ptr< Element_type >&);

      PictureComponentSizing (const ::xercesc::DOMElement& e,
                              ::xml_schema::flags f = 0,
                              ::xml_schema::container* c = 0);

      PictureComponentSizing (const PictureComponentSizing& x,
                              ::xml_schema::flags f = 0,
                              ::xml_schema::container* c = 0);

      virtual PictureComponentSizing*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~PictureComponentSizing ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      ::xsd::cxx::tree::one< Element_type > Element_;
    };

    class CryptographicContextObject: public ::st434::s377m::types::StrongRefHolder
    {
      public:
      // CryptographicContext_REF
      // 
      typedef ::st434::s377m::types::Ref CryptographicContext_REF_type;
      typedef ::xsd::cxx::tree::optional< CryptographicContext_REF_type > CryptographicContext_REF_optional;
      typedef ::xsd::cxx::tree::traits< CryptographicContext_REF_type, char > CryptographicContext_REF_traits;

      const CryptographicContext_REF_optional&
      CryptographicContext_REF () const;

      CryptographicContext_REF_optional&
      CryptographicContext_REF ();

      void
      CryptographicContext_REF (const CryptographicContext_REF_type& x);

      void
      CryptographicContext_REF (const CryptographicContext_REF_optional& x);

      void
      CryptographicContext_REF (::std::auto_ptr< CryptographicContext_REF_type > p);

      // CryptographicContext
      // 
      typedef ::st434::s429_6::groups::CryptographicContextType CryptographicContext_type;
      typedef ::xsd::cxx::tree::optional< CryptographicContext_type > CryptographicContext_optional;
      typedef ::xsd::cxx::tree::traits< CryptographicContext_type, char > CryptographicContext_traits;

      const CryptographicContext_optional&
      CryptographicContext () const;

      CryptographicContext_optional&
      CryptographicContext ();

      void
      CryptographicContext (const CryptographicContext_type& x);

      void
      CryptographicContext (const CryptographicContext_optional& x);

      void
      CryptographicContext (::std::auto_ptr< CryptographicContext_type > p);

      // DarkGroup_REF
      // 
      typedef ::st434::s377m::types::Ref DarkGroup_REF_type;
      typedef ::xsd::cxx::tree::optional< DarkGroup_REF_type > DarkGroup_REF_optional;
      typedef ::xsd::cxx::tree::traits< DarkGroup_REF_type, char > DarkGroup_REF_traits;

      const DarkGroup_REF_optional&
      DarkGroup_REF () const;

      DarkGroup_REF_optional&
      DarkGroup_REF ();

      void
      DarkGroup_REF (const DarkGroup_REF_type& x);

      void
      DarkGroup_REF (const DarkGroup_REF_optional& x);

      void
      DarkGroup_REF (::std::auto_ptr< DarkGroup_REF_type > p);

      // Constructors.
      //
      CryptographicContextObject ();

      CryptographicContextObject (const ::xercesc::DOMElement& e,
                                  ::xml_schema::flags f = 0,
                                  ::xml_schema::container* c = 0);

      CryptographicContextObject (const CryptographicContextObject& x,
                                  ::xml_schema::flags f = 0,
                                  ::xml_schema::container* c = 0);

      virtual CryptographicContextObject*
      _clone (::xml_schema::flags f = 0,
              ::xml_schema::container* c = 0) const;

      virtual 
      ~CryptographicContextObject ();

      // Implementation.
      //
      protected:
      void
      parse (::xsd::cxx::xml::dom::parser< char >&,
             ::xml_schema::flags);

      protected:
      CryptographicContext_REF_optional CryptographicContext_REF_;
      CryptographicContext_optional CryptographicContext_;
      DarkGroup_REF_optional DarkGroup_REF_;
    };
  }
}

#include <iosfwd>

#include <xercesc/sax/InputSource.hpp>
#include <xercesc/dom/DOMDocument.hpp>
#include <xercesc/dom/DOMErrorHandler.hpp>

namespace properties
{
  namespace S335M
  {
    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SupplyContractNumber (const ::std::string& uri,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SupplyContractNumber (const ::std::string& uri,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SupplyContractNumber (const ::std::string& uri,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SupplyContractNumber (::std::istream& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SupplyContractNumber (::std::istream& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SupplyContractNumber (::std::istream& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SupplyContractNumber (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SupplyContractNumber (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SupplyContractNumber (::std::istream& is,
                          const ::std::string& id,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SupplyContractNumber (::xercesc::InputSource& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SupplyContractNumber (::xercesc::InputSource& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SupplyContractNumber (::xercesc::InputSource& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SupplyContractNumber (const ::xercesc::DOMDocument& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SupplyContractNumber (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupKind (const ::std::string& uri,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupKind (const ::std::string& uri,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupKind (const ::std::string& uri,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupKind (::std::istream& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupKind (::std::istream& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupKind (::std::istream& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupKind (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupKind (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupKind (::std::istream& is,
                          const ::std::string& id,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupKind (::xercesc::InputSource& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupKind (::xercesc::InputSource& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupKind (::xercesc::InputSource& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupKind (const ::xercesc::DOMDocument& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupKind (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupTitle (const ::std::string& uri,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupTitle (const ::std::string& uri,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupTitle (const ::std::string& uri,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupTitle (::std::istream& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupTitle (::std::istream& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupTitle (::std::istream& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupTitle (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupTitle (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupTitle (::std::istream& is,
                           const ::std::string& id,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupTitle (::xercesc::InputSource& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupTitle (::xercesc::InputSource& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupTitle (::xercesc::InputSource& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupTitle (const ::xercesc::DOMDocument& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProgrammingGroupTitle (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicStartNumber (const ::std::string& uri,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicStartNumber (const ::std::string& uri,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicStartNumber (const ::std::string& uri,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicStartNumber (::std::istream& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicStartNumber (::std::istream& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicStartNumber (::std::istream& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicStartNumber (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicStartNumber (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicStartNumber (::std::istream& is,
                         const ::std::string& id,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicStartNumber (::xercesc::InputSource& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicStartNumber (::xercesc::InputSource& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicStartNumber (::xercesc::InputSource& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicStartNumber (const ::xercesc::DOMDocument& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicStartNumber (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicEndNumber (const ::std::string& uri,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicEndNumber (const ::std::string& uri,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicEndNumber (const ::std::string& uri,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicEndNumber (::std::istream& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicEndNumber (::std::istream& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicEndNumber (::std::istream& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicEndNumber (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicEndNumber (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicEndNumber (::std::istream& is,
                       const ::std::string& id,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicEndNumber (::xercesc::InputSource& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicEndNumber (::xercesc::InputSource& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicEndNumber (::xercesc::InputSource& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicEndNumber (const ::xercesc::DOMDocument& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    EpisodicEndNumber (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CopyrightOwner (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CopyrightOwner (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CopyrightOwner (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CopyrightOwner (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CopyrightOwner (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CopyrightOwner (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CopyrightOwner (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CopyrightOwner (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CopyrightOwner (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CopyrightOwner (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CopyrightOwner (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CopyrightOwner (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CopyrightOwner (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CopyrightOwner (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyDescription (const ::std::string& uri,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyDescription (const ::std::string& uri,
                                     ::xml_schema::error_handler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyDescription (const ::std::string& uri,
                                     ::xercesc::DOMErrorHandler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyDescription (::std::istream& is,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyDescription (::std::istream& is,
                                     ::xml_schema::error_handler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyDescription (::std::istream& is,
                                     ::xercesc::DOMErrorHandler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyDescription (::std::istream& is,
                                     const ::std::string& id,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyDescription (::std::istream& is,
                                     const ::std::string& id,
                                     ::xml_schema::error_handler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyDescription (::std::istream& is,
                                     const ::std::string& id,
                                     ::xercesc::DOMErrorHandler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyDescription (::xercesc::InputSource& is,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyDescription (::xercesc::InputSource& is,
                                     ::xml_schema::error_handler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyDescription (::xercesc::InputSource& is,
                                     ::xercesc::DOMErrorHandler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyDescription (const ::xercesc::DOMDocument& d,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyDescription (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyRight (const ::std::string& uri,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyRight (const ::std::string& uri,
                               ::xml_schema::error_handler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyRight (const ::std::string& uri,
                               ::xercesc::DOMErrorHandler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyRight (::std::istream& is,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyRight (::std::istream& is,
                               ::xml_schema::error_handler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyRight (::std::istream& is,
                               ::xercesc::DOMErrorHandler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyRight (::std::istream& is,
                               const ::std::string& id,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyRight (::std::istream& is,
                               const ::std::string& id,
                               ::xml_schema::error_handler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyRight (::std::istream& is,
                               const ::std::string& id,
                               ::xercesc::DOMErrorHandler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyRight (::xercesc::InputSource& is,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyRight (::xercesc::InputSource& is,
                               ::xml_schema::error_handler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyRight (::xercesc::InputSource& is,
                               ::xercesc::DOMErrorHandler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyRight (const ::xercesc::DOMDocument& d,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntellectualPropertyRight (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Rightsholder (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Rightsholder (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Rightsholder (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Rightsholder (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Rightsholder (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Rightsholder (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Rightsholder (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Rightsholder (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Rightsholder (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Rightsholder (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Rightsholder (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Rightsholder (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Rightsholder (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Rightsholder (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsManagementAuthority (const ::std::string& uri,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsManagementAuthority (const ::std::string& uri,
                               ::xml_schema::error_handler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsManagementAuthority (const ::std::string& uri,
                               ::xercesc::DOMErrorHandler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsManagementAuthority (::std::istream& is,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsManagementAuthority (::std::istream& is,
                               ::xml_schema::error_handler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsManagementAuthority (::std::istream& is,
                               ::xercesc::DOMErrorHandler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsManagementAuthority (::std::istream& is,
                               const ::std::string& id,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsManagementAuthority (::std::istream& is,
                               const ::std::string& id,
                               ::xml_schema::error_handler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsManagementAuthority (::std::istream& is,
                               const ::std::string& id,
                               ::xercesc::DOMErrorHandler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsManagementAuthority (::xercesc::InputSource& is,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsManagementAuthority (::xercesc::InputSource& is,
                               ::xml_schema::error_handler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsManagementAuthority (::xercesc::InputSource& is,
                               ::xercesc::DOMErrorHandler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsManagementAuthority (const ::xercesc::DOMDocument& d,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsManagementAuthority (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxNumberOfUsages (const ::std::string& uri,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxNumberOfUsages (const ::std::string& uri,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxNumberOfUsages (const ::std::string& uri,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxNumberOfUsages (::std::istream& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxNumberOfUsages (::std::istream& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxNumberOfUsages (::std::istream& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxNumberOfUsages (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxNumberOfUsages (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxNumberOfUsages (::std::istream& is,
                       const ::std::string& id,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxNumberOfUsages (::xercesc::InputSource& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxNumberOfUsages (::xercesc::InputSource& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxNumberOfUsages (::xercesc::InputSource& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxNumberOfUsages (const ::xercesc::DOMDocument& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxNumberOfUsages (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsCondition (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsCondition (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsCondition (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsCondition (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsCondition (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsCondition (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsCondition (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsCondition (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsCondition (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsCondition (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsCondition (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsCondition (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsCondition (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsCondition (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsComment (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsComment (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsComment (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsComment (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsComment (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsComment (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsComment (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsComment (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsComment (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsComment (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsComment (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsComment (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsComment (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RightsComment (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IdentificationIssuingAuthority (const ::std::string& uri,
                                    ::xml_schema::flags f = 0,
                                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IdentificationIssuingAuthority (const ::std::string& uri,
                                    ::xml_schema::error_handler& eh,
                                    ::xml_schema::flags f = 0,
                                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IdentificationIssuingAuthority (const ::std::string& uri,
                                    ::xercesc::DOMErrorHandler& eh,
                                    ::xml_schema::flags f = 0,
                                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IdentificationIssuingAuthority (::std::istream& is,
                                    ::xml_schema::flags f = 0,
                                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IdentificationIssuingAuthority (::std::istream& is,
                                    ::xml_schema::error_handler& eh,
                                    ::xml_schema::flags f = 0,
                                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IdentificationIssuingAuthority (::std::istream& is,
                                    ::xercesc::DOMErrorHandler& eh,
                                    ::xml_schema::flags f = 0,
                                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IdentificationIssuingAuthority (::std::istream& is,
                                    const ::std::string& id,
                                    ::xml_schema::flags f = 0,
                                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IdentificationIssuingAuthority (::std::istream& is,
                                    const ::std::string& id,
                                    ::xml_schema::error_handler& eh,
                                    ::xml_schema::flags f = 0,
                                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IdentificationIssuingAuthority (::std::istream& is,
                                    const ::std::string& id,
                                    ::xercesc::DOMErrorHandler& eh,
                                    ::xml_schema::flags f = 0,
                                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IdentificationIssuingAuthority (::xercesc::InputSource& is,
                                    ::xml_schema::flags f = 0,
                                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IdentificationIssuingAuthority (::xercesc::InputSource& is,
                                    ::xml_schema::error_handler& eh,
                                    ::xml_schema::flags f = 0,
                                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IdentificationIssuingAuthority (::xercesc::InputSource& is,
                                    ::xercesc::DOMErrorHandler& eh,
                                    ::xml_schema::flags f = 0,
                                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IdentificationIssuingAuthority (const ::xercesc::DOMDocument& d,
                                    ::xml_schema::flags f = 0,
                                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IdentificationIssuingAuthority (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                                    ::xml_schema::flags f = 0,
                                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingOrganizationName (const ::std::string& uri,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingOrganizationName (const ::std::string& uri,
                                ::xml_schema::error_handler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingOrganizationName (const ::std::string& uri,
                                ::xercesc::DOMErrorHandler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingOrganizationName (::std::istream& is,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingOrganizationName (::std::istream& is,
                                ::xml_schema::error_handler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingOrganizationName (::std::istream& is,
                                ::xercesc::DOMErrorHandler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingOrganizationName (::std::istream& is,
                                const ::std::string& id,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingOrganizationName (::std::istream& is,
                                const ::std::string& id,
                                ::xml_schema::error_handler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingOrganizationName (::std::istream& is,
                                const ::std::string& id,
                                ::xercesc::DOMErrorHandler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingOrganizationName (::xercesc::InputSource& is,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingOrganizationName (::xercesc::InputSource& is,
                                ::xml_schema::error_handler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingOrganizationName (::xercesc::InputSource& is,
                                ::xercesc::DOMErrorHandler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingOrganizationName (const ::xercesc::DOMDocument& d,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingOrganizationName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingServiceName (const ::std::string& uri,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingServiceName (const ::std::string& uri,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingServiceName (const ::std::string& uri,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingServiceName (::std::istream& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingServiceName (::std::istream& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingServiceName (::std::istream& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingServiceName (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingServiceName (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingServiceName (::std::istream& is,
                           const ::std::string& id,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingServiceName (::xercesc::InputSource& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingServiceName (::xercesc::InputSource& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingServiceName (::xercesc::InputSource& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingServiceName (const ::xercesc::DOMDocument& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingServiceName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingMediumName (const ::std::string& uri,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingMediumName (const ::std::string& uri,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingMediumName (const ::std::string& uri,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingMediumName (::std::istream& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingMediumName (::std::istream& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingMediumName (::std::istream& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingMediumName (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingMediumName (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingMediumName (::std::istream& is,
                          const ::std::string& id,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingMediumName (::xercesc::InputSource& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingMediumName (::xercesc::InputSource& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingMediumName (::xercesc::InputSource& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingMediumName (const ::xercesc::DOMDocument& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingMediumName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingRegionName (const ::std::string& uri,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingRegionName (const ::std::string& uri,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingRegionName (const ::std::string& uri,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingRegionName (::std::istream& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingRegionName (::std::istream& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingRegionName (::std::istream& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingRegionName (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingRegionName (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingRegionName (::std::istream& is,
                          const ::std::string& id,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingRegionName (::xercesc::InputSource& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingRegionName (::xercesc::InputSource& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingRegionName (::xercesc::InputSource& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingRegionName (const ::xercesc::DOMDocument& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PublishingRegionName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContributionStatus (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContributionStatus (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContributionStatus (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContributionStatus (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContributionStatus (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContributionStatus (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContributionStatus (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContributionStatus (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContributionStatus (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContributionStatus (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContributionStatus (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContributionStatus (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContributionStatus (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContributionStatus (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationKind (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationKind (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationKind (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationKind (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationKind (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationKind (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationKind (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationKind (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationKind (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationKind (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationKind (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationKind (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationKind (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationKind (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    JobFunction (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    JobFunction (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    JobFunction (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    JobFunction (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    JobFunction (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    JobFunction (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    JobFunction (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    JobFunction (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    JobFunction (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    JobFunction (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    JobFunction (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    JobFunction (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    JobFunction (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    JobFunction (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    JobFunctionCode (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    JobFunctionCode (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    JobFunctionCode (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    JobFunctionCode (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    JobFunctionCode (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    JobFunctionCode (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    JobFunctionCode (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    JobFunctionCode (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    JobFunctionCode (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    JobFunctionCode (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    JobFunctionCode (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    JobFunctionCode (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    JobFunctionCode (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    JobFunctionCode (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoleName (const ::std::string& uri,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoleName (const ::std::string& uri,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoleName (const ::std::string& uri,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoleName (::std::istream& is,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoleName (::std::istream& is,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoleName (::std::istream& is,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoleName (::std::istream& is,
              const ::std::string& id,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoleName (::std::istream& is,
              const ::std::string& id,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoleName (::std::istream& is,
              const ::std::string& id,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoleName (::xercesc::InputSource& is,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoleName (::xercesc::InputSource& is,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoleName (::xercesc::InputSource& is,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoleName (const ::xercesc::DOMDocument& d,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoleName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactDepartment (const ::std::string& uri,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactDepartment (const ::std::string& uri,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactDepartment (const ::std::string& uri,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactDepartment (::std::istream& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactDepartment (::std::istream& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactDepartment (::std::istream& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactDepartment (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactDepartment (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactDepartment (::std::istream& is,
                       const ::std::string& id,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactDepartment (::xercesc::InputSource& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactDepartment (::xercesc::InputSource& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactDepartment (::xercesc::InputSource& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactDepartment (const ::xercesc::DOMDocument& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactDepartment (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FamilyName (const ::std::string& uri,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FamilyName (const ::std::string& uri,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FamilyName (const ::std::string& uri,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FamilyName (::std::istream& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FamilyName (::std::istream& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FamilyName (::std::istream& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FamilyName (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FamilyName (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FamilyName (::std::istream& is,
                const ::std::string& id,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FamilyName (::xercesc::InputSource& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FamilyName (::xercesc::InputSource& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FamilyName (::xercesc::InputSource& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FamilyName (const ::xercesc::DOMDocument& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FamilyName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FirstGivenName (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FirstGivenName (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FirstGivenName (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FirstGivenName (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FirstGivenName (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FirstGivenName (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FirstGivenName (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FirstGivenName (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FirstGivenName (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FirstGivenName (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FirstGivenName (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FirstGivenName (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FirstGivenName (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FirstGivenName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Salutation (const ::std::string& uri,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Salutation (const ::std::string& uri,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Salutation (const ::std::string& uri,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Salutation (::std::istream& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Salutation (::std::istream& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Salutation (::std::istream& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Salutation (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Salutation (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Salutation (::std::istream& is,
                const ::std::string& id,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Salutation (::xercesc::InputSource& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Salutation (::xercesc::InputSource& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Salutation (::xercesc::InputSource& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Salutation (const ::xercesc::DOMDocument& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Salutation (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    HonorsQualifications (const ::std::string& uri,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    HonorsQualifications (const ::std::string& uri,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    HonorsQualifications (const ::std::string& uri,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    HonorsQualifications (::std::istream& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    HonorsQualifications (::std::istream& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    HonorsQualifications (::std::istream& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    HonorsQualifications (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    HonorsQualifications (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    HonorsQualifications (::std::istream& is,
                          const ::std::string& id,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    HonorsQualifications (::xercesc::InputSource& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    HonorsQualifications (::xercesc::InputSource& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    HonorsQualifications (::xercesc::InputSource& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    HonorsQualifications (const ::xercesc::DOMDocument& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    HonorsQualifications (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PersonDescription (const ::std::string& uri,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PersonDescription (const ::std::string& uri,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PersonDescription (const ::std::string& uri,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PersonDescription (::std::istream& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PersonDescription (::std::istream& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PersonDescription (::std::istream& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PersonDescription (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PersonDescription (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PersonDescription (::std::istream& is,
                       const ::std::string& id,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PersonDescription (::xercesc::InputSource& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PersonDescription (::xercesc::InputSource& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PersonDescription (::xercesc::InputSource& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PersonDescription (const ::xercesc::DOMDocument& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PersonDescription (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OtherGivenNames (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OtherGivenNames (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OtherGivenNames (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OtherGivenNames (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OtherGivenNames (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OtherGivenNames (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OtherGivenNames (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OtherGivenNames (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OtherGivenNames (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OtherGivenNames (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OtherGivenNames (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OtherGivenNames (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OtherGivenNames (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OtherGivenNames (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AlternateName (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AlternateName (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AlternateName (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AlternateName (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AlternateName (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AlternateName (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AlternateName (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AlternateName (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AlternateName (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AlternateName (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AlternateName (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AlternateName (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AlternateName (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AlternateName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LinkingName (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LinkingName (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LinkingName (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LinkingName (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LinkingName (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LinkingName (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LinkingName (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LinkingName (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LinkingName (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LinkingName (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LinkingName (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LinkingName (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LinkingName (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LinkingName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NameSuffix (const ::std::string& uri,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NameSuffix (const ::std::string& uri,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NameSuffix (const ::std::string& uri,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NameSuffix (::std::istream& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NameSuffix (::std::istream& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NameSuffix (::std::istream& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NameSuffix (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NameSuffix (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NameSuffix (::std::istream& is,
                const ::std::string& id,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NameSuffix (::xercesc::InputSource& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NameSuffix (::xercesc::InputSource& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NameSuffix (::xercesc::InputSource& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NameSuffix (const ::xercesc::DOMDocument& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NameSuffix (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FormerFamilyName (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FormerFamilyName (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FormerFamilyName (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FormerFamilyName (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FormerFamilyName (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FormerFamilyName (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FormerFamilyName (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FormerFamilyName (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FormerFamilyName (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FormerFamilyName (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FormerFamilyName (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FormerFamilyName (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FormerFamilyName (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FormerFamilyName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Nationality (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Nationality (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Nationality (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Nationality (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Nationality (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Nationality (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Nationality (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Nationality (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Nationality (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Nationality (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Nationality (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Nationality (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Nationality (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Nationality (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Citizenship (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Citizenship (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Citizenship (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Citizenship (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Citizenship (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Citizenship (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Citizenship (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Citizenship (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Citizenship (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Citizenship (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Citizenship (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Citizenship (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Citizenship (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Citizenship (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationMainName (const ::std::string& uri,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationMainName (const ::std::string& uri,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationMainName (const ::std::string& uri,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationMainName (::std::istream& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationMainName (::std::istream& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationMainName (::std::istream& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationMainName (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationMainName (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationMainName (::std::istream& is,
                          const ::std::string& id,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationMainName (::xercesc::InputSource& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationMainName (::xercesc::InputSource& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationMainName (::xercesc::InputSource& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationMainName (const ::xercesc::DOMDocument& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationMainName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    IndexStreamID (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    IndexStreamID (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    IndexStreamID (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    IndexStreamID (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    IndexStreamID (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    IndexStreamID (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    IndexStreamID (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    IndexStreamID (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    IndexStreamID (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    IndexStreamID (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    IndexStreamID (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    IndexStreamID (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    IndexStreamID (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    IndexStreamID (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceStreamID (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceStreamID (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceStreamID (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceStreamID (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceStreamID (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceStreamID (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceStreamID (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceStreamID (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceStreamID (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceStreamID (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceStreamID (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceStreamID (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceStreamID (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceStreamID (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::EssenceContainers >
    EssenceContainers_ (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceContainers >
    EssenceContainers_ (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceContainers >
    EssenceContainers_ (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::EssenceContainers >
    EssenceContainers_ (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceContainers >
    EssenceContainers_ (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceContainers >
    EssenceContainers_ (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceContainers >
    EssenceContainers_ (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceContainers >
    EssenceContainers_ (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceContainers >
    EssenceContainers_ (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::EssenceContainers >
    EssenceContainers_ (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceContainers >
    EssenceContainers_ (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceContainers >
    EssenceContainers_ (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::EssenceContainers >
    EssenceContainers_ (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceContainers >
    EssenceContainers_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    PackageID (const ::std::string& uri,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    PackageID (const ::std::string& uri,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    PackageID (const ::std::string& uri,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    PackageID (::std::istream& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    PackageID (::std::istream& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    PackageID (::std::istream& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    PackageID (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    PackageID (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    PackageID (::std::istream& is,
               const ::std::string& id,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    PackageID (::xercesc::InputSource& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    PackageID (::xercesc::InputSource& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    PackageID (::xercesc::InputSource& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    PackageID (const ::xercesc::DOMDocument& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    PackageID (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TrackID (const ::std::string& uri,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TrackID (const ::std::string& uri,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TrackID (const ::std::string& uri,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TrackID (::std::istream& is,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TrackID (::std::istream& is,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TrackID (::std::istream& is,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TrackID (::std::istream& is,
             const ::std::string& id,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TrackID (::std::istream& is,
             const ::std::string& id,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TrackID (::std::istream& is,
             const ::std::string& id,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TrackID (::xercesc::InputSource& is,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TrackID (::xercesc::InputSource& is,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TrackID (::xercesc::InputSource& is,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TrackID (const ::xercesc::DOMDocument& d,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TrackID (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    URL (const ::std::string& uri,
         ::xml_schema::flags f = 0,
         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    URL (const ::std::string& uri,
         ::xml_schema::error_handler& eh,
         ::xml_schema::flags f = 0,
         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    URL (const ::std::string& uri,
         ::xercesc::DOMErrorHandler& eh,
         ::xml_schema::flags f = 0,
         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    URL (::std::istream& is,
         ::xml_schema::flags f = 0,
         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    URL (::std::istream& is,
         ::xml_schema::error_handler& eh,
         ::xml_schema::flags f = 0,
         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    URL (::std::istream& is,
         ::xercesc::DOMErrorHandler& eh,
         ::xml_schema::flags f = 0,
         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    URL (::std::istream& is,
         const ::std::string& id,
         ::xml_schema::flags f = 0,
         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    URL (::std::istream& is,
         const ::std::string& id,
         ::xml_schema::error_handler& eh,
         ::xml_schema::flags f = 0,
         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    URL (::std::istream& is,
         const ::std::string& id,
         ::xercesc::DOMErrorHandler& eh,
         ::xml_schema::flags f = 0,
         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    URL (::xercesc::InputSource& is,
         ::xml_schema::flags f = 0,
         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    URL (::xercesc::InputSource& is,
         ::xml_schema::error_handler& eh,
         ::xml_schema::flags f = 0,
         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    URL (::xercesc::InputSource& is,
         ::xercesc::DOMErrorHandler& eh,
         ::xml_schema::flags f = 0,
         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    URL (const ::xercesc::DOMDocument& d,
         ::xml_schema::flags f = 0,
         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    URL (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
         ::xml_schema::flags f = 0,
         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationName (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationName (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationName (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationName (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationName (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationName (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationName (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationName (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationName (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationName (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationName (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationName (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationName (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PackageName (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PackageName (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PackageName (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PackageName (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PackageName (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PackageName (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PackageName (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PackageName (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PackageName (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PackageName (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PackageName (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PackageName (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PackageName (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PackageName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceTrackNumber (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceTrackNumber (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceTrackNumber (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceTrackNumber (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceTrackNumber (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceTrackNumber (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceTrackNumber (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceTrackNumber (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceTrackNumber (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceTrackNumber (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceTrackNumber (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceTrackNumber (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceTrackNumber (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EssenceTrackNumber (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    OperationalPattern (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    OperationalPattern (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    OperationalPattern (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    OperationalPattern (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    OperationalPattern (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    OperationalPattern (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    OperationalPattern (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    OperationalPattern (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    OperationalPattern (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    OperationalPattern (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    OperationalPattern (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    OperationalPattern (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    OperationalPattern (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    OperationalPattern (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::DescriptiveSchemes >
    DescriptiveSchemes_ (const ::std::string& uri,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveSchemes >
    DescriptiveSchemes_ (const ::std::string& uri,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveSchemes >
    DescriptiveSchemes_ (const ::std::string& uri,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::DescriptiveSchemes >
    DescriptiveSchemes_ (::std::istream& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveSchemes >
    DescriptiveSchemes_ (::std::istream& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveSchemes >
    DescriptiveSchemes_ (::std::istream& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveSchemes >
    DescriptiveSchemes_ (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveSchemes >
    DescriptiveSchemes_ (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveSchemes >
    DescriptiveSchemes_ (::std::istream& is,
                         const ::std::string& id,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::DescriptiveSchemes >
    DescriptiveSchemes_ (::xercesc::InputSource& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveSchemes >
    DescriptiveSchemes_ (::xercesc::InputSource& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveSchemes >
    DescriptiveSchemes_ (::xercesc::InputSource& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::DescriptiveSchemes >
    DescriptiveSchemes_ (const ::xercesc::DOMDocument& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveSchemes >
    DescriptiveSchemes_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TrackName (const ::std::string& uri,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TrackName (const ::std::string& uri,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TrackName (const ::std::string& uri,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TrackName (::std::istream& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TrackName (::std::istream& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TrackName (::std::istream& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TrackName (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TrackName (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TrackName (::std::istream& is,
               const ::std::string& id,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TrackName (::xercesc::InputSource& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TrackName (::xercesc::InputSource& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TrackName (::xercesc::InputSource& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TrackName (const ::xercesc::DOMDocument& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TrackName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::DescriptiveClipDescribedTrackIDs >
    DescriptiveClipDescribedTrackIDs_ (const ::std::string& uri,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveClipDescribedTrackIDs >
    DescriptiveClipDescribedTrackIDs_ (const ::std::string& uri,
                                       ::xml_schema::error_handler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveClipDescribedTrackIDs >
    DescriptiveClipDescribedTrackIDs_ (const ::std::string& uri,
                                       ::xercesc::DOMErrorHandler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::DescriptiveClipDescribedTrackIDs >
    DescriptiveClipDescribedTrackIDs_ (::std::istream& is,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveClipDescribedTrackIDs >
    DescriptiveClipDescribedTrackIDs_ (::std::istream& is,
                                       ::xml_schema::error_handler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveClipDescribedTrackIDs >
    DescriptiveClipDescribedTrackIDs_ (::std::istream& is,
                                       ::xercesc::DOMErrorHandler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveClipDescribedTrackIDs >
    DescriptiveClipDescribedTrackIDs_ (::std::istream& is,
                                       const ::std::string& id,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveClipDescribedTrackIDs >
    DescriptiveClipDescribedTrackIDs_ (::std::istream& is,
                                       const ::std::string& id,
                                       ::xml_schema::error_handler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveClipDescribedTrackIDs >
    DescriptiveClipDescribedTrackIDs_ (::std::istream& is,
                                       const ::std::string& id,
                                       ::xercesc::DOMErrorHandler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::DescriptiveClipDescribedTrackIDs >
    DescriptiveClipDescribedTrackIDs_ (::xercesc::InputSource& is,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveClipDescribedTrackIDs >
    DescriptiveClipDescribedTrackIDs_ (::xercesc::InputSource& is,
                                       ::xml_schema::error_handler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveClipDescribedTrackIDs >
    DescriptiveClipDescribedTrackIDs_ (::xercesc::InputSource& is,
                                       ::xercesc::DOMErrorHandler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::DescriptiveClipDescribedTrackIDs >
    DescriptiveClipDescribedTrackIDs_ (const ::xercesc::DOMDocument& d,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveClipDescribedTrackIDs >
    DescriptiveClipDescribedTrackIDs_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::DescribedTrackIDs >
    DescribedTrackIDs_ (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescribedTrackIDs >
    DescribedTrackIDs_ (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescribedTrackIDs >
    DescribedTrackIDs_ (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::DescribedTrackIDs >
    DescribedTrackIDs_ (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescribedTrackIDs >
    DescribedTrackIDs_ (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescribedTrackIDs >
    DescribedTrackIDs_ (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescribedTrackIDs >
    DescribedTrackIDs_ (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescribedTrackIDs >
    DescribedTrackIDs_ (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescribedTrackIDs >
    DescribedTrackIDs_ (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::DescribedTrackIDs >
    DescribedTrackIDs_ (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescribedTrackIDs >
    DescribedTrackIDs_ (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescribedTrackIDs >
    DescribedTrackIDs_ (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::DescribedTrackIDs >
    DescribedTrackIDs_ (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescribedTrackIDs >
    DescribedTrackIDs_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::LocalTag >
    LocalTag (const ::std::string& uri,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::LocalTag >
    LocalTag (const ::std::string& uri,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::LocalTag >
    LocalTag (const ::std::string& uri,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::LocalTag >
    LocalTag (::std::istream& is,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::LocalTag >
    LocalTag (::std::istream& is,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::LocalTag >
    LocalTag (::std::istream& is,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::LocalTag >
    LocalTag (::std::istream& is,
              const ::std::string& id,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::LocalTag >
    LocalTag (::std::istream& is,
              const ::std::string& id,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::LocalTag >
    LocalTag (::std::istream& is,
              const ::std::string& id,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::LocalTag >
    LocalTag (::xercesc::InputSource& is,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::LocalTag >
    LocalTag (::xercesc::InputSource& is,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::LocalTag >
    LocalTag (::xercesc::InputSource& is,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::LocalTag >
    LocalTag (const ::xercesc::DOMDocument& d,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::LocalTag >
    LocalTag (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    LocalTagUniqueID (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    LocalTagUniqueID (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    LocalTagUniqueID (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    LocalTagUniqueID (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    LocalTagUniqueID (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    LocalTagUniqueID (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    LocalTagUniqueID (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    LocalTagUniqueID (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    LocalTagUniqueID (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    LocalTagUniqueID (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    LocalTagUniqueID (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    LocalTagUniqueID (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    LocalTagUniqueID (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    LocalTagUniqueID (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ContactID (const ::std::string& uri,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ContactID (const ::std::string& uri,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ContactID (const ::std::string& uri,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ContactID (::std::istream& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ContactID (::std::istream& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ContactID (::std::istream& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ContactID (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ContactID (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ContactID (::std::istream& is,
               const ::std::string& id,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ContactID (::xercesc::InputSource& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ContactID (::xercesc::InputSource& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ContactID (::xercesc::InputSource& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ContactID (const ::xercesc::DOMDocument& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ContactID (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceDesignation (const ::std::string& uri,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceDesignation (const ::std::string& uri,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceDesignation (const ::std::string& uri,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceDesignation (::std::istream& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceDesignation (::std::istream& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceDesignation (::std::istream& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceDesignation (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceDesignation (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceDesignation (::std::istream& is,
                       const ::std::string& id,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceDesignation (::xercesc::InputSource& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceDesignation (::xercesc::InputSource& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceDesignation (::xercesc::InputSource& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceDesignation (const ::xercesc::DOMDocument& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceDesignation (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceModel (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceModel (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceModel (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceModel (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceModel (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceModel (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceModel (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceModel (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceModel (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceModel (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceModel (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceModel (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceModel (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceModel (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceSerialNumber (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceSerialNumber (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceSerialNumber (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceSerialNumber (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceSerialNumber (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceSerialNumber (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceSerialNumber (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceSerialNumber (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceSerialNumber (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceSerialNumber (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceSerialNumber (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceSerialNumber (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceSerialNumber (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceSerialNumber (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IEEEDeviceIdentifier (const ::std::string& uri,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IEEEDeviceIdentifier (const ::std::string& uri,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IEEEDeviceIdentifier (const ::std::string& uri,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IEEEDeviceIdentifier (::std::istream& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IEEEDeviceIdentifier (::std::istream& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IEEEDeviceIdentifier (::std::istream& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IEEEDeviceIdentifier (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IEEEDeviceIdentifier (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IEEEDeviceIdentifier (::std::istream& is,
                          const ::std::string& id,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IEEEDeviceIdentifier (::xercesc::InputSource& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IEEEDeviceIdentifier (::xercesc::InputSource& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IEEEDeviceIdentifier (::xercesc::InputSource& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IEEEDeviceIdentifier (const ::xercesc::DOMDocument& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IEEEDeviceIdentifier (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceKind (const ::std::string& uri,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceKind (const ::std::string& uri,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceKind (const ::std::string& uri,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceKind (::std::istream& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceKind (::std::istream& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceKind (::std::istream& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceKind (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceKind (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceKind (::std::istream& is,
                const ::std::string& id,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceKind (::xercesc::InputSource& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceKind (::xercesc::InputSource& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceKind (::xercesc::InputSource& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceKind (const ::xercesc::DOMDocument& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceKind (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceAssetNumber (const ::std::string& uri,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceAssetNumber (const ::std::string& uri,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceAssetNumber (const ::std::string& uri,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceAssetNumber (::std::istream& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceAssetNumber (::std::istream& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceAssetNumber (::std::istream& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceAssetNumber (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceAssetNumber (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceAssetNumber (::std::istream& is,
                       const ::std::string& id,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceAssetNumber (::xercesc::InputSource& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceAssetNumber (::xercesc::InputSource& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceAssetNumber (::xercesc::InputSource& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceAssetNumber (const ::xercesc::DOMDocument& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    DeviceAssetNumber (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SMPTEUniversalLabelLocator (const ::std::string& uri,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SMPTEUniversalLabelLocator (const ::std::string& uri,
                                ::xml_schema::error_handler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SMPTEUniversalLabelLocator (const ::std::string& uri,
                                ::xercesc::DOMErrorHandler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SMPTEUniversalLabelLocator (::std::istream& is,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SMPTEUniversalLabelLocator (::std::istream& is,
                                ::xml_schema::error_handler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SMPTEUniversalLabelLocator (::std::istream& is,
                                ::xercesc::DOMErrorHandler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SMPTEUniversalLabelLocator (::std::istream& is,
                                const ::std::string& id,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SMPTEUniversalLabelLocator (::std::istream& is,
                                const ::std::string& id,
                                ::xml_schema::error_handler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SMPTEUniversalLabelLocator (::std::istream& is,
                                const ::std::string& id,
                                ::xercesc::DOMErrorHandler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SMPTEUniversalLabelLocator (::xercesc::InputSource& is,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SMPTEUniversalLabelLocator (::xercesc::InputSource& is,
                                ::xml_schema::error_handler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SMPTEUniversalLabelLocator (::xercesc::InputSource& is,
                                ::xercesc::DOMErrorHandler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SMPTEUniversalLabelLocator (const ::xercesc::DOMDocument& d,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SMPTEUniversalLabelLocator (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    IdentificationLocator (const ::std::string& uri,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    IdentificationLocator (const ::std::string& uri,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    IdentificationLocator (const ::std::string& uri,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    IdentificationLocator (::std::istream& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    IdentificationLocator (::std::istream& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    IdentificationLocator (::std::istream& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    IdentificationLocator (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    IdentificationLocator (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    IdentificationLocator (::std::istream& is,
                           const ::std::string& id,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    IdentificationLocator (::xercesc::InputSource& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    IdentificationLocator (::xercesc::InputSource& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    IdentificationLocator (::xercesc::InputSource& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    IdentificationLocator (const ::xercesc::DOMDocument& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    IdentificationLocator (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ProjectNumber (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ProjectNumber (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ProjectNumber (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ProjectNumber (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ProjectNumber (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ProjectNumber (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ProjectNumber (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ProjectNumber (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ProjectNumber (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ProjectNumber (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ProjectNumber (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ProjectNumber (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ProjectNumber (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ProjectNumber (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProjectName (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProjectName (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProjectName (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProjectName (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProjectName (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProjectName (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProjectName (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProjectName (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProjectName (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProjectName (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProjectName (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProjectName (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProjectName (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ProjectName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    MainTitle (const ::std::string& uri,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    MainTitle (const ::std::string& uri,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    MainTitle (const ::std::string& uri,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    MainTitle (::std::istream& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    MainTitle (::std::istream& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    MainTitle (::std::istream& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    MainTitle (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    MainTitle (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    MainTitle (::std::istream& is,
               const ::std::string& id,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    MainTitle (::xercesc::InputSource& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    MainTitle (::xercesc::InputSource& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    MainTitle (::xercesc::InputSource& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    MainTitle (const ::xercesc::DOMDocument& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    MainTitle (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SecondaryTitle (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SecondaryTitle (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SecondaryTitle (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SecondaryTitle (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SecondaryTitle (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SecondaryTitle (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SecondaryTitle (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SecondaryTitle (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SecondaryTitle (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SecondaryTitle (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SecondaryTitle (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SecondaryTitle (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SecondaryTitle (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SecondaryTitle (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SceneNumber (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SceneNumber (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SceneNumber (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SceneNumber (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SceneNumber (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SceneNumber (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SceneNumber (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SceneNumber (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SceneNumber (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SceneNumber (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SceneNumber (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SceneNumber (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SceneNumber (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SceneNumber (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    VersionTitle (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    VersionTitle (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    VersionTitle (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    VersionTitle (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    VersionTitle (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    VersionTitle (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    VersionTitle (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    VersionTitle (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    VersionTitle (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    VersionTitle (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    VersionTitle (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    VersionTitle (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    VersionTitle (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    VersionTitle (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    WorkingTitle (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    WorkingTitle (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    WorkingTitle (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    WorkingTitle (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    WorkingTitle (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    WorkingTitle (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    WorkingTitle (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    WorkingTitle (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    WorkingTitle (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    WorkingTitle (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    WorkingTitle (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    WorkingTitle (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    WorkingTitle (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    WorkingTitle (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OriginalTitle (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OriginalTitle (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OriginalTitle (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OriginalTitle (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OriginalTitle (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OriginalTitle (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OriginalTitle (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OriginalTitle (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OriginalTitle (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OriginalTitle (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OriginalTitle (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OriginalTitle (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OriginalTitle (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OriginalTitle (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ClipNumber (const ::std::string& uri,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ClipNumber (const ::std::string& uri,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ClipNumber (const ::std::string& uri,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ClipNumber (::std::istream& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ClipNumber (::std::istream& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ClipNumber (::std::istream& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ClipNumber (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ClipNumber (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ClipNumber (::std::istream& is,
                const ::std::string& id,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ClipNumber (::xercesc::InputSource& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ClipNumber (::xercesc::InputSource& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ClipNumber (::xercesc::InputSource& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ClipNumber (const ::xercesc::DOMDocument& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ClipNumber (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UMID64 >
    ExtendedClipID (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID64 >
    ExtendedClipID (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID64 >
    ExtendedClipID (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UMID64 >
    ExtendedClipID (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID64 >
    ExtendedClipID (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID64 >
    ExtendedClipID (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID64 >
    ExtendedClipID (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID64 >
    ExtendedClipID (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID64 >
    ExtendedClipID (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UMID64 >
    ExtendedClipID (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID64 >
    ExtendedClipID (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID64 >
    ExtendedClipID (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UMID64 >
    ExtendedClipID (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID64 >
    ExtendedClipID (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    TakeNumber (const ::std::string& uri,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    TakeNumber (const ::std::string& uri,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    TakeNumber (const ::std::string& uri,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    TakeNumber (::std::istream& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    TakeNumber (::std::istream& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    TakeNumber (::std::istream& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    TakeNumber (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    TakeNumber (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    TakeNumber (::std::istream& is,
                const ::std::string& id,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    TakeNumber (::xercesc::InputSource& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    TakeNumber (::xercesc::InputSource& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    TakeNumber (::xercesc::InputSource& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    TakeNumber (const ::xercesc::DOMDocument& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    TakeNumber (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SlateInformation (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SlateInformation (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SlateInformation (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SlateInformation (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SlateInformation (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SlateInformation (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SlateInformation (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SlateInformation (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SlateInformation (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SlateInformation (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SlateInformation (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SlateInformation (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SlateInformation (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SlateInformation (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandMainTitle (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandMainTitle (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandMainTitle (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandMainTitle (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandMainTitle (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandMainTitle (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandMainTitle (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandMainTitle (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandMainTitle (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandMainTitle (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandMainTitle (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandMainTitle (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandMainTitle (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandMainTitle (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandOriginalTitle (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandOriginalTitle (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandOriginalTitle (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandOriginalTitle (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandOriginalTitle (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandOriginalTitle (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandOriginalTitle (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandOriginalTitle (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandOriginalTitle (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandOriginalTitle (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandOriginalTitle (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandOriginalTitle (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandOriginalTitle (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BrandOriginalTitle (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkTitle (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkTitle (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkTitle (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkTitle (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkTitle (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkTitle (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkTitle (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkTitle (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkTitle (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkTitle (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkTitle (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkTitle (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkTitle (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkTitle (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::ShotTrackIDs >
    ShotTrackIDs_ (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ShotTrackIDs >
    ShotTrackIDs_ (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ShotTrackIDs >
    ShotTrackIDs_ (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::ShotTrackIDs >
    ShotTrackIDs_ (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ShotTrackIDs >
    ShotTrackIDs_ (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ShotTrackIDs >
    ShotTrackIDs_ (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ShotTrackIDs >
    ShotTrackIDs_ (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ShotTrackIDs >
    ShotTrackIDs_ (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ShotTrackIDs >
    ShotTrackIDs_ (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::ShotTrackIDs >
    ShotTrackIDs_ (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ShotTrackIDs >
    ShotTrackIDs_ (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ShotTrackIDs >
    ShotTrackIDs_ (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::ShotTrackIDs >
    ShotTrackIDs_ (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ShotTrackIDs >
    ShotTrackIDs_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierKind (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierKind (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierKind (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierKind (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierKind (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierKind (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierKind (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierKind (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierKind (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierKind (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierKind (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierKind (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierKind (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierKind (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierValue (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierValue (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierValue (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierValue (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierValue (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierValue (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierValue (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierValue (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierValue (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierValue (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierValue (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierValue (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierValue (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    IdentifierValue (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ParticipantID (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ParticipantID (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ParticipantID (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ParticipantID (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ParticipantID (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ParticipantID (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ParticipantID (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ParticipantID (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ParticipantID (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ParticipantID (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ParticipantID (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ParticipantID (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ParticipantID (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ParticipantID (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceManufacturerName (const ::std::string& uri,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceManufacturerName (const ::std::string& uri,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceManufacturerName (const ::std::string& uri,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceManufacturerName (::std::istream& is,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceManufacturerName (::std::istream& is,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceManufacturerName (::std::istream& is,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceManufacturerName (::std::istream& is,
                            const ::std::string& id,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceManufacturerName (::std::istream& is,
                            const ::std::string& id,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceManufacturerName (::std::istream& is,
                            const ::std::string& id,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceManufacturerName (::xercesc::InputSource& is,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceManufacturerName (::xercesc::InputSource& is,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceManufacturerName (::xercesc::InputSource& is,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceManufacturerName (const ::xercesc::DOMDocument& d,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceManufacturerName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationCode (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationCode (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationCode (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationCode (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationCode (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationCode (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationCode (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationCode (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationCode (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationCode (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationCode (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationCode (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationCode (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OrganizationCode (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MajorVersion (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MajorVersion (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MajorVersion (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MajorVersion (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MajorVersion (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MajorVersion (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MajorVersion (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MajorVersion (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MajorVersion (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MajorVersion (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MajorVersion (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MajorVersion (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MajorVersion (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MajorVersion (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MinorVersion (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MinorVersion (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MinorVersion (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MinorVersion (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MinorVersion (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MinorVersion (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MinorVersion (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MinorVersion (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MinorVersion (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MinorVersion (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MinorVersion (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MinorVersion (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MinorVersion (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MinorVersion (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    KAGSize (const ::std::string& uri,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    KAGSize (const ::std::string& uri,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    KAGSize (const ::std::string& uri,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    KAGSize (::std::istream& is,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    KAGSize (::std::istream& is,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    KAGSize (::std::istream& is,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    KAGSize (::std::istream& is,
             const ::std::string& id,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    KAGSize (::std::istream& is,
             const ::std::string& id,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    KAGSize (::std::istream& is,
             const ::std::string& id,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    KAGSize (::xercesc::InputSource& is,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    KAGSize (::xercesc::InputSource& is,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    KAGSize (::xercesc::InputSource& is,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    KAGSize (const ::xercesc::DOMDocument& d,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    KAGSize (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::VersionType >
    FormatVersion (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::VersionType >
    FormatVersion (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::VersionType >
    FormatVersion (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::VersionType >
    FormatVersion (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::VersionType >
    FormatVersion (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::VersionType >
    FormatVersion (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::VersionType >
    FormatVersion (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::VersionType >
    FormatVersion (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::VersionType >
    FormatVersion (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::VersionType >
    FormatVersion (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::VersionType >
    FormatVersion (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::VersionType >
    FormatVersion (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::VersionType >
    FormatVersion (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::VersionType >
    FormatVersion (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ObjectModelVersion (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ObjectModelVersion (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ObjectModelVersion (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ObjectModelVersion (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ObjectModelVersion (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ObjectModelVersion (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ObjectModelVersion (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ObjectModelVersion (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ObjectModelVersion (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ObjectModelVersion (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ObjectModelVersion (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ObjectModelVersion (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ObjectModelVersion (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ObjectModelVersion (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ReversedByteOrder (const ::std::string& uri,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ReversedByteOrder (const ::std::string& uri,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ReversedByteOrder (const ::std::string& uri,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ReversedByteOrder (::std::istream& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ReversedByteOrder (::std::istream& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ReversedByteOrder (::std::istream& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ReversedByteOrder (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ReversedByteOrder (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ReversedByteOrder (::std::istream& is,
                       const ::std::string& id,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ReversedByteOrder (::xercesc::InputSource& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ReversedByteOrder (::xercesc::InputSource& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ReversedByteOrder (::xercesc::InputSource& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ReversedByteOrder (const ::xercesc::DOMDocument& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ReversedByteOrder (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemName (const ::std::string& uri,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemName (const ::std::string& uri,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemName (const ::std::string& uri,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemName (::std::istream& is,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemName (::std::istream& is,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemName (::std::istream& is,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemName (::std::istream& is,
              const ::std::string& id,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemName (::std::istream& is,
              const ::std::string& id,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemName (::std::istream& is,
              const ::std::string& id,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemName (::xercesc::InputSource& is,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemName (::xercesc::InputSource& is,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemName (::xercesc::InputSource& is,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemName (const ::xercesc::DOMDocument& d,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemValue (const ::std::string& uri,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemValue (const ::std::string& uri,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemValue (const ::std::string& uri,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemValue (::std::istream& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemValue (::std::istream& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemValue (::std::istream& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemValue (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemValue (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemValue (::std::istream& is,
               const ::std::string& id,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemValue (::xercesc::InputSource& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemValue (::xercesc::InputSource& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemValue (::xercesc::InputSource& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemValue (const ::xercesc::DOMDocument& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ItemValue (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ContentClassification (const ::std::string& uri,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ContentClassification (const ::std::string& uri,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ContentClassification (const ::std::string& uri,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ContentClassification (::std::istream& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ContentClassification (::std::istream& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ContentClassification (::std::istream& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ContentClassification (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ContentClassification (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ContentClassification (::std::istream& is,
                           const ::std::string& id,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ContentClassification (::xercesc::InputSource& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ContentClassification (::xercesc::InputSource& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ContentClassification (::xercesc::InputSource& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ContentClassification (const ::xercesc::DOMDocument& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ContentClassification (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    InCueWords (const ::std::string& uri,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    InCueWords (const ::std::string& uri,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    InCueWords (const ::std::string& uri,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    InCueWords (::std::istream& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    InCueWords (::std::istream& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    InCueWords (::std::istream& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    InCueWords (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    InCueWords (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    InCueWords (::std::istream& is,
                const ::std::string& id,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    InCueWords (::xercesc::InputSource& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    InCueWords (::xercesc::InputSource& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    InCueWords (::xercesc::InputSource& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    InCueWords (const ::xercesc::DOMDocument& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    InCueWords (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OutCueWords (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OutCueWords (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OutCueWords (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OutCueWords (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OutCueWords (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OutCueWords (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OutCueWords (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OutCueWords (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OutCueWords (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OutCueWords (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OutCueWords (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OutCueWords (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OutCueWords (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    OutCueWords (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointKind (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointKind (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointKind (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointKind (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointKind (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointKind (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointKind (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointKind (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointKind (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointKind (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointKind (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointKind (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointKind (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointKind (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointValue (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointValue (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointValue (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointValue (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointValue (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointValue (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointValue (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointValue (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointValue (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointValue (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointValue (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointValue (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointValue (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    KeypointValue (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GroupSynopsis (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GroupSynopsis (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GroupSynopsis (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GroupSynopsis (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GroupSynopsis (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GroupSynopsis (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GroupSynopsis (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GroupSynopsis (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GroupSynopsis (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GroupSynopsis (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GroupSynopsis (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GroupSynopsis (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GroupSynopsis (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GroupSynopsis (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NominationCategory (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NominationCategory (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NominationCategory (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NominationCategory (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NominationCategory (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NominationCategory (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NominationCategory (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NominationCategory (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NominationCategory (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NominationCategory (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NominationCategory (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NominationCategory (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NominationCategory (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    NominationCategory (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotCommentKind (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotCommentKind (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotCommentKind (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotCommentKind (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotCommentKind (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotCommentKind (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotCommentKind (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotCommentKind (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotCommentKind (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotCommentKind (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotCommentKind (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotCommentKind (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotCommentKind (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotCommentKind (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotComment (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotComment (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotComment (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotComment (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotComment (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotComment (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotComment (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotComment (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotComment (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotComment (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotComment (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotComment (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotComment (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotComment (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedCaptionsLanguageCode (const ::std::string& uri,
                                  ::xml_schema::flags f = 0,
                                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedCaptionsLanguageCode (const ::std::string& uri,
                                  ::xml_schema::error_handler& eh,
                                  ::xml_schema::flags f = 0,
                                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedCaptionsLanguageCode (const ::std::string& uri,
                                  ::xercesc::DOMErrorHandler& eh,
                                  ::xml_schema::flags f = 0,
                                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedCaptionsLanguageCode (::std::istream& is,
                                  ::xml_schema::flags f = 0,
                                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedCaptionsLanguageCode (::std::istream& is,
                                  ::xml_schema::error_handler& eh,
                                  ::xml_schema::flags f = 0,
                                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedCaptionsLanguageCode (::std::istream& is,
                                  ::xercesc::DOMErrorHandler& eh,
                                  ::xml_schema::flags f = 0,
                                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedCaptionsLanguageCode (::std::istream& is,
                                  const ::std::string& id,
                                  ::xml_schema::flags f = 0,
                                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedCaptionsLanguageCode (::std::istream& is,
                                  const ::std::string& id,
                                  ::xml_schema::error_handler& eh,
                                  ::xml_schema::flags f = 0,
                                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedCaptionsLanguageCode (::std::istream& is,
                                  const ::std::string& id,
                                  ::xercesc::DOMErrorHandler& eh,
                                  ::xml_schema::flags f = 0,
                                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedCaptionsLanguageCode (::xercesc::InputSource& is,
                                  ::xml_schema::flags f = 0,
                                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedCaptionsLanguageCode (::xercesc::InputSource& is,
                                  ::xml_schema::error_handler& eh,
                                  ::xml_schema::flags f = 0,
                                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedCaptionsLanguageCode (::xercesc::InputSource& is,
                                  ::xercesc::DOMErrorHandler& eh,
                                  ::xml_schema::flags f = 0,
                                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedCaptionsLanguageCode (const ::xercesc::DOMDocument& d,
                                  ::xml_schema::flags f = 0,
                                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedCaptionsLanguageCode (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                                  ::xml_schema::flags f = 0,
                                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DescriptiveComment (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DescriptiveComment (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DescriptiveComment (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DescriptiveComment (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DescriptiveComment (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DescriptiveComment (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DescriptiveComment (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DescriptiveComment (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DescriptiveComment (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DescriptiveComment (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DescriptiveComment (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DescriptiveComment (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DescriptiveComment (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DescriptiveComment (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FrameworkExtendedTextLanguageCode (const ::std::string& uri,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FrameworkExtendedTextLanguageCode (const ::std::string& uri,
                                       ::xml_schema::error_handler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FrameworkExtendedTextLanguageCode (const ::std::string& uri,
                                       ::xercesc::DOMErrorHandler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FrameworkExtendedTextLanguageCode (::std::istream& is,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FrameworkExtendedTextLanguageCode (::std::istream& is,
                                       ::xml_schema::error_handler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FrameworkExtendedTextLanguageCode (::std::istream& is,
                                       ::xercesc::DOMErrorHandler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FrameworkExtendedTextLanguageCode (::std::istream& is,
                                       const ::std::string& id,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FrameworkExtendedTextLanguageCode (::std::istream& is,
                                       const ::std::string& id,
                                       ::xml_schema::error_handler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FrameworkExtendedTextLanguageCode (::std::istream& is,
                                       const ::std::string& id,
                                       ::xercesc::DOMErrorHandler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FrameworkExtendedTextLanguageCode (::xercesc::InputSource& is,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FrameworkExtendedTextLanguageCode (::xercesc::InputSource& is,
                                       ::xml_schema::error_handler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FrameworkExtendedTextLanguageCode (::xercesc::InputSource& is,
                                       ::xercesc::DOMErrorHandler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FrameworkExtendedTextLanguageCode (const ::xercesc::DOMDocument& d,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FrameworkExtendedTextLanguageCode (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedTextLanguageCode (const ::std::string& uri,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedTextLanguageCode (const ::std::string& uri,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedTextLanguageCode (const ::std::string& uri,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedTextLanguageCode (::std::istream& is,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedTextLanguageCode (::std::istream& is,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedTextLanguageCode (::std::istream& is,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedTextLanguageCode (::std::istream& is,
                              const ::std::string& id,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedTextLanguageCode (::std::istream& is,
                              const ::std::string& id,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedTextLanguageCode (::std::istream& is,
                              const ::std::string& id,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedTextLanguageCode (::xercesc::InputSource& is,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedTextLanguageCode (::xercesc::InputSource& is,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedTextLanguageCode (::xercesc::InputSource& is,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedTextLanguageCode (const ::xercesc::DOMDocument& d,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    ExtendedTextLanguageCode (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkThesaurusName (const ::std::string& uri,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkThesaurusName (const ::std::string& uri,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkThesaurusName (const ::std::string& uri,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkThesaurusName (::std::istream& is,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkThesaurusName (::std::istream& is,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkThesaurusName (::std::istream& is,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkThesaurusName (::std::istream& is,
                            const ::std::string& id,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkThesaurusName (::std::istream& is,
                            const ::std::string& id,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkThesaurusName (::std::istream& is,
                            const ::std::string& id,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkThesaurusName (::xercesc::InputSource& is,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkThesaurusName (::xercesc::InputSource& is,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkThesaurusName (::xercesc::InputSource& is,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkThesaurusName (const ::xercesc::DOMDocument& d,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FrameworkThesaurusName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ThesaurusName (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ThesaurusName (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ThesaurusName (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ThesaurusName (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ThesaurusName (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ThesaurusName (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ThesaurusName (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ThesaurusName (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ThesaurusName (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ThesaurusName (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ThesaurusName (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ThesaurusName (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ThesaurusName (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ThesaurusName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PrimaryExtendedSpokenLanguageCode (const ::std::string& uri,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PrimaryExtendedSpokenLanguageCode (const ::std::string& uri,
                                       ::xml_schema::error_handler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PrimaryExtendedSpokenLanguageCode (const ::std::string& uri,
                                       ::xercesc::DOMErrorHandler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PrimaryExtendedSpokenLanguageCode (::std::istream& is,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PrimaryExtendedSpokenLanguageCode (::std::istream& is,
                                       ::xml_schema::error_handler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PrimaryExtendedSpokenLanguageCode (::std::istream& is,
                                       ::xercesc::DOMErrorHandler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PrimaryExtendedSpokenLanguageCode (::std::istream& is,
                                       const ::std::string& id,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PrimaryExtendedSpokenLanguageCode (::std::istream& is,
                                       const ::std::string& id,
                                       ::xml_schema::error_handler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PrimaryExtendedSpokenLanguageCode (::std::istream& is,
                                       const ::std::string& id,
                                       ::xercesc::DOMErrorHandler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PrimaryExtendedSpokenLanguageCode (::xercesc::InputSource& is,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PrimaryExtendedSpokenLanguageCode (::xercesc::InputSource& is,
                                       ::xml_schema::error_handler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PrimaryExtendedSpokenLanguageCode (::xercesc::InputSource& is,
                                       ::xercesc::DOMErrorHandler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PrimaryExtendedSpokenLanguageCode (const ::xercesc::DOMDocument& d,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PrimaryExtendedSpokenLanguageCode (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SecondaryExtendedSpokenLanguageCode (const ::std::string& uri,
                                         ::xml_schema::flags f = 0,
                                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SecondaryExtendedSpokenLanguageCode (const ::std::string& uri,
                                         ::xml_schema::error_handler& eh,
                                         ::xml_schema::flags f = 0,
                                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SecondaryExtendedSpokenLanguageCode (const ::std::string& uri,
                                         ::xercesc::DOMErrorHandler& eh,
                                         ::xml_schema::flags f = 0,
                                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SecondaryExtendedSpokenLanguageCode (::std::istream& is,
                                         ::xml_schema::flags f = 0,
                                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SecondaryExtendedSpokenLanguageCode (::std::istream& is,
                                         ::xml_schema::error_handler& eh,
                                         ::xml_schema::flags f = 0,
                                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SecondaryExtendedSpokenLanguageCode (::std::istream& is,
                                         ::xercesc::DOMErrorHandler& eh,
                                         ::xml_schema::flags f = 0,
                                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SecondaryExtendedSpokenLanguageCode (::std::istream& is,
                                         const ::std::string& id,
                                         ::xml_schema::flags f = 0,
                                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SecondaryExtendedSpokenLanguageCode (::std::istream& is,
                                         const ::std::string& id,
                                         ::xml_schema::error_handler& eh,
                                         ::xml_schema::flags f = 0,
                                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SecondaryExtendedSpokenLanguageCode (::std::istream& is,
                                         const ::std::string& id,
                                         ::xercesc::DOMErrorHandler& eh,
                                         ::xml_schema::flags f = 0,
                                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SecondaryExtendedSpokenLanguageCode (::xercesc::InputSource& is,
                                         ::xml_schema::flags f = 0,
                                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SecondaryExtendedSpokenLanguageCode (::xercesc::InputSource& is,
                                         ::xml_schema::error_handler& eh,
                                         ::xml_schema::flags f = 0,
                                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SecondaryExtendedSpokenLanguageCode (::xercesc::InputSource& is,
                                         ::xercesc::DOMErrorHandler& eh,
                                         ::xml_schema::flags f = 0,
                                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SecondaryExtendedSpokenLanguageCode (const ::xercesc::DOMDocument& d,
                                         ::xml_schema::flags f = 0,
                                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    SecondaryExtendedSpokenLanguageCode (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                                         ::xml_schema::flags f = 0,
                                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    OriginalExtendedSpokenLanguageCode (const ::std::string& uri,
                                        ::xml_schema::flags f = 0,
                                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    OriginalExtendedSpokenLanguageCode (const ::std::string& uri,
                                        ::xml_schema::error_handler& eh,
                                        ::xml_schema::flags f = 0,
                                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    OriginalExtendedSpokenLanguageCode (const ::std::string& uri,
                                        ::xercesc::DOMErrorHandler& eh,
                                        ::xml_schema::flags f = 0,
                                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    OriginalExtendedSpokenLanguageCode (::std::istream& is,
                                        ::xml_schema::flags f = 0,
                                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    OriginalExtendedSpokenLanguageCode (::std::istream& is,
                                        ::xml_schema::error_handler& eh,
                                        ::xml_schema::flags f = 0,
                                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    OriginalExtendedSpokenLanguageCode (::std::istream& is,
                                        ::xercesc::DOMErrorHandler& eh,
                                        ::xml_schema::flags f = 0,
                                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    OriginalExtendedSpokenLanguageCode (::std::istream& is,
                                        const ::std::string& id,
                                        ::xml_schema::flags f = 0,
                                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    OriginalExtendedSpokenLanguageCode (::std::istream& is,
                                        const ::std::string& id,
                                        ::xml_schema::error_handler& eh,
                                        ::xml_schema::flags f = 0,
                                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    OriginalExtendedSpokenLanguageCode (::std::istream& is,
                                        const ::std::string& id,
                                        ::xercesc::DOMErrorHandler& eh,
                                        ::xml_schema::flags f = 0,
                                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    OriginalExtendedSpokenLanguageCode (::xercesc::InputSource& is,
                                        ::xml_schema::flags f = 0,
                                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    OriginalExtendedSpokenLanguageCode (::xercesc::InputSource& is,
                                        ::xml_schema::error_handler& eh,
                                        ::xml_schema::flags f = 0,
                                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    OriginalExtendedSpokenLanguageCode (::xercesc::InputSource& is,
                                        ::xercesc::DOMErrorHandler& eh,
                                        ::xml_schema::flags f = 0,
                                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    OriginalExtendedSpokenLanguageCode (const ::xercesc::DOMDocument& d,
                                        ::xml_schema::flags f = 0,
                                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    OriginalExtendedSpokenLanguageCode (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                                        ::xml_schema::flags f = 0,
                                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ColorDescriptor (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ColorDescriptor (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ColorDescriptor (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ColorDescriptor (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ColorDescriptor (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ColorDescriptor (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ColorDescriptor (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ColorDescriptor (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ColorDescriptor (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ColorDescriptor (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ColorDescriptor (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ColorDescriptor (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ColorDescriptor (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ColorDescriptor (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationSynopsis (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationSynopsis (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationSynopsis (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationSynopsis (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationSynopsis (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationSynopsis (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationSynopsis (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationSynopsis (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationSynopsis (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationSynopsis (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationSynopsis (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationSynopsis (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationSynopsis (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationSynopsis (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationDescription (const ::std::string& uri,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationDescription (const ::std::string& uri,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationDescription (const ::std::string& uri,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationDescription (::std::istream& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationDescription (::std::istream& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationDescription (::std::istream& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationDescription (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationDescription (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationDescription (::std::istream& is,
                           const ::std::string& id,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationDescription (::xercesc::InputSource& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationDescription (::xercesc::InputSource& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationDescription (::xercesc::InputSource& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationDescription (const ::xercesc::DOMDocument& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationDescription (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingKind (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingKind (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingKind (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingKind (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingKind (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingKind (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingKind (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingKind (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingKind (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingKind (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingKind (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingKind (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingKind (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingKind (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingText (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingText (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingText (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingText (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingText (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingText (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingText (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingText (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingText (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingText (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingText (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingText (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingText (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ScriptingText (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotDescription (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotDescription (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotDescription (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotDescription (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotDescription (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotDescription (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotDescription (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotDescription (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotDescription (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotDescription (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotDescription (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotDescription (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotDescription (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ShotDescription (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationKind (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationKind (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationKind (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationKind (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationKind (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationKind (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationKind (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationKind (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationKind (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationKind (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationKind (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationKind (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationKind (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AnnotationKind (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RelatedMaterialDescription (const ::std::string& uri,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RelatedMaterialDescription (const ::std::string& uri,
                                ::xml_schema::error_handler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RelatedMaterialDescription (const ::std::string& uri,
                                ::xercesc::DOMErrorHandler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RelatedMaterialDescription (::std::istream& is,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RelatedMaterialDescription (::std::istream& is,
                                ::xml_schema::error_handler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RelatedMaterialDescription (::std::istream& is,
                                ::xercesc::DOMErrorHandler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RelatedMaterialDescription (::std::istream& is,
                                const ::std::string& id,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RelatedMaterialDescription (::std::istream& is,
                                const ::std::string& id,
                                ::xml_schema::error_handler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RelatedMaterialDescription (::std::istream& is,
                                const ::std::string& id,
                                ::xercesc::DOMErrorHandler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RelatedMaterialDescription (::xercesc::InputSource& is,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RelatedMaterialDescription (::xercesc::InputSource& is,
                                ::xml_schema::error_handler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RelatedMaterialDescription (::xercesc::InputSource& is,
                                ::xercesc::DOMErrorHandler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RelatedMaterialDescription (const ::xercesc::DOMDocument& d,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RelatedMaterialDescription (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FestivalName (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FestivalName (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FestivalName (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FestivalName (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FestivalName (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FestivalName (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FestivalName (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FestivalName (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FestivalName (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FestivalName (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FestivalName (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FestivalName (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FestivalName (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    FestivalName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardName (const ::std::string& uri,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardName (const ::std::string& uri,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardName (const ::std::string& uri,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardName (::std::istream& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardName (::std::istream& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardName (::std::istream& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardName (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardName (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardName (::std::istream& is,
               const ::std::string& id,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardName (::xercesc::InputSource& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardName (::xercesc::InputSource& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardName (::xercesc::InputSource& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardName (const ::xercesc::DOMDocument& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardCategory (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardCategory (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardCategory (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardCategory (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardCategory (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardCategory (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardCategory (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardCategory (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardCategory (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardCategory (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardCategory (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardCategory (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardCategory (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AwardCategory (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ClipKind (const ::std::string& uri,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ClipKind (const ::std::string& uri,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ClipKind (const ::std::string& uri,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ClipKind (::std::istream& is,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ClipKind (::std::istream& is,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ClipKind (::std::istream& is,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ClipKind (::std::istream& is,
              const ::std::string& id,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ClipKind (::std::istream& is,
              const ::std::string& id,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ClipKind (::std::istream& is,
              const ::std::string& id,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ClipKind (::xercesc::InputSource& is,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ClipKind (::xercesc::InputSource& is,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ClipKind (::xercesc::InputSource& is,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ClipKind (const ::xercesc::DOMDocument& d,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ClipKind (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceUsageDescription (const ::std::string& uri,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceUsageDescription (const ::std::string& uri,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceUsageDescription (const ::std::string& uri,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceUsageDescription (::std::istream& is,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceUsageDescription (::std::istream& is,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceUsageDescription (::std::istream& is,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceUsageDescription (::std::istream& is,
                            const ::std::string& id,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceUsageDescription (::std::istream& is,
                            const ::std::string& id,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceUsageDescription (::std::istream& is,
                            const ::std::string& id,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceUsageDescription (::xercesc::InputSource& is,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceUsageDescription (::xercesc::InputSource& is,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceUsageDescription (::xercesc::InputSource& is,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceUsageDescription (const ::xercesc::DOMDocument& d,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    DeviceUsageDescription (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    HeaderByteCount (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    HeaderByteCount (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    HeaderByteCount (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    HeaderByteCount (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    HeaderByteCount (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    HeaderByteCount (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    HeaderByteCount (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    HeaderByteCount (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    HeaderByteCount (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    HeaderByteCount (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    HeaderByteCount (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    HeaderByteCount (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    HeaderByteCount (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    HeaderByteCount (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    IndexByteCount (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    IndexByteCount (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    IndexByteCount (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    IndexByteCount (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    IndexByteCount (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    IndexByteCount (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    IndexByteCount (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    IndexByteCount (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    IndexByteCount (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    IndexByteCount (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    IndexByteCount (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    IndexByteCount (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    IndexByteCount (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    IndexByteCount (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FrameLayout (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FrameLayout (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FrameLayout (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FrameLayout (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FrameLayout (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FrameLayout (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FrameLayout (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FrameLayout (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FrameLayout (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FrameLayout (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FrameLayout (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FrameLayout (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FrameLayout (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FrameLayout (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FieldDominance (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FieldDominance (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FieldDominance (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FieldDominance (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FieldDominance (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FieldDominance (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FieldDominance (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FieldDominance (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FieldDominance (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FieldDominance (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FieldDominance (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FieldDominance (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FieldDominance (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    FieldDominance (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    QuantizationBits (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    QuantizationBits (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    QuantizationBits (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    QuantizationBits (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    QuantizationBits (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    QuantizationBits (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    QuantizationBits (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    QuantizationBits (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    QuantizationBits (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    QuantizationBits (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    QuantizationBits (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    QuantizationBits (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    QuantizationBits (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    QuantizationBits (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayF2Offset (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayF2Offset (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayF2Offset (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayF2Offset (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayF2Offset (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayF2Offset (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayF2Offset (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayF2Offset (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayF2Offset (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayF2Offset (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayF2Offset (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayF2Offset (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayF2Offset (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayF2Offset (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    DialNorm (const ::std::string& uri,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    DialNorm (const ::std::string& uri,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    DialNorm (const ::std::string& uri,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    DialNorm (::std::istream& is,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    DialNorm (::std::istream& is,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    DialNorm (::std::istream& is,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    DialNorm (::std::istream& is,
              const ::std::string& id,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    DialNorm (::std::istream& is,
              const ::std::string& id,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    DialNorm (::std::istream& is,
              const ::std::string& id,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    DialNorm (::xercesc::InputSource& is,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    DialNorm (::xercesc::InputSource& is,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    DialNorm (::xercesc::InputSource& is,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    DialNorm (const ::xercesc::DOMDocument& d,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    DialNorm (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SoundCompression (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SoundCompression (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SoundCompression (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SoundCompression (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SoundCompression (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SoundCompression (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SoundCompression (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SoundCompression (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SoundCompression (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SoundCompression (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SoundCompression (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SoundCompression (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SoundCompression (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SoundCompression (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PaletteLayout (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PaletteLayout (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PaletteLayout (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PaletteLayout (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PaletteLayout (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PaletteLayout (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PaletteLayout (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PaletteLayout (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PaletteLayout (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PaletteLayout (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PaletteLayout (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PaletteLayout (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PaletteLayout (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PaletteLayout (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Orientation >
    ScanningDirection (const ::std::string& uri,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Orientation >
    ScanningDirection (const ::std::string& uri,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Orientation >
    ScanningDirection (const ::std::string& uri,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Orientation >
    ScanningDirection (::std::istream& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Orientation >
    ScanningDirection (::std::istream& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Orientation >
    ScanningDirection (::std::istream& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Orientation >
    ScanningDirection (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Orientation >
    ScanningDirection (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Orientation >
    ScanningDirection (::std::istream& is,
                       const ::std::string& id,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Orientation >
    ScanningDirection (::xercesc::InputSource& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Orientation >
    ScanningDirection (::xercesc::InputSource& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Orientation >
    ScanningDirection (::xercesc::InputSource& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Orientation >
    ScanningDirection (const ::xercesc::DOMDocument& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Orientation >
    ScanningDirection (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ColorRange (const ::std::string& uri,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ColorRange (const ::std::string& uri,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ColorRange (const ::std::string& uri,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ColorRange (::std::istream& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ColorRange (::std::istream& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ColorRange (::std::istream& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ColorRange (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ColorRange (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ColorRange (::std::istream& is,
                const ::std::string& id,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ColorRange (::xercesc::InputSource& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ColorRange (::xercesc::InputSource& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ColorRange (::xercesc::InputSource& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ColorRange (const ::xercesc::DOMDocument& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ColorRange (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PixelLayout (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PixelLayout (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PixelLayout (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PixelLayout (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PixelLayout (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PixelLayout (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PixelLayout (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PixelLayout (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PixelLayout (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PixelLayout (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PixelLayout (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PixelLayout (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PixelLayout (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::RGBALayout >
    PixelLayout (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::SignalStandard >
    SignalStandard (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::SignalStandard >
    SignalStandard (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::SignalStandard >
    SignalStandard (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::SignalStandard >
    SignalStandard (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::SignalStandard >
    SignalStandard (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::SignalStandard >
    SignalStandard (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::SignalStandard >
    SignalStandard (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::SignalStandard >
    SignalStandard (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::SignalStandard >
    SignalStandard (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::SignalStandard >
    SignalStandard (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::SignalStandard >
    SignalStandard (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::SignalStandard >
    SignalStandard (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::SignalStandard >
    SignalStandard (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::SignalStandard >
    SignalStandard (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    AudioSampleRate (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    AudioSampleRate (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    AudioSampleRate (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    AudioSampleRate (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    AudioSampleRate (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    AudioSampleRate (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    AudioSampleRate (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    AudioSampleRate (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    AudioSampleRate (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    AudioSampleRate (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    AudioSampleRate (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    AudioSampleRate (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    AudioSampleRate (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    AudioSampleRate (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    VerticalSubsampling (const ::std::string& uri,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    VerticalSubsampling (const ::std::string& uri,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    VerticalSubsampling (const ::std::string& uri,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    VerticalSubsampling (::std::istream& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    VerticalSubsampling (::std::istream& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    VerticalSubsampling (::std::istream& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    VerticalSubsampling (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    VerticalSubsampling (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    VerticalSubsampling (::std::istream& is,
                         const ::std::string& id,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    VerticalSubsampling (::xercesc::InputSource& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    VerticalSubsampling (::xercesc::InputSource& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    VerticalSubsampling (::xercesc::InputSource& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    VerticalSubsampling (const ::xercesc::DOMDocument& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    VerticalSubsampling (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    TimecodeSource (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    TimecodeSource (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    TimecodeSource (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    TimecodeSource (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    TimecodeSource (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    TimecodeSource (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    TimecodeSource (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    TimecodeSource (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    TimecodeSource (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    TimecodeSource (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    TimecodeSource (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    TimecodeSource (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    TimecodeSource (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    TimecodeSource (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChannelCount (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChannelCount (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChannelCount (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChannelCount (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChannelCount (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChannelCount (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChannelCount (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChannelCount (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChannelCount (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChannelCount (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChannelCount (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChannelCount (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChannelCount (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChannelCount (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMinRef (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMinRef (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMinRef (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMinRef (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMinRef (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMinRef (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMinRef (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMinRef (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMinRef (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMinRef (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMinRef (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMinRef (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMinRef (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMinRef (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    Locked (const ::std::string& uri,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    Locked (const ::std::string& uri,
            ::xml_schema::error_handler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    Locked (const ::std::string& uri,
            ::xercesc::DOMErrorHandler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    Locked (::std::istream& is,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    Locked (::std::istream& is,
            ::xml_schema::error_handler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    Locked (::std::istream& is,
            ::xercesc::DOMErrorHandler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    Locked (::std::istream& is,
            const ::std::string& id,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    Locked (::std::istream& is,
            const ::std::string& id,
            ::xml_schema::error_handler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    Locked (::std::istream& is,
            const ::std::string& id,
            ::xercesc::DOMErrorHandler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    Locked (::xercesc::InputSource& is,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    Locked (::xercesc::InputSource& is,
            ::xml_schema::error_handler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    Locked (::xercesc::InputSource& is,
            ::xercesc::DOMErrorHandler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    Locked (const ::xercesc::DOMDocument& d,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    Locked (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    PictureCompression (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    PictureCompression (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    PictureCompression (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    PictureCompression (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    PictureCompression (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    PictureCompression (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    PictureCompression (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    PictureCompression (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    PictureCompression (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    PictureCompression (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    PictureCompression (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    PictureCompression (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    PictureCompression (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    PictureCompression (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    StoredF2Offset (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    StoredF2Offset (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    StoredF2Offset (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    StoredF2Offset (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    StoredF2Offset (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    StoredF2Offset (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    StoredF2Offset (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    StoredF2Offset (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    StoredF2Offset (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    StoredF2Offset (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    StoredF2Offset (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    StoredF2Offset (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    StoredF2Offset (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    StoredF2Offset (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ActiveFormatDescriptor (const ::std::string& uri,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ActiveFormatDescriptor (const ::std::string& uri,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ActiveFormatDescriptor (const ::std::string& uri,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ActiveFormatDescriptor (::std::istream& is,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ActiveFormatDescriptor (::std::istream& is,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ActiveFormatDescriptor (::std::istream& is,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ActiveFormatDescriptor (::std::istream& is,
                            const ::std::string& id,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ActiveFormatDescriptor (::std::istream& is,
                            const ::std::string& id,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ActiveFormatDescriptor (::std::istream& is,
                            const ::std::string& id,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ActiveFormatDescriptor (::xercesc::InputSource& is,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ActiveFormatDescriptor (::xercesc::InputSource& is,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ActiveFormatDescriptor (::xercesc::InputSource& is,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ActiveFormatDescriptor (const ::xercesc::DOMDocument& d,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ActiveFormatDescriptor (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::VideoLineMap >
    VideoLineMap_ (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::VideoLineMap >
    VideoLineMap_ (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::VideoLineMap >
    VideoLineMap_ (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::VideoLineMap >
    VideoLineMap_ (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::VideoLineMap >
    VideoLineMap_ (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::VideoLineMap >
    VideoLineMap_ (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::VideoLineMap >
    VideoLineMap_ (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::VideoLineMap >
    VideoLineMap_ (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::VideoLineMap >
    VideoLineMap_ (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::VideoLineMap >
    VideoLineMap_ (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::VideoLineMap >
    VideoLineMap_ (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::VideoLineMap >
    VideoLineMap_ (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::VideoLineMap >
    VideoLineMap_ (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::VideoLineMap >
    VideoLineMap_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageAlignmentFactor (const ::std::string& uri,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageAlignmentFactor (const ::std::string& uri,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageAlignmentFactor (const ::std::string& uri,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageAlignmentFactor (::std::istream& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageAlignmentFactor (::std::istream& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageAlignmentFactor (::std::istream& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageAlignmentFactor (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageAlignmentFactor (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageAlignmentFactor (::std::istream& is,
                          const ::std::string& id,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageAlignmentFactor (::xercesc::InputSource& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageAlignmentFactor (::xercesc::InputSource& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageAlignmentFactor (::xercesc::InputSource& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageAlignmentFactor (const ::xercesc::DOMDocument& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageAlignmentFactor (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageStartOffset (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageStartOffset (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageStartOffset (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageStartOffset (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageStartOffset (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageStartOffset (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageStartOffset (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageStartOffset (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageStartOffset (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageStartOffset (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageStartOffset (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageStartOffset (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageStartOffset (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageStartOffset (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageEndOffset (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageEndOffset (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageEndOffset (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageEndOffset (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageEndOffset (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageEndOffset (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageEndOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageEndOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageEndOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageEndOffset (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageEndOffset (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageEndOffset (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageEndOffset (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ImageEndOffset (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int16 >
    PaddingBits (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int16 >
    PaddingBits (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int16 >
    PaddingBits (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int16 >
    PaddingBits (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int16 >
    PaddingBits (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int16 >
    PaddingBits (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int16 >
    PaddingBits (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int16 >
    PaddingBits (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int16 >
    PaddingBits (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int16 >
    PaddingBits (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int16 >
    PaddingBits (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int16 >
    PaddingBits (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int16 >
    PaddingBits (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int16 >
    PaddingBits (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledXOffset (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledXOffset (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledXOffset (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledXOffset (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledXOffset (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledXOffset (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledXOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledXOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledXOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledXOffset (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledXOffset (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledXOffset (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledXOffset (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledXOffset (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledWidth (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledWidth (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledWidth (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledWidth (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledWidth (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledWidth (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledWidth (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledWidth (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledWidth (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledWidth (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledWidth (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledWidth (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledWidth (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledWidth (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IncludeSync (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IncludeSync (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IncludeSync (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IncludeSync (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IncludeSync (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IncludeSync (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IncludeSync (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IncludeSync (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IncludeSync (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IncludeSync (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IncludeSync (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IncludeSync (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IncludeSync (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IncludeSync (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DropFrame (const ::std::string& uri,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DropFrame (const ::std::string& uri,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DropFrame (const ::std::string& uri,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DropFrame (::std::istream& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DropFrame (::std::istream& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DropFrame (::std::istream& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DropFrame (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DropFrame (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DropFrame (::std::istream& is,
               const ::std::string& id,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DropFrame (::xercesc::InputSource& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DropFrame (::xercesc::InputSource& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DropFrame (::xercesc::InputSource& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DropFrame (const ::xercesc::DOMDocument& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DropFrame (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BlackRefLevel (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BlackRefLevel (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BlackRefLevel (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BlackRefLevel (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BlackRefLevel (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BlackRefLevel (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BlackRefLevel (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BlackRefLevel (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BlackRefLevel (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BlackRefLevel (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BlackRefLevel (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BlackRefLevel (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BlackRefLevel (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BlackRefLevel (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledHeight (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledHeight (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledHeight (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledHeight (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledHeight (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledHeight (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledHeight (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledHeight (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledHeight (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledHeight (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledHeight (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledHeight (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledHeight (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SampledHeight (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ColorSiting (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ColorSiting (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ColorSiting (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ColorSiting (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ColorSiting (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ColorSiting (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ColorSiting (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ColorSiting (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ColorSiting (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ColorSiting (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ColorSiting (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ColorSiting (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ColorSiting (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ColorSiting (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    HorizontalSubsampling (const ::std::string& uri,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    HorizontalSubsampling (const ::std::string& uri,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    HorizontalSubsampling (const ::std::string& uri,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    HorizontalSubsampling (::std::istream& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    HorizontalSubsampling (::std::istream& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    HorizontalSubsampling (::std::istream& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    HorizontalSubsampling (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    HorizontalSubsampling (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    HorizontalSubsampling (::std::istream& is,
                           const ::std::string& id,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    HorizontalSubsampling (::xercesc::InputSource& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    HorizontalSubsampling (::xercesc::InputSource& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    HorizontalSubsampling (::xercesc::InputSource& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    HorizontalSubsampling (const ::xercesc::DOMDocument& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    HorizontalSubsampling (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentDepth (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentDepth (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentDepth (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentDepth (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentDepth (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentDepth (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentDepth (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentDepth (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentDepth (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentDepth (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentDepth (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentDepth (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentDepth (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentDepth (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMinRef (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMinRef (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMinRef (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMinRef (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMinRef (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMinRef (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMinRef (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMinRef (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMinRef (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMinRef (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMinRef (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMinRef (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMinRef (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMinRef (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMaxRef (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMaxRef (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMaxRef (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMaxRef (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMaxRef (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMaxRef (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMaxRef (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMaxRef (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMaxRef (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMaxRef (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMaxRef (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMaxRef (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMaxRef (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ComponentMaxRef (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMaxRef (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMaxRef (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMaxRef (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMaxRef (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMaxRef (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMaxRef (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMaxRef (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMaxRef (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMaxRef (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMaxRef (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMaxRef (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMaxRef (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMaxRef (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaMaxRef (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayWidth (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayWidth (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayWidth (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayWidth (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayWidth (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayWidth (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayWidth (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayWidth (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayWidth (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayWidth (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayWidth (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayWidth (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayWidth (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayWidth (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayHeight (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayHeight (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayHeight (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayHeight (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayHeight (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayHeight (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayHeight (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayHeight (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayHeight (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayHeight (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayHeight (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayHeight (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayHeight (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    DisplayHeight (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledYOffset (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledYOffset (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledYOffset (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledYOffset (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledYOffset (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledYOffset (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledYOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledYOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledYOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledYOffset (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledYOffset (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledYOffset (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledYOffset (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    SampledYOffset (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    FramesPerSecond (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    FramesPerSecond (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    FramesPerSecond (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    FramesPerSecond (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    FramesPerSecond (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    FramesPerSecond (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    FramesPerSecond (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    FramesPerSecond (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    FramesPerSecond (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    FramesPerSecond (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    FramesPerSecond (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    FramesPerSecond (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    FramesPerSecond (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    FramesPerSecond (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayYOffset (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayYOffset (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayYOffset (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayYOffset (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayYOffset (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayYOffset (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayYOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayYOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayYOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayYOffset (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayYOffset (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayYOffset (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayYOffset (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayYOffset (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayXOffset (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayXOffset (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayXOffset (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayXOffset (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayXOffset (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayXOffset (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayXOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayXOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayXOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayXOffset (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayXOffset (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayXOffset (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayXOffset (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int32 >
    DisplayXOffset (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    TimecodeStreamSampleRate (const ::std::string& uri,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    TimecodeStreamSampleRate (const ::std::string& uri,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    TimecodeStreamSampleRate (const ::std::string& uri,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    TimecodeStreamSampleRate (::std::istream& is,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    TimecodeStreamSampleRate (::std::istream& is,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    TimecodeStreamSampleRate (::std::istream& is,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    TimecodeStreamSampleRate (::std::istream& is,
                              const ::std::string& id,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    TimecodeStreamSampleRate (::std::istream& is,
                              const ::std::string& id,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    TimecodeStreamSampleRate (::std::istream& is,
                              const ::std::string& id,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    TimecodeStreamSampleRate (::xercesc::InputSource& is,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    TimecodeStreamSampleRate (::xercesc::InputSource& is,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    TimecodeStreamSampleRate (::xercesc::InputSource& is,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    TimecodeStreamSampleRate (const ::xercesc::DOMDocument& d,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    TimecodeStreamSampleRate (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::ElectrospatialFormulation >
    ElectrospatialFormulation_ (const ::std::string& uri,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ElectrospatialFormulation >
    ElectrospatialFormulation_ (const ::std::string& uri,
                                ::xml_schema::error_handler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ElectrospatialFormulation >
    ElectrospatialFormulation_ (const ::std::string& uri,
                                ::xercesc::DOMErrorHandler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::ElectrospatialFormulation >
    ElectrospatialFormulation_ (::std::istream& is,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ElectrospatialFormulation >
    ElectrospatialFormulation_ (::std::istream& is,
                                ::xml_schema::error_handler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ElectrospatialFormulation >
    ElectrospatialFormulation_ (::std::istream& is,
                                ::xercesc::DOMErrorHandler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ElectrospatialFormulation >
    ElectrospatialFormulation_ (::std::istream& is,
                                const ::std::string& id,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ElectrospatialFormulation >
    ElectrospatialFormulation_ (::std::istream& is,
                                const ::std::string& id,
                                ::xml_schema::error_handler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ElectrospatialFormulation >
    ElectrospatialFormulation_ (::std::istream& is,
                                const ::std::string& id,
                                ::xercesc::DOMErrorHandler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::ElectrospatialFormulation >
    ElectrospatialFormulation_ (::xercesc::InputSource& is,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ElectrospatialFormulation >
    ElectrospatialFormulation_ (::xercesc::InputSource& is,
                                ::xml_schema::error_handler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ElectrospatialFormulation >
    ElectrospatialFormulation_ (::xercesc::InputSource& is,
                                ::xercesc::DOMErrorHandler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::ElectrospatialFormulation >
    ElectrospatialFormulation_ (const ::xercesc::DOMDocument& d,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ElectrospatialFormulation >
    ElectrospatialFormulation_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DataEssenceCoding (const ::std::string& uri,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DataEssenceCoding (const ::std::string& uri,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DataEssenceCoding (const ::std::string& uri,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DataEssenceCoding (::std::istream& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DataEssenceCoding (::std::istream& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DataEssenceCoding (::std::istream& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DataEssenceCoding (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DataEssenceCoding (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DataEssenceCoding (::std::istream& is,
                       const ::std::string& id,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DataEssenceCoding (::xercesc::InputSource& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DataEssenceCoding (::xercesc::InputSource& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DataEssenceCoding (::xercesc::InputSource& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DataEssenceCoding (const ::xercesc::DOMDocument& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DataEssenceCoding (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    TransferCharacteristic (const ::std::string& uri,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    TransferCharacteristic (const ::std::string& uri,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    TransferCharacteristic (const ::std::string& uri,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    TransferCharacteristic (::std::istream& is,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    TransferCharacteristic (::std::istream& is,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    TransferCharacteristic (::std::istream& is,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    TransferCharacteristic (::std::istream& is,
                            const ::std::string& id,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    TransferCharacteristic (::std::istream& is,
                            const ::std::string& id,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    TransferCharacteristic (::std::istream& is,
                            const ::std::string& id,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    TransferCharacteristic (::xercesc::InputSource& is,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    TransferCharacteristic (::xercesc::InputSource& is,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    TransferCharacteristic (::xercesc::InputSource& is,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    TransferCharacteristic (const ::xercesc::DOMDocument& d,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    TransferCharacteristic (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredWidth (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredWidth (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredWidth (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredWidth (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredWidth (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredWidth (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredWidth (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredWidth (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredWidth (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredWidth (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredWidth (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredWidth (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredWidth (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredWidth (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    AudioReferenceLevel (const ::std::string& uri,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    AudioReferenceLevel (const ::std::string& uri,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    AudioReferenceLevel (const ::std::string& uri,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    AudioReferenceLevel (::std::istream& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    AudioReferenceLevel (::std::istream& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    AudioReferenceLevel (::std::istream& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    AudioReferenceLevel (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    AudioReferenceLevel (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    AudioReferenceLevel (::std::istream& is,
                         const ::std::string& id,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    AudioReferenceLevel (::xercesc::InputSource& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    AudioReferenceLevel (::xercesc::InputSource& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    AudioReferenceLevel (::xercesc::InputSource& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    AudioReferenceLevel (const ::xercesc::DOMDocument& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    AudioReferenceLevel (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredHeight (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredHeight (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredHeight (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredHeight (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredHeight (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredHeight (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredHeight (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredHeight (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredHeight (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredHeight (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredHeight (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredHeight (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredHeight (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    StoredHeight (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Length >
    EssenceLength (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    EssenceLength (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    EssenceLength (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Length >
    EssenceLength (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    EssenceLength (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    EssenceLength (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    EssenceLength (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    EssenceLength (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    EssenceLength (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Length >
    EssenceLength (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    EssenceLength (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    EssenceLength (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Length >
    EssenceLength (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    EssenceLength (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    SampleRate (const ::std::string& uri,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    SampleRate (const ::std::string& uri,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    SampleRate (const ::std::string& uri,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    SampleRate (::std::istream& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    SampleRate (::std::istream& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    SampleRate (::std::istream& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    SampleRate (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    SampleRate (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    SampleRate (::std::istream& is,
                const ::std::string& id,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    SampleRate (::xercesc::InputSource& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    SampleRate (::xercesc::InputSource& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    SampleRate (::xercesc::InputSource& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    SampleRate (const ::xercesc::DOMDocument& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    SampleRate (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ComponentDataDefinition (const ::std::string& uri,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ComponentDataDefinition (const ::std::string& uri,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ComponentDataDefinition (const ::std::string& uri,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ComponentDataDefinition (::std::istream& is,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ComponentDataDefinition (::std::istream& is,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ComponentDataDefinition (::std::istream& is,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ComponentDataDefinition (::std::istream& is,
                             const ::std::string& id,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ComponentDataDefinition (::std::istream& is,
                             const ::std::string& id,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ComponentDataDefinition (::std::istream& is,
                             const ::std::string& id,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ComponentDataDefinition (::xercesc::InputSource& is,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ComponentDataDefinition (::xercesc::InputSource& is,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ComponentDataDefinition (::xercesc::InputSource& is,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ComponentDataDefinition (const ::xercesc::DOMDocument& d,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ComponentDataDefinition (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    TimecodeStreamData (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    TimecodeStreamData (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    TimecodeStreamData (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    TimecodeStreamData (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    TimecodeStreamData (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    TimecodeStreamData (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    TimecodeStreamData (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    TimecodeStreamData (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    TimecodeStreamData (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    TimecodeStreamData (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    TimecodeStreamData (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    TimecodeStreamData (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    TimecodeStreamData (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    TimecodeStreamData (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    Palette (const ::std::string& uri,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    Palette (const ::std::string& uri,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    Palette (const ::std::string& uri,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    Palette (::std::istream& is,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    Palette (::std::istream& is,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    Palette (::std::istream& is,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    Palette (::std::istream& is,
             const ::std::string& id,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    Palette (::std::istream& is,
             const ::std::string& id,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    Palette (::std::istream& is,
             const ::std::string& id,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    Palette (::xercesc::InputSource& is,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    Palette (::xercesc::InputSource& is,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    Palette (::xercesc::InputSource& is,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    Palette (const ::xercesc::DOMDocument& d,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    Palette (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    WhiteRefLevel (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    WhiteRefLevel (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    WhiteRefLevel (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    WhiteRefLevel (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    WhiteRefLevel (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    WhiteRefLevel (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    WhiteRefLevel (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    WhiteRefLevel (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    WhiteRefLevel (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    WhiteRefLevel (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    WhiteRefLevel (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    WhiteRefLevel (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    WhiteRefLevel (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    WhiteRefLevel (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaSampleDepth (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaSampleDepth (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaSampleDepth (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaSampleDepth (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaSampleDepth (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaSampleDepth (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaSampleDepth (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaSampleDepth (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaSampleDepth (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaSampleDepth (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaSampleDepth (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaSampleDepth (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaSampleDepth (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AlphaSampleDepth (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ImageAspectRatio (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ImageAspectRatio (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ImageAspectRatio (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ImageAspectRatio (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ImageAspectRatio (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ImageAspectRatio (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ImageAspectRatio (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ImageAspectRatio (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ImageAspectRatio (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ImageAspectRatio (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ImageAspectRatio (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ImageAspectRatio (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ImageAspectRatio (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ImageAspectRatio (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxBPictureCount (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxBPictureCount (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxBPictureCount (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxBPictureCount (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxBPictureCount (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxBPictureCount (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxBPictureCount (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxBPictureCount (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxBPictureCount (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxBPictureCount (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxBPictureCount (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxBPictureCount (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxBPictureCount (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxBPictureCount (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BitRate (const ::std::string& uri,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BitRate (const ::std::string& uri,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BitRate (const ::std::string& uri,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BitRate (::std::istream& is,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BitRate (::std::istream& is,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BitRate (::std::istream& is,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BitRate (::std::istream& is,
             const ::std::string& id,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BitRate (::std::istream& is,
             const ::std::string& id,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BitRate (::std::istream& is,
             const ::std::string& id,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BitRate (::xercesc::InputSource& is,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BitRate (::xercesc::InputSource& is,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BitRate (::xercesc::InputSource& is,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BitRate (const ::xercesc::DOMDocument& d,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    BitRate (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ClosedGOP (const ::std::string& uri,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ClosedGOP (const ::std::string& uri,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ClosedGOP (const ::std::string& uri,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ClosedGOP (::std::istream& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ClosedGOP (::std::istream& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ClosedGOP (::std::istream& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ClosedGOP (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ClosedGOP (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ClosedGOP (::std::istream& is,
               const ::std::string& id,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ClosedGOP (::xercesc::InputSource& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ClosedGOP (::xercesc::InputSource& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ClosedGOP (::xercesc::InputSource& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ClosedGOP (const ::xercesc::DOMDocument& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ClosedGOP (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    CodedContentScanning (const ::std::string& uri,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    CodedContentScanning (const ::std::string& uri,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    CodedContentScanning (const ::std::string& uri,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    CodedContentScanning (::std::istream& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    CodedContentScanning (::std::istream& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    CodedContentScanning (::std::istream& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    CodedContentScanning (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    CodedContentScanning (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    CodedContentScanning (::std::istream& is,
                          const ::std::string& id,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    CodedContentScanning (::xercesc::InputSource& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    CodedContentScanning (::xercesc::InputSource& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    CodedContentScanning (::xercesc::InputSource& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    CodedContentScanning (const ::xercesc::DOMDocument& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    CodedContentScanning (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ConstantBPictureCount (const ::std::string& uri,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ConstantBPictureCount (const ::std::string& uri,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ConstantBPictureCount (const ::std::string& uri,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ConstantBPictureCount (::std::istream& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ConstantBPictureCount (::std::istream& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ConstantBPictureCount (::std::istream& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ConstantBPictureCount (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ConstantBPictureCount (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ConstantBPictureCount (::std::istream& is,
                           const ::std::string& id,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ConstantBPictureCount (::xercesc::InputSource& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ConstantBPictureCount (::xercesc::InputSource& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ConstantBPictureCount (::xercesc::InputSource& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ConstantBPictureCount (const ::xercesc::DOMDocument& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    ConstantBPictureCount (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IdenticalGOP (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IdenticalGOP (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IdenticalGOP (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IdenticalGOP (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IdenticalGOP (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IdenticalGOP (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IdenticalGOP (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IdenticalGOP (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IdenticalGOP (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IdenticalGOP (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IdenticalGOP (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IdenticalGOP (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IdenticalGOP (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    IdenticalGOP (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LowDelay (const ::std::string& uri,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LowDelay (const ::std::string& uri,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LowDelay (const ::std::string& uri,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LowDelay (::std::istream& is,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LowDelay (::std::istream& is,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LowDelay (::std::istream& is,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LowDelay (::std::istream& is,
              const ::std::string& id,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LowDelay (::std::istream& is,
              const ::std::string& id,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LowDelay (::std::istream& is,
              const ::std::string& id,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LowDelay (::xercesc::InputSource& is,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LowDelay (::xercesc::InputSource& is,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LowDelay (::xercesc::InputSource& is,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LowDelay (const ::xercesc::DOMDocument& d,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LowDelay (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxGOP (const ::std::string& uri,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxGOP (const ::std::string& uri,
            ::xml_schema::error_handler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxGOP (const ::std::string& uri,
            ::xercesc::DOMErrorHandler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxGOP (::std::istream& is,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxGOP (::std::istream& is,
            ::xml_schema::error_handler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxGOP (::std::istream& is,
            ::xercesc::DOMErrorHandler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxGOP (::std::istream& is,
            const ::std::string& id,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxGOP (::std::istream& is,
            const ::std::string& id,
            ::xml_schema::error_handler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxGOP (::std::istream& is,
            const ::std::string& id,
            ::xercesc::DOMErrorHandler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxGOP (::xercesc::InputSource& is,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxGOP (::xercesc::InputSource& is,
            ::xml_schema::error_handler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxGOP (::xercesc::InputSource& is,
            ::xercesc::DOMErrorHandler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxGOP (const ::xercesc::DOMDocument& d,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    MaxGOP (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ProfileAndLevel (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ProfileAndLevel (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ProfileAndLevel (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ProfileAndLevel (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ProfileAndLevel (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ProfileAndLevel (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ProfileAndLevel (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ProfileAndLevel (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ProfileAndLevel (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ProfileAndLevel (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ProfileAndLevel (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ProfileAndLevel (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ProfileAndLevel (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    ProfileAndLevel (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    SingleSequence (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    SingleSequence (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    SingleSequence (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    SingleSequence (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    SingleSequence (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    SingleSequence (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    SingleSequence (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    SingleSequence (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    SingleSequence (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    SingleSequence (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    SingleSequence (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    SingleSequence (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    SingleSequence (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    SingleSequence (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    DateTimeRate (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    DateTimeRate (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    DateTimeRate (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    DateTimeRate (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    DateTimeRate (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    DateTimeRate (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    DateTimeRate (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    DateTimeRate (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    DateTimeRate (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    DateTimeRate (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    DateTimeRate (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    DateTimeRate (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    DateTimeRate (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    DateTimeRate (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeDropFrame (const ::std::string& uri,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeDropFrame (const ::std::string& uri,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeDropFrame (const ::std::string& uri,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeDropFrame (::std::istream& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeDropFrame (::std::istream& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeDropFrame (::std::istream& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeDropFrame (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeDropFrame (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeDropFrame (::std::istream& is,
                       const ::std::string& id,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeDropFrame (::xercesc::InputSource& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeDropFrame (::xercesc::InputSource& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeDropFrame (::xercesc::InputSource& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeDropFrame (const ::xercesc::DOMDocument& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeDropFrame (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeEmbedded (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeEmbedded (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeEmbedded (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeEmbedded (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeEmbedded (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeEmbedded (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeEmbedded (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeEmbedded (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeEmbedded (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeEmbedded (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeEmbedded (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeEmbedded (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeEmbedded (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    DateTimeEmbedded (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DateTimeKind (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DateTimeKind (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DateTimeKind (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DateTimeKind (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DateTimeKind (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DateTimeKind (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DateTimeKind (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DateTimeKind (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DateTimeKind (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DateTimeKind (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DateTimeKind (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DateTimeKind (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DateTimeKind (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    DateTimeKind (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockAlign (const ::std::string& uri,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockAlign (const ::std::string& uri,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockAlign (const ::std::string& uri,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockAlign (::std::istream& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockAlign (::std::istream& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockAlign (::std::istream& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockAlign (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockAlign (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockAlign (::std::istream& is,
                const ::std::string& id,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockAlign (::xercesc::InputSource& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockAlign (::xercesc::InputSource& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockAlign (::xercesc::InputSource& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockAlign (const ::xercesc::DOMDocument& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockAlign (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SequenceOffset (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SequenceOffset (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SequenceOffset (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SequenceOffset (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SequenceOffset (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SequenceOffset (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SequenceOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SequenceOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SequenceOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SequenceOffset (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SequenceOffset (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SequenceOffset (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SequenceOffset (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SequenceOffset (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AverageBytesPerSecond (const ::std::string& uri,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AverageBytesPerSecond (const ::std::string& uri,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AverageBytesPerSecond (const ::std::string& uri,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AverageBytesPerSecond (::std::istream& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AverageBytesPerSecond (::std::istream& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AverageBytesPerSecond (::std::istream& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AverageBytesPerSecond (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AverageBytesPerSecond (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AverageBytesPerSecond (::std::istream& is,
                           const ::std::string& id,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AverageBytesPerSecond (::xercesc::InputSource& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AverageBytesPerSecond (::xercesc::InputSource& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AverageBytesPerSecond (::xercesc::InputSource& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AverageBytesPerSecond (const ::xercesc::DOMDocument& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    AverageBytesPerSecond (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelope (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelope (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelope (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelope (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelope (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelope (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelope (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelope (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelope (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelope (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelope (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelope (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelope (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelope (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ChannelAssignment (const ::std::string& uri,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ChannelAssignment (const ::std::string& uri,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ChannelAssignment (const ::std::string& uri,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ChannelAssignment (::std::istream& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ChannelAssignment (::std::istream& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ChannelAssignment (::std::istream& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ChannelAssignment (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ChannelAssignment (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ChannelAssignment (::std::istream& is,
                       const ::std::string& id,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ChannelAssignment (::xercesc::InputSource& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ChannelAssignment (::xercesc::InputSource& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ChannelAssignment (::xercesc::InputSource& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ChannelAssignment (const ::xercesc::DOMDocument& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ChannelAssignment (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeVersion (const ::std::string& uri,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeVersion (const ::std::string& uri,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeVersion (const ::std::string& uri,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeVersion (::std::istream& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeVersion (::std::istream& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeVersion (::std::istream& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeVersion (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeVersion (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeVersion (::std::istream& is,
                         const ::std::string& id,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeVersion (::xercesc::InputSource& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeVersion (::xercesc::InputSource& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeVersion (::xercesc::InputSource& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeVersion (const ::xercesc::DOMDocument& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeVersion (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeFormat (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeFormat (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeFormat (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeFormat (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeFormat (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeFormat (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeFormat (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeFormat (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeFormat (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeFormat (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeFormat (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeFormat (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeFormat (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeFormat (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PointsPerPeakValue (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PointsPerPeakValue (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PointsPerPeakValue (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PointsPerPeakValue (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PointsPerPeakValue (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PointsPerPeakValue (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PointsPerPeakValue (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PointsPerPeakValue (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PointsPerPeakValue (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PointsPerPeakValue (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PointsPerPeakValue (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PointsPerPeakValue (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PointsPerPeakValue (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PointsPerPeakValue (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeBlockSize (const ::std::string& uri,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeBlockSize (const ::std::string& uri,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeBlockSize (const ::std::string& uri,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeBlockSize (::std::istream& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeBlockSize (::std::istream& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeBlockSize (::std::istream& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeBlockSize (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeBlockSize (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeBlockSize (::std::istream& is,
                           const ::std::string& id,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeBlockSize (::xercesc::InputSource& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeBlockSize (::xercesc::InputSource& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeBlockSize (::xercesc::InputSource& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeBlockSize (const ::xercesc::DOMDocument& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakEnvelopeBlockSize (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakChannels (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakChannels (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakChannels (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakChannels (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakChannels (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakChannels (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakChannels (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakChannels (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakChannels (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakChannels (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakChannels (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakChannels (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakChannels (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakChannels (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakFrames (const ::std::string& uri,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakFrames (const ::std::string& uri,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakFrames (const ::std::string& uri,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakFrames (::std::istream& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakFrames (::std::istream& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakFrames (::std::istream& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakFrames (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakFrames (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakFrames (::std::istream& is,
                const ::std::string& id,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakFrames (::xercesc::InputSource& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakFrames (::xercesc::InputSource& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakFrames (::xercesc::InputSource& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakFrames (const ::xercesc::DOMDocument& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PeakFrames (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    PeakOfPeaksPosition (const ::std::string& uri,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    PeakOfPeaksPosition (const ::std::string& uri,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    PeakOfPeaksPosition (const ::std::string& uri,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    PeakOfPeaksPosition (::std::istream& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    PeakOfPeaksPosition (::std::istream& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    PeakOfPeaksPosition (::std::istream& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    PeakOfPeaksPosition (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    PeakOfPeaksPosition (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    PeakOfPeaksPosition (::std::istream& is,
                         const ::std::string& id,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    PeakOfPeaksPosition (::xercesc::InputSource& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    PeakOfPeaksPosition (::xercesc::InputSource& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    PeakOfPeaksPosition (::xercesc::InputSource& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    PeakOfPeaksPosition (const ::xercesc::DOMDocument& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    PeakOfPeaksPosition (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PeakEnvelopeTimestamp (const ::std::string& uri,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PeakEnvelopeTimestamp (const ::std::string& uri,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PeakEnvelopeTimestamp (const ::std::string& uri,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PeakEnvelopeTimestamp (::std::istream& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PeakEnvelopeTimestamp (::std::istream& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PeakEnvelopeTimestamp (::std::istream& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PeakEnvelopeTimestamp (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PeakEnvelopeTimestamp (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PeakEnvelopeTimestamp (::std::istream& is,
                           const ::std::string& id,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PeakEnvelopeTimestamp (::xercesc::InputSource& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PeakEnvelopeTimestamp (::xercesc::InputSource& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PeakEnvelopeTimestamp (::xercesc::InputSource& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PeakEnvelopeTimestamp (const ::xercesc::DOMDocument& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PeakEnvelopeTimestamp (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelopeData (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelopeData (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelopeData (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelopeData (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelopeData (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelopeData (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelopeData (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelopeData (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelopeData (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelopeData (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelopeData (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelopeData (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelopeData (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    PeakEnvelopeData (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityReport (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityReport (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityReport (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityReport (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityReport (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityReport (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityReport (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityReport (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityReport (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityReport (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityReport (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityReport (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityReport (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityReport (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityWave (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityWave (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityWave (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityWave (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityWave (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityWave (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityWave (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityWave (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityWave (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityWave (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityWave (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityWave (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityWave (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    FileSecurityWave (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Emphasis (const ::std::string& uri,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Emphasis (const ::std::string& uri,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Emphasis (const ::std::string& uri,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Emphasis (::std::istream& is,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Emphasis (::std::istream& is,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Emphasis (::std::istream& is,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Emphasis (::std::istream& is,
              const ::std::string& id,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Emphasis (::std::istream& is,
              const ::std::string& id,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Emphasis (::std::istream& is,
              const ::std::string& id,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Emphasis (::xercesc::InputSource& is,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Emphasis (::xercesc::InputSource& is,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Emphasis (::xercesc::InputSource& is,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Emphasis (const ::xercesc::DOMDocument& d,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Emphasis (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockStartOffset (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockStartOffset (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockStartOffset (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockStartOffset (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockStartOffset (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockStartOffset (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockStartOffset (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockStartOffset (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockStartOffset (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockStartOffset (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockStartOffset (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockStartOffset (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockStartOffset (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    BlockStartOffset (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AuxBitsMode (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AuxBitsMode (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AuxBitsMode (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AuxBitsMode (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AuxBitsMode (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AuxBitsMode (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AuxBitsMode (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AuxBitsMode (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AuxBitsMode (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AuxBitsMode (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AuxBitsMode (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AuxBitsMode (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AuxBitsMode (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AuxBitsMode (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::ChannelStatusMode >
    ChannelStatusMode_ (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ChannelStatusMode >
    ChannelStatusMode_ (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ChannelStatusMode >
    ChannelStatusMode_ (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::ChannelStatusMode >
    ChannelStatusMode_ (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ChannelStatusMode >
    ChannelStatusMode_ (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ChannelStatusMode >
    ChannelStatusMode_ (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ChannelStatusMode >
    ChannelStatusMode_ (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ChannelStatusMode >
    ChannelStatusMode_ (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ChannelStatusMode >
    ChannelStatusMode_ (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::ChannelStatusMode >
    ChannelStatusMode_ (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ChannelStatusMode >
    ChannelStatusMode_ (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ChannelStatusMode >
    ChannelStatusMode_ (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::ChannelStatusMode >
    ChannelStatusMode_ (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ChannelStatusMode >
    ChannelStatusMode_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::FixedChannelStatusData >
    FixedChannelStatusData_ (const ::std::string& uri,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FixedChannelStatusData >
    FixedChannelStatusData_ (const ::std::string& uri,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FixedChannelStatusData >
    FixedChannelStatusData_ (const ::std::string& uri,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::FixedChannelStatusData >
    FixedChannelStatusData_ (::std::istream& is,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FixedChannelStatusData >
    FixedChannelStatusData_ (::std::istream& is,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FixedChannelStatusData >
    FixedChannelStatusData_ (::std::istream& is,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FixedChannelStatusData >
    FixedChannelStatusData_ (::std::istream& is,
                             const ::std::string& id,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FixedChannelStatusData >
    FixedChannelStatusData_ (::std::istream& is,
                             const ::std::string& id,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FixedChannelStatusData >
    FixedChannelStatusData_ (::std::istream& is,
                             const ::std::string& id,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::FixedChannelStatusData >
    FixedChannelStatusData_ (::xercesc::InputSource& is,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FixedChannelStatusData >
    FixedChannelStatusData_ (::xercesc::InputSource& is,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FixedChannelStatusData >
    FixedChannelStatusData_ (::xercesc::InputSource& is,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::FixedChannelStatusData >
    FixedChannelStatusData_ (const ::xercesc::DOMDocument& d,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FixedChannelStatusData >
    FixedChannelStatusData_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::UserDataMode >
    UserDataMode_ (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::UserDataMode >
    UserDataMode_ (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::UserDataMode >
    UserDataMode_ (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::UserDataMode >
    UserDataMode_ (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::UserDataMode >
    UserDataMode_ (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::UserDataMode >
    UserDataMode_ (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::UserDataMode >
    UserDataMode_ (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::UserDataMode >
    UserDataMode_ (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::UserDataMode >
    UserDataMode_ (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::UserDataMode >
    UserDataMode_ (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::UserDataMode >
    UserDataMode_ (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::UserDataMode >
    UserDataMode_ (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::UserDataMode >
    UserDataMode_ (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::UserDataMode >
    UserDataMode_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::FixedUserData >
    FixedUserData_ (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FixedUserData >
    FixedUserData_ (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FixedUserData >
    FixedUserData_ (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::FixedUserData >
    FixedUserData_ (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FixedUserData >
    FixedUserData_ (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FixedUserData >
    FixedUserData_ (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FixedUserData >
    FixedUserData_ (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FixedUserData >
    FixedUserData_ (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FixedUserData >
    FixedUserData_ (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::FixedUserData >
    FixedUserData_ (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FixedUserData >
    FixedUserData_ (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FixedUserData >
    FixedUserData_ (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::FixedUserData >
    FixedUserData_ (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FixedUserData >
    FixedUserData_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PackLength (const ::std::string& uri,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PackLength (const ::std::string& uri,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PackLength (const ::std::string& uri,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PackLength (::std::istream& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PackLength (::std::istream& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PackLength (::std::istream& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PackLength (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PackLength (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PackLength (::std::istream& is,
                const ::std::string& id,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PackLength (::xercesc::InputSource& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PackLength (::xercesc::InputSource& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PackLength (::xercesc::InputSource& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PackLength (const ::xercesc::DOMDocument& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PackLength (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EditUnitByteCount (const ::std::string& uri,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EditUnitByteCount (const ::std::string& uri,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EditUnitByteCount (const ::std::string& uri,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EditUnitByteCount (::std::istream& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EditUnitByteCount (::std::istream& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EditUnitByteCount (::std::istream& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EditUnitByteCount (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EditUnitByteCount (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EditUnitByteCount (::std::istream& is,
                       const ::std::string& id,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EditUnitByteCount (::xercesc::InputSource& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EditUnitByteCount (::xercesc::InputSource& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EditUnitByteCount (::xercesc::InputSource& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EditUnitByteCount (const ::xercesc::DOMDocument& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    EditUnitByteCount (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SliceCount (const ::std::string& uri,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SliceCount (const ::std::string& uri,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SliceCount (const ::std::string& uri,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SliceCount (::std::istream& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SliceCount (::std::istream& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SliceCount (::std::istream& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SliceCount (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SliceCount (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SliceCount (::std::istream& is,
                const ::std::string& id,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SliceCount (::xercesc::InputSource& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SliceCount (::xercesc::InputSource& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SliceCount (::xercesc::InputSource& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SliceCount (const ::xercesc::DOMDocument& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    SliceCount (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    PositionTableCount (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    PositionTableCount (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    PositionTableCount (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    PositionTableCount (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    PositionTableCount (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    PositionTableCount (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    PositionTableCount (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    PositionTableCount (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    PositionTableCount (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    PositionTableCount (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    PositionTableCount (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    PositionTableCount (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    PositionTableCount (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    PositionTableCount (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    PositionTableIndex (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    PositionTableIndex (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    PositionTableIndex (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    PositionTableIndex (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    PositionTableIndex (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    PositionTableIndex (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    PositionTableIndex (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    PositionTableIndex (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    PositionTableIndex (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    PositionTableIndex (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    PositionTableIndex (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    PositionTableIndex (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    PositionTableIndex (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    PositionTableIndex (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Slice (const ::std::string& uri,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Slice (const ::std::string& uri,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Slice (const ::std::string& uri,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Slice (::std::istream& is,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Slice (::std::istream& is,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Slice (::std::istream& is,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Slice (::std::istream& is,
           const ::std::string& id,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Slice (::std::istream& is,
           const ::std::string& id,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Slice (::std::istream& is,
           const ::std::string& id,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Slice (::xercesc::InputSource& is,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Slice (::xercesc::InputSource& is,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Slice (::xercesc::InputSource& is,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Slice (const ::xercesc::DOMDocument& d,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Slice (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ElementDelta (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ElementDelta (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ElementDelta (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ElementDelta (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ElementDelta (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ElementDelta (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ElementDelta (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ElementDelta (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ElementDelta (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ElementDelta (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ElementDelta (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ElementDelta (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ElementDelta (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ElementDelta (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    TemporalOffset (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    TemporalOffset (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    TemporalOffset (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    TemporalOffset (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    TemporalOffset (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    TemporalOffset (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    TemporalOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    TemporalOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    TemporalOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    TemporalOffset (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    TemporalOffset (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    TemporalOffset (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    TemporalOffset (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    TemporalOffset (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    KeyFrameOffset (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    KeyFrameOffset (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    KeyFrameOffset (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    KeyFrameOffset (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    KeyFrameOffset (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    KeyFrameOffset (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    KeyFrameOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    KeyFrameOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    KeyFrameOffset (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    KeyFrameOffset (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    KeyFrameOffset (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    KeyFrameOffset (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    KeyFrameOffset (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Int8 >
    KeyFrameOffset (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Flags (const ::std::string& uri,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Flags (const ::std::string& uri,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Flags (const ::std::string& uri,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Flags (::std::istream& is,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Flags (::std::istream& is,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Flags (::std::istream& is,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Flags (::std::istream& is,
           const ::std::string& id,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Flags (::std::istream& is,
           const ::std::string& id,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Flags (::std::istream& is,
           const ::std::string& id,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Flags (::xercesc::InputSource& is,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Flags (::xercesc::InputSource& is,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Flags (::xercesc::InputSource& is,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Flags (const ::xercesc::DOMDocument& d,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    Flags (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    StreamOffset (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    StreamOffset (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    StreamOffset (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    StreamOffset (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    StreamOffset (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    StreamOffset (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    StreamOffset (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    StreamOffset (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    StreamOffset (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    StreamOffset (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    StreamOffset (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    StreamOffset (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    StreamOffset (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    StreamOffset (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::SliceOffset >
    SliceOffset_ (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SliceOffset >
    SliceOffset_ (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SliceOffset >
    SliceOffset_ (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::SliceOffset >
    SliceOffset_ (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SliceOffset >
    SliceOffset_ (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SliceOffset >
    SliceOffset_ (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SliceOffset >
    SliceOffset_ (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SliceOffset >
    SliceOffset_ (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SliceOffset >
    SliceOffset_ (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::SliceOffset >
    SliceOffset_ (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SliceOffset >
    SliceOffset_ (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SliceOffset >
    SliceOffset_ (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::SliceOffset >
    SliceOffset_ (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SliceOffset >
    SliceOffset_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::PositionTable >
    PositionTable_ (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PositionTable >
    PositionTable_ (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PositionTable >
    PositionTable_ (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::PositionTable >
    PositionTable_ (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PositionTable >
    PositionTable_ (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PositionTable >
    PositionTable_ (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PositionTable >
    PositionTable_ (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PositionTable >
    PositionTable_ (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PositionTable >
    PositionTable_ (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::PositionTable >
    PositionTable_ (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PositionTable >
    PositionTable_ (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PositionTable >
    PositionTable_ (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::PositionTable >
    PositionTable_ (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PositionTable >
    PositionTable_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::DeltaEntryArray >
    DeltaEntryArray_ (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeltaEntryArray >
    DeltaEntryArray_ (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeltaEntryArray >
    DeltaEntryArray_ (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::DeltaEntryArray >
    DeltaEntryArray_ (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeltaEntryArray >
    DeltaEntryArray_ (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeltaEntryArray >
    DeltaEntryArray_ (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeltaEntryArray >
    DeltaEntryArray_ (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeltaEntryArray >
    DeltaEntryArray_ (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeltaEntryArray >
    DeltaEntryArray_ (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::DeltaEntryArray >
    DeltaEntryArray_ (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeltaEntryArray >
    DeltaEntryArray_ (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeltaEntryArray >
    DeltaEntryArray_ (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::DeltaEntryArray >
    DeltaEntryArray_ (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeltaEntryArray >
    DeltaEntryArray_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::IndexEntryArray >
    IndexEntryArray_ (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IndexEntryArray >
    IndexEntryArray_ (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IndexEntryArray >
    IndexEntryArray_ (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::IndexEntryArray >
    IndexEntryArray_ (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IndexEntryArray >
    IndexEntryArray_ (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IndexEntryArray >
    IndexEntryArray_ (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IndexEntryArray >
    IndexEntryArray_ (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IndexEntryArray >
    IndexEntryArray_ (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IndexEntryArray >
    IndexEntryArray_ (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::IndexEntryArray >
    IndexEntryArray_ (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IndexEntryArray >
    IndexEntryArray_ (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IndexEntryArray >
    IndexEntryArray_ (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::IndexEntryArray >
    IndexEntryArray_ (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IndexEntryArray >
    IndexEntryArray_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ViewportAspectRatio (const ::std::string& uri,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ViewportAspectRatio (const ::std::string& uri,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ViewportAspectRatio (const ::std::string& uri,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ViewportAspectRatio (::std::istream& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ViewportAspectRatio (::std::istream& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ViewportAspectRatio (::std::istream& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ViewportAspectRatio (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ViewportAspectRatio (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ViewportAspectRatio (::std::istream& is,
                         const ::std::string& id,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ViewportAspectRatio (::xercesc::InputSource& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ViewportAspectRatio (::xercesc::InputSource& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ViewportAspectRatio (::xercesc::InputSource& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ViewportAspectRatio (const ::xercesc::DOMDocument& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    ViewportAspectRatio (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PerceivedDisplayFormat (const ::std::string& uri,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PerceivedDisplayFormat (const ::std::string& uri,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PerceivedDisplayFormat (const ::std::string& uri,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PerceivedDisplayFormat (::std::istream& is,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PerceivedDisplayFormat (::std::istream& is,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PerceivedDisplayFormat (::std::istream& is,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PerceivedDisplayFormat (::std::istream& is,
                            const ::std::string& id,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PerceivedDisplayFormat (::std::istream& is,
                            const ::std::string& id,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PerceivedDisplayFormat (::std::istream& is,
                            const ::std::string& id,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PerceivedDisplayFormat (::xercesc::InputSource& is,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PerceivedDisplayFormat (::xercesc::InputSource& is,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PerceivedDisplayFormat (::xercesc::InputSource& is,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PerceivedDisplayFormat (const ::xercesc::DOMDocument& d,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    PerceivedDisplayFormat (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CaptionKind (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CaptionKind (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CaptionKind (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CaptionKind (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CaptionKind (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CaptionKind (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CaptionKind (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CaptionKind (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CaptionKind (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CaptionKind (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CaptionKind (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CaptionKind (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CaptionKind (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    CaptionKind (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkID (const ::std::string& uri,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkID (const ::std::string& uri,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkID (const ::std::string& uri,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkID (::std::istream& is,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkID (::std::istream& is,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkID (::std::istream& is,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkID (::std::istream& is,
             const ::std::string& id,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkID (::std::istream& is,
             const ::std::string& id,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkID (::std::istream& is,
             const ::std::string& id,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkID (::xercesc::InputSource& is,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkID (::xercesc::InputSource& is,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkID (::xercesc::InputSource& is,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkID (const ::xercesc::DOMDocument& d,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkID (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkLength (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkLength (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkLength (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkLength (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkLength (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkLength (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkLength (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkLength (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkLength (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkLength (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkLength (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkLength (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkLength (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    ChunkLength (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    ChunkData (const ::std::string& uri,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    ChunkData (const ::std::string& uri,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    ChunkData (const ::std::string& uri,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    ChunkData (::std::istream& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    ChunkData (::std::istream& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    ChunkData (::std::istream& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    ChunkData (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    ChunkData (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    ChunkData (::std::istream& is,
               const ::std::string& id,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    ChunkData (::xercesc::InputSource& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    ChunkData (::xercesc::InputSource& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    ChunkData (::xercesc::InputSource& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    ChunkData (const ::xercesc::DOMDocument& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    ChunkData (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ApplicationProductID (const ::std::string& uri,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ApplicationProductID (const ::std::string& uri,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ApplicationProductID (const ::std::string& uri,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ApplicationProductID (::std::istream& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ApplicationProductID (::std::istream& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ApplicationProductID (::std::istream& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ApplicationProductID (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ApplicationProductID (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ApplicationProductID (::std::istream& is,
                          const ::std::string& id,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ApplicationProductID (::xercesc::InputSource& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ApplicationProductID (::xercesc::InputSource& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ApplicationProductID (::xercesc::InputSource& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ApplicationProductID (const ::xercesc::DOMDocument& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    ApplicationProductID (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationSupplierName (const ::std::string& uri,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationSupplierName (const ::std::string& uri,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationSupplierName (const ::std::string& uri,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationSupplierName (::std::istream& is,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationSupplierName (::std::istream& is,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationSupplierName (::std::istream& is,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationSupplierName (::std::istream& is,
                             const ::std::string& id,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationSupplierName (::std::istream& is,
                             const ::std::string& id,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationSupplierName (::std::istream& is,
                             const ::std::string& id,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationSupplierName (::xercesc::InputSource& is,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationSupplierName (::xercesc::InputSource& is,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationSupplierName (::xercesc::InputSource& is,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationSupplierName (const ::xercesc::DOMDocument& d,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationSupplierName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationPlatform (const ::std::string& uri,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationPlatform (const ::std::string& uri,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationPlatform (const ::std::string& uri,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationPlatform (::std::istream& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationPlatform (::std::istream& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationPlatform (::std::istream& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationPlatform (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationPlatform (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationPlatform (::std::istream& is,
                         const ::std::string& id,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationPlatform (::xercesc::InputSource& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationPlatform (::xercesc::InputSource& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationPlatform (::xercesc::InputSource& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationPlatform (const ::xercesc::DOMDocument& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationPlatform (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EditRate (const ::std::string& uri,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EditRate (const ::std::string& uri,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EditRate (const ::std::string& uri,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EditRate (::std::istream& is,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EditRate (::std::istream& is,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EditRate (::std::istream& is,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EditRate (::std::istream& is,
              const ::std::string& id,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EditRate (::std::istream& is,
              const ::std::string& id,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EditRate (::std::istream& is,
              const ::std::string& id,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EditRate (::xercesc::InputSource& is,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EditRate (::xercesc::InputSource& is,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EditRate (::xercesc::InputSource& is,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EditRate (const ::xercesc::DOMDocument& d,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EditRate (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EventTrackEditRate (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EventTrackEditRate (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EventTrackEditRate (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EventTrackEditRate (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EventTrackEditRate (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EventTrackEditRate (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EventTrackEditRate (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EventTrackEditRate (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EventTrackEditRate (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EventTrackEditRate (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EventTrackEditRate (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EventTrackEditRate (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EventTrackEditRate (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    EventTrackEditRate (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationVersionString (const ::std::string& uri,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationVersionString (const ::std::string& uri,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationVersionString (const ::std::string& uri,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationVersionString (::std::istream& is,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationVersionString (::std::istream& is,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationVersionString (::std::istream& is,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationVersionString (::std::istream& is,
                              const ::std::string& id,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationVersionString (::std::istream& is,
                              const ::std::string& id,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationVersionString (::std::istream& is,
                              const ::std::string& id,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationVersionString (::xercesc::InputSource& is,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationVersionString (::xercesc::InputSource& is,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationVersionString (::xercesc::InputSource& is,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationVersionString (const ::xercesc::DOMDocument& d,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationVersionString (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventComment (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventComment (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventComment (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventComment (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventComment (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventComment (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventComment (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventComment (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventComment (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventComment (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventComment (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventComment (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventComment (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventComment (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ToolkitVersion (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ToolkitVersion (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ToolkitVersion (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ToolkitVersion (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ToolkitVersion (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ToolkitVersion (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ToolkitVersion (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ToolkitVersion (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ToolkitVersion (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ToolkitVersion (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ToolkitVersion (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ToolkitVersion (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ToolkitVersion (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ToolkitVersion (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationName (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationName (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationName (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationName (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationName (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationName (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationName (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationName (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationName (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationName (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationName (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationName (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationName (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ApplicationName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    GenerationID (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    GenerationID (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    GenerationID (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    GenerationID (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    GenerationID (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    GenerationID (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    GenerationID (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    GenerationID (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    GenerationID (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    GenerationID (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    GenerationID (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    GenerationID (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    GenerationID (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    GenerationID (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ApplicationVersion (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ApplicationVersion (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ApplicationVersion (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ApplicationVersion (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ApplicationVersion (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ApplicationVersion (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ApplicationVersion (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ApplicationVersion (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ApplicationVersion (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ApplicationVersion (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ApplicationVersion (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ApplicationVersion (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ApplicationVersion (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ProductVersionType >
    ApplicationVersion (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AlphaTransparency (const ::std::string& uri,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AlphaTransparency (const ::std::string& uri,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AlphaTransparency (const ::std::string& uri,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AlphaTransparency (::std::istream& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AlphaTransparency (::std::istream& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AlphaTransparency (::std::istream& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AlphaTransparency (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AlphaTransparency (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AlphaTransparency (::std::istream& is,
                       const ::std::string& id,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AlphaTransparency (::xercesc::InputSource& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AlphaTransparency (::xercesc::InputSource& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AlphaTransparency (::xercesc::InputSource& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AlphaTransparency (const ::xercesc::DOMDocument& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt8 >
    AlphaTransparency (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    IndexEditRate (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    IndexEditRate (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    IndexEditRate (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    IndexEditRate (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    IndexEditRate (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    IndexEditRate (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    IndexEditRate (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    IndexEditRate (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    IndexEditRate (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    IndexEditRate (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    IndexEditRate (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    IndexEditRate (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    IndexEditRate (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Rational >
    IndexEditRate (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntegrationIndication (const ::std::string& uri,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntegrationIndication (const ::std::string& uri,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntegrationIndication (const ::std::string& uri,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntegrationIndication (::std::istream& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntegrationIndication (::std::istream& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntegrationIndication (::std::istream& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntegrationIndication (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntegrationIndication (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntegrationIndication (::std::istream& is,
                           const ::std::string& id,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntegrationIndication (::xercesc::InputSource& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntegrationIndication (::xercesc::InputSource& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntegrationIndication (::xercesc::InputSource& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntegrationIndication (const ::xercesc::DOMDocument& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    IntegrationIndication (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventIndication (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventIndication (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventIndication (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventIndication (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventIndication (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventIndication (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventIndication (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventIndication (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventIndication (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventIndication (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventIndication (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventIndication (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventIndication (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EventIndication (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    QualityFlag (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    QualityFlag (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    QualityFlag (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    QualityFlag (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    QualityFlag (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    QualityFlag (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    QualityFlag (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    QualityFlag (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    QualityFlag (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    QualityFlag (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    QualityFlag (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    QualityFlag (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    QualityFlag (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    QualityFlag (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LogoFlag (const ::std::string& uri,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LogoFlag (const ::std::string& uri,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LogoFlag (const ::std::string& uri,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LogoFlag (::std::istream& is,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LogoFlag (::std::istream& is,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LogoFlag (::std::istream& is,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LogoFlag (::std::istream& is,
              const ::std::string& id,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LogoFlag (::std::istream& is,
              const ::std::string& id,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LogoFlag (::std::istream& is,
              const ::std::string& id,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LogoFlag (::xercesc::InputSource& is,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LogoFlag (::xercesc::InputSource& is,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LogoFlag (::xercesc::InputSource& is,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LogoFlag (const ::xercesc::DOMDocument& d,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Boolean >
    LogoFlag (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GraphicUsage (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GraphicUsage (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GraphicUsage (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GraphicUsage (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GraphicUsage (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GraphicUsage (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GraphicUsage (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GraphicUsage (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GraphicUsage (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GraphicUsage (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GraphicUsage (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GraphicUsage (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GraphicUsage (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    GraphicUsage (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    SimpleFlagging (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    SimpleFlagging (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    SimpleFlagging (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    SimpleFlagging (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    SimpleFlagging (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    SimpleFlagging (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    SimpleFlagging (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    SimpleFlagging (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    SimpleFlagging (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    SimpleFlagging (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    SimpleFlagging (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    SimpleFlagging (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    SimpleFlagging (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    SimpleFlagging (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCopyNumber (const ::std::string& uri,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCopyNumber (const ::std::string& uri,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCopyNumber (const ::std::string& uri,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCopyNumber (::std::istream& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCopyNumber (::std::istream& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCopyNumber (::std::istream& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCopyNumber (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCopyNumber (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCopyNumber (::std::istream& is,
                          const ::std::string& id,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCopyNumber (::xercesc::InputSource& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCopyNumber (::xercesc::InputSource& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCopyNumber (::xercesc::InputSource& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCopyNumber (const ::xercesc::DOMDocument& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCopyNumber (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCloneNumber (const ::std::string& uri,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCloneNumber (const ::std::string& uri,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCloneNumber (const ::std::string& uri,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCloneNumber (::std::istream& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCloneNumber (::std::istream& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCloneNumber (::std::istream& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCloneNumber (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCloneNumber (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCloneNumber (::std::istream& is,
                           const ::std::string& id,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCloneNumber (::xercesc::InputSource& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCloneNumber (::xercesc::InputSource& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCloneNumber (::xercesc::InputSource& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCloneNumber (const ::xercesc::DOMDocument& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    GenerationCloneNumber (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::DescriptiveFrameworkObject >
    DescriptiveFrameworkObject_ (const ::std::string& uri,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveFrameworkObject >
    DescriptiveFrameworkObject_ (const ::std::string& uri,
                                 ::xml_schema::error_handler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveFrameworkObject >
    DescriptiveFrameworkObject_ (const ::std::string& uri,
                                 ::xercesc::DOMErrorHandler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::DescriptiveFrameworkObject >
    DescriptiveFrameworkObject_ (::std::istream& is,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveFrameworkObject >
    DescriptiveFrameworkObject_ (::std::istream& is,
                                 ::xml_schema::error_handler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveFrameworkObject >
    DescriptiveFrameworkObject_ (::std::istream& is,
                                 ::xercesc::DOMErrorHandler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveFrameworkObject >
    DescriptiveFrameworkObject_ (::std::istream& is,
                                 const ::std::string& id,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveFrameworkObject >
    DescriptiveFrameworkObject_ (::std::istream& is,
                                 const ::std::string& id,
                                 ::xml_schema::error_handler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveFrameworkObject >
    DescriptiveFrameworkObject_ (::std::istream& is,
                                 const ::std::string& id,
                                 ::xercesc::DOMErrorHandler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::DescriptiveFrameworkObject >
    DescriptiveFrameworkObject_ (::xercesc::InputSource& is,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveFrameworkObject >
    DescriptiveFrameworkObject_ (::xercesc::InputSource& is,
                                 ::xml_schema::error_handler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveFrameworkObject >
    DescriptiveFrameworkObject_ (::xercesc::InputSource& is,
                                 ::xercesc::DOMErrorHandler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::DescriptiveFrameworkObject >
    DescriptiveFrameworkObject_ (const ::xercesc::DOMDocument& d,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DescriptiveFrameworkObject >
    DescriptiveFrameworkObject_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::EssenceDataObjects >
    EssenceDataObjects_ (const ::std::string& uri,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceDataObjects >
    EssenceDataObjects_ (const ::std::string& uri,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceDataObjects >
    EssenceDataObjects_ (const ::std::string& uri,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::EssenceDataObjects >
    EssenceDataObjects_ (::std::istream& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceDataObjects >
    EssenceDataObjects_ (::std::istream& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceDataObjects >
    EssenceDataObjects_ (::std::istream& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceDataObjects >
    EssenceDataObjects_ (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceDataObjects >
    EssenceDataObjects_ (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceDataObjects >
    EssenceDataObjects_ (::std::istream& is,
                         const ::std::string& id,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::EssenceDataObjects >
    EssenceDataObjects_ (::xercesc::InputSource& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceDataObjects >
    EssenceDataObjects_ (::xercesc::InputSource& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceDataObjects >
    EssenceDataObjects_ (::xercesc::InputSource& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::EssenceDataObjects >
    EssenceDataObjects_ (const ::xercesc::DOMDocument& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceDataObjects >
    EssenceDataObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::Packages >
    Packages_ (const ::std::string& uri,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Packages >
    Packages_ (const ::std::string& uri,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Packages >
    Packages_ (const ::std::string& uri,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::Packages >
    Packages_ (::std::istream& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Packages >
    Packages_ (::std::istream& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Packages >
    Packages_ (::std::istream& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Packages >
    Packages_ (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Packages >
    Packages_ (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Packages >
    Packages_ (::std::istream& is,
               const ::std::string& id,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::Packages >
    Packages_ (::xercesc::InputSource& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Packages >
    Packages_ (::xercesc::InputSource& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Packages >
    Packages_ (::xercesc::InputSource& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::Packages >
    Packages_ (const ::xercesc::DOMDocument& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Packages >
    Packages_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::PrimaryPackage >
    PrimaryPackage_ (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PrimaryPackage >
    PrimaryPackage_ (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PrimaryPackage >
    PrimaryPackage_ (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::PrimaryPackage >
    PrimaryPackage_ (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PrimaryPackage >
    PrimaryPackage_ (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PrimaryPackage >
    PrimaryPackage_ (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PrimaryPackage >
    PrimaryPackage_ (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PrimaryPackage >
    PrimaryPackage_ (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PrimaryPackage >
    PrimaryPackage_ (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::PrimaryPackage >
    PrimaryPackage_ (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PrimaryPackage >
    PrimaryPackage_ (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PrimaryPackage >
    PrimaryPackage_ (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::PrimaryPackage >
    PrimaryPackage_ (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PrimaryPackage >
    PrimaryPackage_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::PackageTracks >
    PackageTracks_ (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PackageTracks >
    PackageTracks_ (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PackageTracks >
    PackageTracks_ (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::PackageTracks >
    PackageTracks_ (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PackageTracks >
    PackageTracks_ (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PackageTracks >
    PackageTracks_ (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PackageTracks >
    PackageTracks_ (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PackageTracks >
    PackageTracks_ (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PackageTracks >
    PackageTracks_ (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::PackageTracks >
    PackageTracks_ (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PackageTracks >
    PackageTracks_ (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PackageTracks >
    PackageTracks_ (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::PackageTracks >
    PackageTracks_ (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PackageTracks >
    PackageTracks_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::ComponentObjects >
    ComponentObjects_ (const ::std::string& uri,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ComponentObjects >
    ComponentObjects_ (const ::std::string& uri,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ComponentObjects >
    ComponentObjects_ (const ::std::string& uri,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::ComponentObjects >
    ComponentObjects_ (::std::istream& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ComponentObjects >
    ComponentObjects_ (::std::istream& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ComponentObjects >
    ComponentObjects_ (::std::istream& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ComponentObjects >
    ComponentObjects_ (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ComponentObjects >
    ComponentObjects_ (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ComponentObjects >
    ComponentObjects_ (::std::istream& is,
                       const ::std::string& id,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::ComponentObjects >
    ComponentObjects_ (::xercesc::InputSource& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ComponentObjects >
    ComponentObjects_ (::xercesc::InputSource& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ComponentObjects >
    ComponentObjects_ (::xercesc::InputSource& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::ComponentObjects >
    ComponentObjects_ (const ::xercesc::DOMDocument& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ComponentObjects >
    ComponentObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::TrackSegment >
    TrackSegment_ (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::TrackSegment >
    TrackSegment_ (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::TrackSegment >
    TrackSegment_ (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::TrackSegment >
    TrackSegment_ (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::TrackSegment >
    TrackSegment_ (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::TrackSegment >
    TrackSegment_ (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::TrackSegment >
    TrackSegment_ (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::TrackSegment >
    TrackSegment_ (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::TrackSegment >
    TrackSegment_ (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::TrackSegment >
    TrackSegment_ (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::TrackSegment >
    TrackSegment_ (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::TrackSegment >
    TrackSegment_ (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::TrackSegment >
    TrackSegment_ (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::TrackSegment >
    TrackSegment_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::ContentStorageObject >
    ContentStorageObject_ (const ::std::string& uri,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContentStorageObject >
    ContentStorageObject_ (const ::std::string& uri,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContentStorageObject >
    ContentStorageObject_ (const ::std::string& uri,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::ContentStorageObject >
    ContentStorageObject_ (::std::istream& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContentStorageObject >
    ContentStorageObject_ (::std::istream& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContentStorageObject >
    ContentStorageObject_ (::std::istream& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContentStorageObject >
    ContentStorageObject_ (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContentStorageObject >
    ContentStorageObject_ (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContentStorageObject >
    ContentStorageObject_ (::std::istream& is,
                           const ::std::string& id,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::ContentStorageObject >
    ContentStorageObject_ (::xercesc::InputSource& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContentStorageObject >
    ContentStorageObject_ (::xercesc::InputSource& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContentStorageObject >
    ContentStorageObject_ (::xercesc::InputSource& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::ContentStorageObject >
    ContentStorageObject_ (const ::xercesc::DOMDocument& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContentStorageObject >
    ContentStorageObject_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::EssenceDescription >
    EssenceDescription_ (const ::std::string& uri,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceDescription >
    EssenceDescription_ (const ::std::string& uri,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceDescription >
    EssenceDescription_ (const ::std::string& uri,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::EssenceDescription >
    EssenceDescription_ (::std::istream& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceDescription >
    EssenceDescription_ (::std::istream& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceDescription >
    EssenceDescription_ (::std::istream& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceDescription >
    EssenceDescription_ (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceDescription >
    EssenceDescription_ (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceDescription >
    EssenceDescription_ (::std::istream& is,
                         const ::std::string& id,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::EssenceDescription >
    EssenceDescription_ (::xercesc::InputSource& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceDescription >
    EssenceDescription_ (::xercesc::InputSource& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceDescription >
    EssenceDescription_ (::xercesc::InputSource& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::EssenceDescription >
    EssenceDescription_ (const ::xercesc::DOMDocument& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EssenceDescription >
    EssenceDescription_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::Locators >
    Locators_ (const ::std::string& uri,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Locators >
    Locators_ (const ::std::string& uri,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Locators >
    Locators_ (const ::std::string& uri,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::Locators >
    Locators_ (::std::istream& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Locators >
    Locators_ (::std::istream& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Locators >
    Locators_ (::std::istream& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Locators >
    Locators_ (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Locators >
    Locators_ (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Locators >
    Locators_ (::std::istream& is,
               const ::std::string& id,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::Locators >
    Locators_ (::xercesc::InputSource& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Locators >
    Locators_ (::xercesc::InputSource& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Locators >
    Locators_ (::xercesc::InputSource& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::Locators >
    Locators_ (const ::xercesc::DOMDocument& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Locators >
    Locators_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::IdentificationList >
    IdentificationList_ (const ::std::string& uri,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IdentificationList >
    IdentificationList_ (const ::std::string& uri,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IdentificationList >
    IdentificationList_ (const ::std::string& uri,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::IdentificationList >
    IdentificationList_ (::std::istream& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IdentificationList >
    IdentificationList_ (::std::istream& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IdentificationList >
    IdentificationList_ (::std::istream& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IdentificationList >
    IdentificationList_ (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IdentificationList >
    IdentificationList_ (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IdentificationList >
    IdentificationList_ (::std::istream& is,
                         const ::std::string& id,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::IdentificationList >
    IdentificationList_ (::xercesc::InputSource& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IdentificationList >
    IdentificationList_ (::xercesc::InputSource& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IdentificationList >
    IdentificationList_ (::xercesc::InputSource& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::IdentificationList >
    IdentificationList_ (const ::xercesc::DOMDocument& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IdentificationList >
    IdentificationList_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::FileDescriptors >
    FileDescriptors_ (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FileDescriptors >
    FileDescriptors_ (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FileDescriptors >
    FileDescriptors_ (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::FileDescriptors >
    FileDescriptors_ (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FileDescriptors >
    FileDescriptors_ (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FileDescriptors >
    FileDescriptors_ (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FileDescriptors >
    FileDescriptors_ (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FileDescriptors >
    FileDescriptors_ (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FileDescriptors >
    FileDescriptors_ (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::FileDescriptors >
    FileDescriptors_ (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FileDescriptors >
    FileDescriptors_ (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FileDescriptors >
    FileDescriptors_ (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::FileDescriptors >
    FileDescriptors_ (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::FileDescriptors >
    FileDescriptors_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::UnknownBWFChunks >
    UnknownBWFChunks_ (const ::std::string& uri,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::UnknownBWFChunks >
    UnknownBWFChunks_ (const ::std::string& uri,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::UnknownBWFChunks >
    UnknownBWFChunks_ (const ::std::string& uri,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::UnknownBWFChunks >
    UnknownBWFChunks_ (::std::istream& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::UnknownBWFChunks >
    UnknownBWFChunks_ (::std::istream& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::UnknownBWFChunks >
    UnknownBWFChunks_ (::std::istream& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::UnknownBWFChunks >
    UnknownBWFChunks_ (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::UnknownBWFChunks >
    UnknownBWFChunks_ (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::UnknownBWFChunks >
    UnknownBWFChunks_ (::std::istream& is,
                       const ::std::string& id,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::UnknownBWFChunks >
    UnknownBWFChunks_ (::xercesc::InputSource& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::UnknownBWFChunks >
    UnknownBWFChunks_ (::xercesc::InputSource& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::UnknownBWFChunks >
    UnknownBWFChunks_ (::xercesc::InputSource& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::UnknownBWFChunks >
    UnknownBWFChunks_ (const ::xercesc::DOMDocument& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::UnknownBWFChunks >
    UnknownBWFChunks_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ThisPartition (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ThisPartition (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ThisPartition (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ThisPartition (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ThisPartition (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ThisPartition (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ThisPartition (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ThisPartition (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ThisPartition (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ThisPartition (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ThisPartition (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ThisPartition (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ThisPartition (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ThisPartition (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    PreviousPartition (const ::std::string& uri,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    PreviousPartition (const ::std::string& uri,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    PreviousPartition (const ::std::string& uri,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    PreviousPartition (::std::istream& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    PreviousPartition (::std::istream& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    PreviousPartition (::std::istream& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    PreviousPartition (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    PreviousPartition (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    PreviousPartition (::std::istream& is,
                       const ::std::string& id,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    PreviousPartition (::xercesc::InputSource& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    PreviousPartition (::xercesc::InputSource& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    PreviousPartition (::xercesc::InputSource& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    PreviousPartition (const ::xercesc::DOMDocument& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    PreviousPartition (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    FooterPartition (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    FooterPartition (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    FooterPartition (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    FooterPartition (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    FooterPartition (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    FooterPartition (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    FooterPartition (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    FooterPartition (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    FooterPartition (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    FooterPartition (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    FooterPartition (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    FooterPartition (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    FooterPartition (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    FooterPartition (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    BodyOffset (const ::std::string& uri,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    BodyOffset (const ::std::string& uri,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    BodyOffset (const ::std::string& uri,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    BodyOffset (::std::istream& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    BodyOffset (::std::istream& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    BodyOffset (::std::istream& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    BodyOffset (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    BodyOffset (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    BodyOffset (::std::istream& is,
                const ::std::string& id,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    BodyOffset (::xercesc::InputSource& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    BodyOffset (::xercesc::InputSource& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    BodyOffset (::xercesc::InputSource& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    BodyOffset (const ::xercesc::DOMDocument& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    BodyOffset (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    LinkedTrackID (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    LinkedTrackID (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    LinkedTrackID (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    LinkedTrackID (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    LinkedTrackID (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    LinkedTrackID (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    LinkedTrackID (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    LinkedTrackID (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    LinkedTrackID (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    LinkedTrackID (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    LinkedTrackID (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    LinkedTrackID (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    LinkedTrackID (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    LinkedTrackID (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SourceTrackID (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SourceTrackID (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SourceTrackID (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SourceTrackID (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SourceTrackID (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SourceTrackID (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SourceTrackID (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SourceTrackID (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SourceTrackID (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SourceTrackID (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SourceTrackID (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SourceTrackID (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SourceTrackID (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    SourceTrackID (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    SourcePackageID (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    SourcePackageID (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    SourcePackageID (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    SourcePackageID (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    SourcePackageID (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    SourcePackageID (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    SourcePackageID (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    SourcePackageID (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    SourcePackageID (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    SourcePackageID (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    SourcePackageID (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    SourcePackageID (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    SourcePackageID (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    SourcePackageID (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ByteOffset (const ::std::string& uri,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ByteOffset (const ::std::string& uri,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ByteOffset (const ::std::string& uri,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ByteOffset (::std::istream& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ByteOffset (::std::istream& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ByteOffset (::std::istream& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ByteOffset (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ByteOffset (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ByteOffset (::std::istream& is,
                const ::std::string& id,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ByteOffset (::xercesc::InputSource& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ByteOffset (::xercesc::InputSource& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ByteOffset (::xercesc::InputSource& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ByteOffset (const ::xercesc::DOMDocument& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt64 >
    ByteOffset (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PositionInSequence (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PositionInSequence (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PositionInSequence (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PositionInSequence (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PositionInSequence (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PositionInSequence (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PositionInSequence (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PositionInSequence (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PositionInSequence (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PositionInSequence (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PositionInSequence (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PositionInSequence (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PositionInSequence (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    PositionInSequence (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TotalNumberInSequence (const ::std::string& uri,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TotalNumberInSequence (const ::std::string& uri,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TotalNumberInSequence (const ::std::string& uri,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TotalNumberInSequence (::std::istream& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TotalNumberInSequence (::std::istream& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TotalNumberInSequence (::std::istream& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TotalNumberInSequence (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TotalNumberInSequence (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TotalNumberInSequence (::std::istream& is,
                           const ::std::string& id,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TotalNumberInSequence (::xercesc::InputSource& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TotalNumberInSequence (::xercesc::InputSource& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TotalNumberInSequence (::xercesc::InputSource& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TotalNumberInSequence (const ::xercesc::DOMDocument& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    TotalNumberInSequence (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::PictureFormatObject >
    PictureFormatObject_ (const ::std::string& uri,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PictureFormatObject >
    PictureFormatObject_ (const ::std::string& uri,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PictureFormatObject >
    PictureFormatObject_ (const ::std::string& uri,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::PictureFormatObject >
    PictureFormatObject_ (::std::istream& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PictureFormatObject >
    PictureFormatObject_ (::std::istream& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PictureFormatObject >
    PictureFormatObject_ (::std::istream& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PictureFormatObject >
    PictureFormatObject_ (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PictureFormatObject >
    PictureFormatObject_ (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PictureFormatObject >
    PictureFormatObject_ (::std::istream& is,
                          const ::std::string& id,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::PictureFormatObject >
    PictureFormatObject_ (::xercesc::InputSource& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PictureFormatObject >
    PictureFormatObject_ (::xercesc::InputSource& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PictureFormatObject >
    PictureFormatObject_ (::xercesc::InputSource& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::PictureFormatObject >
    PictureFormatObject_ (const ::xercesc::DOMDocument& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PictureFormatObject >
    PictureFormatObject_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::ProjectObject >
    ProjectObject_ (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProjectObject >
    ProjectObject_ (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProjectObject >
    ProjectObject_ (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::ProjectObject >
    ProjectObject_ (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProjectObject >
    ProjectObject_ (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProjectObject >
    ProjectObject_ (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProjectObject >
    ProjectObject_ (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProjectObject >
    ProjectObject_ (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProjectObject >
    ProjectObject_ (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::ProjectObject >
    ProjectObject_ (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProjectObject >
    ProjectObject_ (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProjectObject >
    ProjectObject_ (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::ProjectObject >
    ProjectObject_ (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProjectObject >
    ProjectObject_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::GroupRelationshipObjects >
    GroupRelationshipObjects_ (const ::std::string& uri,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::GroupRelationshipObjects >
    GroupRelationshipObjects_ (const ::std::string& uri,
                               ::xml_schema::error_handler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::GroupRelationshipObjects >
    GroupRelationshipObjects_ (const ::std::string& uri,
                               ::xercesc::DOMErrorHandler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::GroupRelationshipObjects >
    GroupRelationshipObjects_ (::std::istream& is,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::GroupRelationshipObjects >
    GroupRelationshipObjects_ (::std::istream& is,
                               ::xml_schema::error_handler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::GroupRelationshipObjects >
    GroupRelationshipObjects_ (::std::istream& is,
                               ::xercesc::DOMErrorHandler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::GroupRelationshipObjects >
    GroupRelationshipObjects_ (::std::istream& is,
                               const ::std::string& id,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::GroupRelationshipObjects >
    GroupRelationshipObjects_ (::std::istream& is,
                               const ::std::string& id,
                               ::xml_schema::error_handler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::GroupRelationshipObjects >
    GroupRelationshipObjects_ (::std::istream& is,
                               const ::std::string& id,
                               ::xercesc::DOMErrorHandler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::GroupRelationshipObjects >
    GroupRelationshipObjects_ (::xercesc::InputSource& is,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::GroupRelationshipObjects >
    GroupRelationshipObjects_ (::xercesc::InputSource& is,
                               ::xml_schema::error_handler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::GroupRelationshipObjects >
    GroupRelationshipObjects_ (::xercesc::InputSource& is,
                               ::xercesc::DOMErrorHandler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::GroupRelationshipObjects >
    GroupRelationshipObjects_ (const ::xercesc::DOMDocument& d,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::GroupRelationshipObjects >
    GroupRelationshipObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::ProcessingObject >
    ProcessingObject_ (const ::std::string& uri,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProcessingObject >
    ProcessingObject_ (const ::std::string& uri,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProcessingObject >
    ProcessingObject_ (const ::std::string& uri,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::ProcessingObject >
    ProcessingObject_ (::std::istream& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProcessingObject >
    ProcessingObject_ (::std::istream& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProcessingObject >
    ProcessingObject_ (::std::istream& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProcessingObject >
    ProcessingObject_ (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProcessingObject >
    ProcessingObject_ (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProcessingObject >
    ProcessingObject_ (::std::istream& is,
                       const ::std::string& id,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::ProcessingObject >
    ProcessingObject_ (::xercesc::InputSource& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProcessingObject >
    ProcessingObject_ (::xercesc::InputSource& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProcessingObject >
    ProcessingObject_ (::xercesc::InputSource& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::ProcessingObject >
    ProcessingObject_ (const ::xercesc::DOMDocument& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProcessingObject >
    ProcessingObject_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::ContactsListObject >
    ContactsListObject_ (const ::std::string& uri,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContactsListObject >
    ContactsListObject_ (const ::std::string& uri,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContactsListObject >
    ContactsListObject_ (const ::std::string& uri,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::ContactsListObject >
    ContactsListObject_ (::std::istream& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContactsListObject >
    ContactsListObject_ (::std::istream& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContactsListObject >
    ContactsListObject_ (::std::istream& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContactsListObject >
    ContactsListObject_ (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContactsListObject >
    ContactsListObject_ (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContactsListObject >
    ContactsListObject_ (::std::istream& is,
                         const ::std::string& id,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::ContactsListObject >
    ContactsListObject_ (::xercesc::InputSource& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContactsListObject >
    ContactsListObject_ (::xercesc::InputSource& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContactsListObject >
    ContactsListObject_ (::xercesc::InputSource& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::ContactsListObject >
    ContactsListObject_ (const ::xercesc::DOMDocument& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContactsListObject >
    ContactsListObject_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::AnnotationCueWordsObject >
    AnnotationCueWordsObject_ (const ::std::string& uri,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationCueWordsObject >
    AnnotationCueWordsObject_ (const ::std::string& uri,
                               ::xml_schema::error_handler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationCueWordsObject >
    AnnotationCueWordsObject_ (const ::std::string& uri,
                               ::xercesc::DOMErrorHandler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::AnnotationCueWordsObject >
    AnnotationCueWordsObject_ (::std::istream& is,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationCueWordsObject >
    AnnotationCueWordsObject_ (::std::istream& is,
                               ::xml_schema::error_handler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationCueWordsObject >
    AnnotationCueWordsObject_ (::std::istream& is,
                               ::xercesc::DOMErrorHandler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationCueWordsObject >
    AnnotationCueWordsObject_ (::std::istream& is,
                               const ::std::string& id,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationCueWordsObject >
    AnnotationCueWordsObject_ (::std::istream& is,
                               const ::std::string& id,
                               ::xml_schema::error_handler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationCueWordsObject >
    AnnotationCueWordsObject_ (::std::istream& is,
                               const ::std::string& id,
                               ::xercesc::DOMErrorHandler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::AnnotationCueWordsObject >
    AnnotationCueWordsObject_ (::xercesc::InputSource& is,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationCueWordsObject >
    AnnotationCueWordsObject_ (::xercesc::InputSource& is,
                               ::xml_schema::error_handler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationCueWordsObject >
    AnnotationCueWordsObject_ (::xercesc::InputSource& is,
                               ::xercesc::DOMErrorHandler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::AnnotationCueWordsObject >
    AnnotationCueWordsObject_ (const ::xercesc::DOMDocument& d,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationCueWordsObject >
    AnnotationCueWordsObject_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::ShotCueWordsObject >
    ShotCueWordsObject_ (const ::std::string& uri,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ShotCueWordsObject >
    ShotCueWordsObject_ (const ::std::string& uri,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ShotCueWordsObject >
    ShotCueWordsObject_ (const ::std::string& uri,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::ShotCueWordsObject >
    ShotCueWordsObject_ (::std::istream& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ShotCueWordsObject >
    ShotCueWordsObject_ (::std::istream& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ShotCueWordsObject >
    ShotCueWordsObject_ (::std::istream& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ShotCueWordsObject >
    ShotCueWordsObject_ (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ShotCueWordsObject >
    ShotCueWordsObject_ (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ShotCueWordsObject >
    ShotCueWordsObject_ (::std::istream& is,
                         const ::std::string& id,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::ShotCueWordsObject >
    ShotCueWordsObject_ (::xercesc::InputSource& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ShotCueWordsObject >
    ShotCueWordsObject_ (::xercesc::InputSource& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ShotCueWordsObject >
    ShotCueWordsObject_ (::xercesc::InputSource& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::ShotCueWordsObject >
    ShotCueWordsObject_ (const ::xercesc::DOMDocument& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ShotCueWordsObject >
    ShotCueWordsObject_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::AwardParticipants >
    AwardParticipants_ (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AwardParticipants >
    AwardParticipants_ (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AwardParticipants >
    AwardParticipants_ (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::AwardParticipants >
    AwardParticipants_ (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AwardParticipants >
    AwardParticipants_ (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AwardParticipants >
    AwardParticipants_ (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AwardParticipants >
    AwardParticipants_ (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AwardParticipants >
    AwardParticipants_ (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AwardParticipants >
    AwardParticipants_ (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::AwardParticipants >
    AwardParticipants_ (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AwardParticipants >
    AwardParticipants_ (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AwardParticipants >
    AwardParticipants_ (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::AwardParticipants >
    AwardParticipants_ (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AwardParticipants >
    AwardParticipants_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::ContractParticipants >
    ContractParticipants_ (const ::std::string& uri,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContractParticipants >
    ContractParticipants_ (const ::std::string& uri,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContractParticipants >
    ContractParticipants_ (const ::std::string& uri,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::ContractParticipants >
    ContractParticipants_ (::std::istream& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContractParticipants >
    ContractParticipants_ (::std::istream& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContractParticipants >
    ContractParticipants_ (::std::istream& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContractParticipants >
    ContractParticipants_ (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContractParticipants >
    ContractParticipants_ (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContractParticipants >
    ContractParticipants_ (::std::istream& is,
                           const ::std::string& id,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::ContractParticipants >
    ContractParticipants_ (::xercesc::InputSource& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContractParticipants >
    ContractParticipants_ (::xercesc::InputSource& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContractParticipants >
    ContractParticipants_ (::xercesc::InputSource& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::ContractParticipants >
    ContractParticipants_ (const ::xercesc::DOMDocument& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContractParticipants >
    ContractParticipants_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::Persons >
    Persons_ (const ::std::string& uri,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Persons >
    Persons_ (const ::std::string& uri,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Persons >
    Persons_ (const ::std::string& uri,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::Persons >
    Persons_ (::std::istream& is,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Persons >
    Persons_ (::std::istream& is,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Persons >
    Persons_ (::std::istream& is,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Persons >
    Persons_ (::std::istream& is,
              const ::std::string& id,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Persons >
    Persons_ (::std::istream& is,
              const ::std::string& id,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Persons >
    Persons_ (::std::istream& is,
              const ::std::string& id,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::Persons >
    Persons_ (::xercesc::InputSource& is,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Persons >
    Persons_ (::xercesc::InputSource& is,
              ::xml_schema::error_handler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Persons >
    Persons_ (::xercesc::InputSource& is,
              ::xercesc::DOMErrorHandler& eh,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::Persons >
    Persons_ (const ::xercesc::DOMDocument& d,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Persons >
    Persons_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
              ::xml_schema::flags f = 0,
              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::ParticipantOrganizations >
    ParticipantOrganizations_ (const ::std::string& uri,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ParticipantOrganizations >
    ParticipantOrganizations_ (const ::std::string& uri,
                               ::xml_schema::error_handler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ParticipantOrganizations >
    ParticipantOrganizations_ (const ::std::string& uri,
                               ::xercesc::DOMErrorHandler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::ParticipantOrganizations >
    ParticipantOrganizations_ (::std::istream& is,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ParticipantOrganizations >
    ParticipantOrganizations_ (::std::istream& is,
                               ::xml_schema::error_handler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ParticipantOrganizations >
    ParticipantOrganizations_ (::std::istream& is,
                               ::xercesc::DOMErrorHandler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ParticipantOrganizations >
    ParticipantOrganizations_ (::std::istream& is,
                               const ::std::string& id,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ParticipantOrganizations >
    ParticipantOrganizations_ (::std::istream& is,
                               const ::std::string& id,
                               ::xml_schema::error_handler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ParticipantOrganizations >
    ParticipantOrganizations_ (::std::istream& is,
                               const ::std::string& id,
                               ::xercesc::DOMErrorHandler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::ParticipantOrganizations >
    ParticipantOrganizations_ (::xercesc::InputSource& is,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ParticipantOrganizations >
    ParticipantOrganizations_ (::xercesc::InputSource& is,
                               ::xml_schema::error_handler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ParticipantOrganizations >
    ParticipantOrganizations_ (::xercesc::InputSource& is,
                               ::xercesc::DOMErrorHandler& eh,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::ParticipantOrganizations >
    ParticipantOrganizations_ (const ::xercesc::DOMDocument& d,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ParticipantOrganizations >
    ParticipantOrganizations_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                               ::xml_schema::flags f = 0,
                               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::AddressNameValueObjects >
    AddressNameValueObjects_ (const ::std::string& uri,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AddressNameValueObjects >
    AddressNameValueObjects_ (const ::std::string& uri,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AddressNameValueObjects >
    AddressNameValueObjects_ (const ::std::string& uri,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::AddressNameValueObjects >
    AddressNameValueObjects_ (::std::istream& is,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AddressNameValueObjects >
    AddressNameValueObjects_ (::std::istream& is,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AddressNameValueObjects >
    AddressNameValueObjects_ (::std::istream& is,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AddressNameValueObjects >
    AddressNameValueObjects_ (::std::istream& is,
                              const ::std::string& id,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AddressNameValueObjects >
    AddressNameValueObjects_ (::std::istream& is,
                              const ::std::string& id,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AddressNameValueObjects >
    AddressNameValueObjects_ (::std::istream& is,
                              const ::std::string& id,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::AddressNameValueObjects >
    AddressNameValueObjects_ (::xercesc::InputSource& is,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AddressNameValueObjects >
    AddressNameValueObjects_ (::xercesc::InputSource& is,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AddressNameValueObjects >
    AddressNameValueObjects_ (::xercesc::InputSource& is,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::AddressNameValueObjects >
    AddressNameValueObjects_ (const ::xercesc::DOMDocument& d,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AddressNameValueObjects >
    AddressNameValueObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::PersonOrganizations >
    PersonOrganizations_ (const ::std::string& uri,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PersonOrganizations >
    PersonOrganizations_ (const ::std::string& uri,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PersonOrganizations >
    PersonOrganizations_ (const ::std::string& uri,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::PersonOrganizations >
    PersonOrganizations_ (::std::istream& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PersonOrganizations >
    PersonOrganizations_ (::std::istream& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PersonOrganizations >
    PersonOrganizations_ (::std::istream& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PersonOrganizations >
    PersonOrganizations_ (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PersonOrganizations >
    PersonOrganizations_ (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PersonOrganizations >
    PersonOrganizations_ (::std::istream& is,
                          const ::std::string& id,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::PersonOrganizations >
    PersonOrganizations_ (::xercesc::InputSource& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PersonOrganizations >
    PersonOrganizations_ (::xercesc::InputSource& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PersonOrganizations >
    PersonOrganizations_ (::xercesc::InputSource& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::PersonOrganizations >
    PersonOrganizations_ (const ::xercesc::DOMDocument& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PersonOrganizations >
    PersonOrganizations_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::Locations >
    Locations_ (const ::std::string& uri,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Locations >
    Locations_ (const ::std::string& uri,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Locations >
    Locations_ (const ::std::string& uri,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::Locations >
    Locations_ (::std::istream& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Locations >
    Locations_ (::std::istream& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Locations >
    Locations_ (::std::istream& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Locations >
    Locations_ (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Locations >
    Locations_ (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Locations >
    Locations_ (::std::istream& is,
                const ::std::string& id,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::Locations >
    Locations_ (::xercesc::InputSource& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Locations >
    Locations_ (::xercesc::InputSource& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Locations >
    Locations_ (::xercesc::InputSource& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::Locations >
    Locations_ (const ::xercesc::DOMDocument& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::Locations >
    Locations_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::TitlesObjects >
    TitlesObjects_ (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::TitlesObjects >
    TitlesObjects_ (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::TitlesObjects >
    TitlesObjects_ (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::TitlesObjects >
    TitlesObjects_ (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::TitlesObjects >
    TitlesObjects_ (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::TitlesObjects >
    TitlesObjects_ (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::TitlesObjects >
    TitlesObjects_ (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::TitlesObjects >
    TitlesObjects_ (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::TitlesObjects >
    TitlesObjects_ (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::TitlesObjects >
    TitlesObjects_ (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::TitlesObjects >
    TitlesObjects_ (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::TitlesObjects >
    TitlesObjects_ (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::TitlesObjects >
    TitlesObjects_ (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::TitlesObjects >
    TitlesObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::IdentificationObjects >
    IdentificationObjects_ (const ::std::string& uri,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IdentificationObjects >
    IdentificationObjects_ (const ::std::string& uri,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IdentificationObjects >
    IdentificationObjects_ (const ::std::string& uri,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::IdentificationObjects >
    IdentificationObjects_ (::std::istream& is,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IdentificationObjects >
    IdentificationObjects_ (::std::istream& is,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IdentificationObjects >
    IdentificationObjects_ (::std::istream& is,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IdentificationObjects >
    IdentificationObjects_ (::std::istream& is,
                            const ::std::string& id,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IdentificationObjects >
    IdentificationObjects_ (::std::istream& is,
                            const ::std::string& id,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IdentificationObjects >
    IdentificationObjects_ (::std::istream& is,
                            const ::std::string& id,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::IdentificationObjects >
    IdentificationObjects_ (::xercesc::InputSource& is,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IdentificationObjects >
    IdentificationObjects_ (::xercesc::InputSource& is,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IdentificationObjects >
    IdentificationObjects_ (::xercesc::InputSource& is,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::IdentificationObjects >
    IdentificationObjects_ (const ::xercesc::DOMDocument& d,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::IdentificationObjects >
    IdentificationObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::BrandingObjects >
    BrandingObjects_ (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::BrandingObjects >
    BrandingObjects_ (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::BrandingObjects >
    BrandingObjects_ (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::BrandingObjects >
    BrandingObjects_ (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::BrandingObjects >
    BrandingObjects_ (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::BrandingObjects >
    BrandingObjects_ (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::BrandingObjects >
    BrandingObjects_ (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::BrandingObjects >
    BrandingObjects_ (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::BrandingObjects >
    BrandingObjects_ (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::BrandingObjects >
    BrandingObjects_ (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::BrandingObjects >
    BrandingObjects_ (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::BrandingObjects >
    BrandingObjects_ (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::BrandingObjects >
    BrandingObjects_ (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::BrandingObjects >
    BrandingObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::EventObjects >
    EventObjects_ (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EventObjects >
    EventObjects_ (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EventObjects >
    EventObjects_ (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::EventObjects >
    EventObjects_ (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EventObjects >
    EventObjects_ (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EventObjects >
    EventObjects_ (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EventObjects >
    EventObjects_ (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EventObjects >
    EventObjects_ (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EventObjects >
    EventObjects_ (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::EventObjects >
    EventObjects_ (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EventObjects >
    EventObjects_ (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EventObjects >
    EventObjects_ (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::EventObjects >
    EventObjects_ (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EventObjects >
    EventObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::EventAnnotationObjects >
    EventAnnotationObjects_ (const ::std::string& uri,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EventAnnotationObjects >
    EventAnnotationObjects_ (const ::std::string& uri,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EventAnnotationObjects >
    EventAnnotationObjects_ (const ::std::string& uri,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::EventAnnotationObjects >
    EventAnnotationObjects_ (::std::istream& is,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EventAnnotationObjects >
    EventAnnotationObjects_ (::std::istream& is,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EventAnnotationObjects >
    EventAnnotationObjects_ (::std::istream& is,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EventAnnotationObjects >
    EventAnnotationObjects_ (::std::istream& is,
                             const ::std::string& id,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EventAnnotationObjects >
    EventAnnotationObjects_ (::std::istream& is,
                             const ::std::string& id,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EventAnnotationObjects >
    EventAnnotationObjects_ (::std::istream& is,
                             const ::std::string& id,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::EventAnnotationObjects >
    EventAnnotationObjects_ (::xercesc::InputSource& is,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EventAnnotationObjects >
    EventAnnotationObjects_ (::xercesc::InputSource& is,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EventAnnotationObjects >
    EventAnnotationObjects_ (::xercesc::InputSource& is,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::EventAnnotationObjects >
    EventAnnotationObjects_ (const ::xercesc::DOMDocument& d,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::EventAnnotationObjects >
    EventAnnotationObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::AnnotationParticipants >
    AnnotationParticipants_ (const ::std::string& uri,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationParticipants >
    AnnotationParticipants_ (const ::std::string& uri,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationParticipants >
    AnnotationParticipants_ (const ::std::string& uri,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::AnnotationParticipants >
    AnnotationParticipants_ (::std::istream& is,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationParticipants >
    AnnotationParticipants_ (::std::istream& is,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationParticipants >
    AnnotationParticipants_ (::std::istream& is,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationParticipants >
    AnnotationParticipants_ (::std::istream& is,
                             const ::std::string& id,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationParticipants >
    AnnotationParticipants_ (::std::istream& is,
                             const ::std::string& id,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationParticipants >
    AnnotationParticipants_ (::std::istream& is,
                             const ::std::string& id,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::AnnotationParticipants >
    AnnotationParticipants_ (::xercesc::InputSource& is,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationParticipants >
    AnnotationParticipants_ (::xercesc::InputSource& is,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationParticipants >
    AnnotationParticipants_ (::xercesc::InputSource& is,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::AnnotationParticipants >
    AnnotationParticipants_ (const ::xercesc::DOMDocument& d,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationParticipants >
    AnnotationParticipants_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::ScriptingLocators >
    ScriptingLocators_ (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ScriptingLocators >
    ScriptingLocators_ (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ScriptingLocators >
    ScriptingLocators_ (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::ScriptingLocators >
    ScriptingLocators_ (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ScriptingLocators >
    ScriptingLocators_ (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ScriptingLocators >
    ScriptingLocators_ (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ScriptingLocators >
    ScriptingLocators_ (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ScriptingLocators >
    ScriptingLocators_ (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ScriptingLocators >
    ScriptingLocators_ (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::ScriptingLocators >
    ScriptingLocators_ (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ScriptingLocators >
    ScriptingLocators_ (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ScriptingLocators >
    ScriptingLocators_ (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::ScriptingLocators >
    ScriptingLocators_ (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ScriptingLocators >
    ScriptingLocators_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::PublicationObjects >
    PublicationObjects_ (const ::std::string& uri,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PublicationObjects >
    PublicationObjects_ (const ::std::string& uri,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PublicationObjects >
    PublicationObjects_ (const ::std::string& uri,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::PublicationObjects >
    PublicationObjects_ (::std::istream& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PublicationObjects >
    PublicationObjects_ (::std::istream& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PublicationObjects >
    PublicationObjects_ (::std::istream& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PublicationObjects >
    PublicationObjects_ (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PublicationObjects >
    PublicationObjects_ (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PublicationObjects >
    PublicationObjects_ (::std::istream& is,
                         const ::std::string& id,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::PublicationObjects >
    PublicationObjects_ (::xercesc::InputSource& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PublicationObjects >
    PublicationObjects_ (::xercesc::InputSource& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PublicationObjects >
    PublicationObjects_ (::xercesc::InputSource& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::PublicationObjects >
    PublicationObjects_ (const ::xercesc::DOMDocument& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PublicationObjects >
    PublicationObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::AwardObjects >
    AwardObjects_ (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AwardObjects >
    AwardObjects_ (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AwardObjects >
    AwardObjects_ (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::AwardObjects >
    AwardObjects_ (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AwardObjects >
    AwardObjects_ (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AwardObjects >
    AwardObjects_ (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AwardObjects >
    AwardObjects_ (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AwardObjects >
    AwardObjects_ (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AwardObjects >
    AwardObjects_ (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::AwardObjects >
    AwardObjects_ (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AwardObjects >
    AwardObjects_ (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AwardObjects >
    AwardObjects_ (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::AwardObjects >
    AwardObjects_ (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AwardObjects >
    AwardObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::CaptionsDescriptionObjects >
    CaptionsDescriptionObjects_ (const ::std::string& uri,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CaptionsDescriptionObjects >
    CaptionsDescriptionObjects_ (const ::std::string& uri,
                                 ::xml_schema::error_handler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CaptionsDescriptionObjects >
    CaptionsDescriptionObjects_ (const ::std::string& uri,
                                 ::xercesc::DOMErrorHandler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::CaptionsDescriptionObjects >
    CaptionsDescriptionObjects_ (::std::istream& is,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CaptionsDescriptionObjects >
    CaptionsDescriptionObjects_ (::std::istream& is,
                                 ::xml_schema::error_handler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CaptionsDescriptionObjects >
    CaptionsDescriptionObjects_ (::std::istream& is,
                                 ::xercesc::DOMErrorHandler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CaptionsDescriptionObjects >
    CaptionsDescriptionObjects_ (::std::istream& is,
                                 const ::std::string& id,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CaptionsDescriptionObjects >
    CaptionsDescriptionObjects_ (::std::istream& is,
                                 const ::std::string& id,
                                 ::xml_schema::error_handler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CaptionsDescriptionObjects >
    CaptionsDescriptionObjects_ (::std::istream& is,
                                 const ::std::string& id,
                                 ::xercesc::DOMErrorHandler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::CaptionsDescriptionObjects >
    CaptionsDescriptionObjects_ (::xercesc::InputSource& is,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CaptionsDescriptionObjects >
    CaptionsDescriptionObjects_ (::xercesc::InputSource& is,
                                 ::xml_schema::error_handler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CaptionsDescriptionObjects >
    CaptionsDescriptionObjects_ (::xercesc::InputSource& is,
                                 ::xercesc::DOMErrorHandler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::CaptionsDescriptionObjects >
    CaptionsDescriptionObjects_ (const ::xercesc::DOMDocument& d,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CaptionsDescriptionObjects >
    CaptionsDescriptionObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::AnnotationObjects >
    AnnotationObjects_ (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationObjects >
    AnnotationObjects_ (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationObjects >
    AnnotationObjects_ (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::AnnotationObjects >
    AnnotationObjects_ (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationObjects >
    AnnotationObjects_ (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationObjects >
    AnnotationObjects_ (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationObjects >
    AnnotationObjects_ (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationObjects >
    AnnotationObjects_ (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationObjects >
    AnnotationObjects_ (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::AnnotationObjects >
    AnnotationObjects_ (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationObjects >
    AnnotationObjects_ (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationObjects >
    AnnotationObjects_ (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::AnnotationObjects >
    AnnotationObjects_ (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AnnotationObjects >
    AnnotationObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::ProductionSettingPeriodObjects >
    ProductionSettingPeriodObjects_ (const ::std::string& uri,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProductionSettingPeriodObjects >
    ProductionSettingPeriodObjects_ (const ::std::string& uri,
                                     ::xml_schema::error_handler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProductionSettingPeriodObjects >
    ProductionSettingPeriodObjects_ (const ::std::string& uri,
                                     ::xercesc::DOMErrorHandler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::ProductionSettingPeriodObjects >
    ProductionSettingPeriodObjects_ (::std::istream& is,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProductionSettingPeriodObjects >
    ProductionSettingPeriodObjects_ (::std::istream& is,
                                     ::xml_schema::error_handler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProductionSettingPeriodObjects >
    ProductionSettingPeriodObjects_ (::std::istream& is,
                                     ::xercesc::DOMErrorHandler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProductionSettingPeriodObjects >
    ProductionSettingPeriodObjects_ (::std::istream& is,
                                     const ::std::string& id,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProductionSettingPeriodObjects >
    ProductionSettingPeriodObjects_ (::std::istream& is,
                                     const ::std::string& id,
                                     ::xml_schema::error_handler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProductionSettingPeriodObjects >
    ProductionSettingPeriodObjects_ (::std::istream& is,
                                     const ::std::string& id,
                                     ::xercesc::DOMErrorHandler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::ProductionSettingPeriodObjects >
    ProductionSettingPeriodObjects_ (::xercesc::InputSource& is,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProductionSettingPeriodObjects >
    ProductionSettingPeriodObjects_ (::xercesc::InputSource& is,
                                     ::xml_schema::error_handler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProductionSettingPeriodObjects >
    ProductionSettingPeriodObjects_ (::xercesc::InputSource& is,
                                     ::xercesc::DOMErrorHandler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::ProductionSettingPeriodObjects >
    ProductionSettingPeriodObjects_ (const ::xercesc::DOMDocument& d,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ProductionSettingPeriodObjects >
    ProductionSettingPeriodObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::SceneSettingPeriodObjects >
    SceneSettingPeriodObjects_ (const ::std::string& uri,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SceneSettingPeriodObjects >
    SceneSettingPeriodObjects_ (const ::std::string& uri,
                                ::xml_schema::error_handler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SceneSettingPeriodObjects >
    SceneSettingPeriodObjects_ (const ::std::string& uri,
                                ::xercesc::DOMErrorHandler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::SceneSettingPeriodObjects >
    SceneSettingPeriodObjects_ (::std::istream& is,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SceneSettingPeriodObjects >
    SceneSettingPeriodObjects_ (::std::istream& is,
                                ::xml_schema::error_handler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SceneSettingPeriodObjects >
    SceneSettingPeriodObjects_ (::std::istream& is,
                                ::xercesc::DOMErrorHandler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SceneSettingPeriodObjects >
    SceneSettingPeriodObjects_ (::std::istream& is,
                                const ::std::string& id,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SceneSettingPeriodObjects >
    SceneSettingPeriodObjects_ (::std::istream& is,
                                const ::std::string& id,
                                ::xml_schema::error_handler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SceneSettingPeriodObjects >
    SceneSettingPeriodObjects_ (::std::istream& is,
                                const ::std::string& id,
                                ::xercesc::DOMErrorHandler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::SceneSettingPeriodObjects >
    SceneSettingPeriodObjects_ (::xercesc::InputSource& is,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SceneSettingPeriodObjects >
    SceneSettingPeriodObjects_ (::xercesc::InputSource& is,
                                ::xml_schema::error_handler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SceneSettingPeriodObjects >
    SceneSettingPeriodObjects_ (::xercesc::InputSource& is,
                                ::xercesc::DOMErrorHandler& eh,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::SceneSettingPeriodObjects >
    SceneSettingPeriodObjects_ (const ::xercesc::DOMDocument& d,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SceneSettingPeriodObjects >
    SceneSettingPeriodObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                                ::xml_schema::flags f = 0,
                                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::ScriptingObjects >
    ScriptingObjects_ (const ::std::string& uri,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ScriptingObjects >
    ScriptingObjects_ (const ::std::string& uri,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ScriptingObjects >
    ScriptingObjects_ (const ::std::string& uri,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::ScriptingObjects >
    ScriptingObjects_ (::std::istream& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ScriptingObjects >
    ScriptingObjects_ (::std::istream& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ScriptingObjects >
    ScriptingObjects_ (::std::istream& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ScriptingObjects >
    ScriptingObjects_ (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ScriptingObjects >
    ScriptingObjects_ (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ScriptingObjects >
    ScriptingObjects_ (::std::istream& is,
                       const ::std::string& id,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::ScriptingObjects >
    ScriptingObjects_ (::xercesc::InputSource& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ScriptingObjects >
    ScriptingObjects_ (::xercesc::InputSource& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ScriptingObjects >
    ScriptingObjects_ (::xercesc::InputSource& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::ScriptingObjects >
    ScriptingObjects_ (const ::xercesc::DOMDocument& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ScriptingObjects >
    ScriptingObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::ClassificationObjects >
    ClassificationObjects_ (const ::std::string& uri,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClassificationObjects >
    ClassificationObjects_ (const ::std::string& uri,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClassificationObjects >
    ClassificationObjects_ (const ::std::string& uri,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::ClassificationObjects >
    ClassificationObjects_ (::std::istream& is,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClassificationObjects >
    ClassificationObjects_ (::std::istream& is,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClassificationObjects >
    ClassificationObjects_ (::std::istream& is,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClassificationObjects >
    ClassificationObjects_ (::std::istream& is,
                            const ::std::string& id,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClassificationObjects >
    ClassificationObjects_ (::std::istream& is,
                            const ::std::string& id,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClassificationObjects >
    ClassificationObjects_ (::std::istream& is,
                            const ::std::string& id,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::ClassificationObjects >
    ClassificationObjects_ (::xercesc::InputSource& is,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClassificationObjects >
    ClassificationObjects_ (::xercesc::InputSource& is,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClassificationObjects >
    ClassificationObjects_ (::xercesc::InputSource& is,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::ClassificationObjects >
    ClassificationObjects_ (const ::xercesc::DOMDocument& d,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClassificationObjects >
    ClassificationObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::SceneShotObjects >
    SceneShotObjects_ (const ::std::string& uri,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SceneShotObjects >
    SceneShotObjects_ (const ::std::string& uri,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SceneShotObjects >
    SceneShotObjects_ (const ::std::string& uri,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::SceneShotObjects >
    SceneShotObjects_ (::std::istream& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SceneShotObjects >
    SceneShotObjects_ (::std::istream& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SceneShotObjects >
    SceneShotObjects_ (::std::istream& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SceneShotObjects >
    SceneShotObjects_ (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SceneShotObjects >
    SceneShotObjects_ (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SceneShotObjects >
    SceneShotObjects_ (::std::istream& is,
                       const ::std::string& id,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::SceneShotObjects >
    SceneShotObjects_ (::xercesc::InputSource& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SceneShotObjects >
    SceneShotObjects_ (::xercesc::InputSource& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SceneShotObjects >
    SceneShotObjects_ (::xercesc::InputSource& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::SceneShotObjects >
    SceneShotObjects_ (const ::xercesc::DOMDocument& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SceneShotObjects >
    SceneShotObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::ClipShotObjects >
    ClipShotObjects_ (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClipShotObjects >
    ClipShotObjects_ (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClipShotObjects >
    ClipShotObjects_ (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::ClipShotObjects >
    ClipShotObjects_ (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClipShotObjects >
    ClipShotObjects_ (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClipShotObjects >
    ClipShotObjects_ (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClipShotObjects >
    ClipShotObjects_ (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClipShotObjects >
    ClipShotObjects_ (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClipShotObjects >
    ClipShotObjects_ (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::ClipShotObjects >
    ClipShotObjects_ (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClipShotObjects >
    ClipShotObjects_ (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClipShotObjects >
    ClipShotObjects_ (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::ClipShotObjects >
    ClipShotObjects_ (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClipShotObjects >
    ClipShotObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::KeypointObjects >
    KeypointObjects_ (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::KeypointObjects >
    KeypointObjects_ (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::KeypointObjects >
    KeypointObjects_ (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::KeypointObjects >
    KeypointObjects_ (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::KeypointObjects >
    KeypointObjects_ (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::KeypointObjects >
    KeypointObjects_ (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::KeypointObjects >
    KeypointObjects_ (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::KeypointObjects >
    KeypointObjects_ (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::KeypointObjects >
    KeypointObjects_ (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::KeypointObjects >
    KeypointObjects_ (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::KeypointObjects >
    KeypointObjects_ (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::KeypointObjects >
    KeypointObjects_ (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::KeypointObjects >
    KeypointObjects_ (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::KeypointObjects >
    KeypointObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::ParticipantObjects >
    ParticipantObjects_ (const ::std::string& uri,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ParticipantObjects >
    ParticipantObjects_ (const ::std::string& uri,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ParticipantObjects >
    ParticipantObjects_ (const ::std::string& uri,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::ParticipantObjects >
    ParticipantObjects_ (::std::istream& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ParticipantObjects >
    ParticipantObjects_ (::std::istream& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ParticipantObjects >
    ParticipantObjects_ (::std::istream& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ParticipantObjects >
    ParticipantObjects_ (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ParticipantObjects >
    ParticipantObjects_ (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ParticipantObjects >
    ParticipantObjects_ (::std::istream& is,
                         const ::std::string& id,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::ParticipantObjects >
    ParticipantObjects_ (::xercesc::InputSource& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ParticipantObjects >
    ParticipantObjects_ (::xercesc::InputSource& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ParticipantObjects >
    ParticipantObjects_ (::xercesc::InputSource& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::ParticipantObjects >
    ParticipantObjects_ (const ::xercesc::DOMDocument& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ParticipantObjects >
    ParticipantObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::PersonObjects >
    PersonObjects_ (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PersonObjects >
    PersonObjects_ (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PersonObjects >
    PersonObjects_ (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::PersonObjects >
    PersonObjects_ (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PersonObjects >
    PersonObjects_ (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PersonObjects >
    PersonObjects_ (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PersonObjects >
    PersonObjects_ (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PersonObjects >
    PersonObjects_ (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PersonObjects >
    PersonObjects_ (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::PersonObjects >
    PersonObjects_ (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PersonObjects >
    PersonObjects_ (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PersonObjects >
    PersonObjects_ (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::PersonObjects >
    PersonObjects_ (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PersonObjects >
    PersonObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::OrganizationObjects >
    OrganizationObjects_ (const ::std::string& uri,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::OrganizationObjects >
    OrganizationObjects_ (const ::std::string& uri,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::OrganizationObjects >
    OrganizationObjects_ (const ::std::string& uri,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::OrganizationObjects >
    OrganizationObjects_ (::std::istream& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::OrganizationObjects >
    OrganizationObjects_ (::std::istream& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::OrganizationObjects >
    OrganizationObjects_ (::std::istream& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::OrganizationObjects >
    OrganizationObjects_ (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::OrganizationObjects >
    OrganizationObjects_ (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::OrganizationObjects >
    OrganizationObjects_ (::std::istream& is,
                          const ::std::string& id,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::OrganizationObjects >
    OrganizationObjects_ (::xercesc::InputSource& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::OrganizationObjects >
    OrganizationObjects_ (::xercesc::InputSource& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::OrganizationObjects >
    OrganizationObjects_ (::xercesc::InputSource& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::OrganizationObjects >
    OrganizationObjects_ (const ::xercesc::DOMDocument& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::OrganizationObjects >
    OrganizationObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::LocationObjects >
    LocationObjects_ (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::LocationObjects >
    LocationObjects_ (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::LocationObjects >
    LocationObjects_ (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::LocationObjects >
    LocationObjects_ (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::LocationObjects >
    LocationObjects_ (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::LocationObjects >
    LocationObjects_ (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::LocationObjects >
    LocationObjects_ (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::LocationObjects >
    LocationObjects_ (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::LocationObjects >
    LocationObjects_ (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::LocationObjects >
    LocationObjects_ (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::LocationObjects >
    LocationObjects_ (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::LocationObjects >
    LocationObjects_ (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::LocationObjects >
    LocationObjects_ (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::LocationObjects >
    LocationObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::AddressObjects >
    AddressObjects_ (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AddressObjects >
    AddressObjects_ (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AddressObjects >
    AddressObjects_ (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::AddressObjects >
    AddressObjects_ (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AddressObjects >
    AddressObjects_ (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AddressObjects >
    AddressObjects_ (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AddressObjects >
    AddressObjects_ (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AddressObjects >
    AddressObjects_ (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AddressObjects >
    AddressObjects_ (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::AddressObjects >
    AddressObjects_ (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AddressObjects >
    AddressObjects_ (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AddressObjects >
    AddressObjects_ (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::AddressObjects >
    AddressObjects_ (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::AddressObjects >
    AddressObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::CommunicationsObjects >
    CommunicationsObjects_ (const ::std::string& uri,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CommunicationsObjects >
    CommunicationsObjects_ (const ::std::string& uri,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CommunicationsObjects >
    CommunicationsObjects_ (const ::std::string& uri,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::CommunicationsObjects >
    CommunicationsObjects_ (::std::istream& is,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CommunicationsObjects >
    CommunicationsObjects_ (::std::istream& is,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CommunicationsObjects >
    CommunicationsObjects_ (::std::istream& is,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CommunicationsObjects >
    CommunicationsObjects_ (::std::istream& is,
                            const ::std::string& id,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CommunicationsObjects >
    CommunicationsObjects_ (::std::istream& is,
                            const ::std::string& id,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CommunicationsObjects >
    CommunicationsObjects_ (::std::istream& is,
                            const ::std::string& id,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::CommunicationsObjects >
    CommunicationsObjects_ (::xercesc::InputSource& is,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CommunicationsObjects >
    CommunicationsObjects_ (::xercesc::InputSource& is,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CommunicationsObjects >
    CommunicationsObjects_ (::xercesc::InputSource& is,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::CommunicationsObjects >
    CommunicationsObjects_ (const ::xercesc::DOMDocument& d,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CommunicationsObjects >
    CommunicationsObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::ContractObjects >
    ContractObjects_ (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContractObjects >
    ContractObjects_ (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContractObjects >
    ContractObjects_ (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::ContractObjects >
    ContractObjects_ (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContractObjects >
    ContractObjects_ (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContractObjects >
    ContractObjects_ (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContractObjects >
    ContractObjects_ (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContractObjects >
    ContractObjects_ (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContractObjects >
    ContractObjects_ (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::ContractObjects >
    ContractObjects_ (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContractObjects >
    ContractObjects_ (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContractObjects >
    ContractObjects_ (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::ContractObjects >
    ContractObjects_ (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContractObjects >
    ContractObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::RightsObjects >
    RightsObjects_ (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::RightsObjects >
    RightsObjects_ (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::RightsObjects >
    RightsObjects_ (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::RightsObjects >
    RightsObjects_ (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::RightsObjects >
    RightsObjects_ (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::RightsObjects >
    RightsObjects_ (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::RightsObjects >
    RightsObjects_ (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::RightsObjects >
    RightsObjects_ (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::RightsObjects >
    RightsObjects_ (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::RightsObjects >
    RightsObjects_ (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::RightsObjects >
    RightsObjects_ (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::RightsObjects >
    RightsObjects_ (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::RightsObjects >
    RightsObjects_ (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::RightsObjects >
    RightsObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::DeviceParametersObjects >
    DeviceParametersObjects_ (const ::std::string& uri,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeviceParametersObjects >
    DeviceParametersObjects_ (const ::std::string& uri,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeviceParametersObjects >
    DeviceParametersObjects_ (const ::std::string& uri,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::DeviceParametersObjects >
    DeviceParametersObjects_ (::std::istream& is,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeviceParametersObjects >
    DeviceParametersObjects_ (::std::istream& is,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeviceParametersObjects >
    DeviceParametersObjects_ (::std::istream& is,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeviceParametersObjects >
    DeviceParametersObjects_ (::std::istream& is,
                              const ::std::string& id,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeviceParametersObjects >
    DeviceParametersObjects_ (::std::istream& is,
                              const ::std::string& id,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeviceParametersObjects >
    DeviceParametersObjects_ (::std::istream& is,
                              const ::std::string& id,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::DeviceParametersObjects >
    DeviceParametersObjects_ (::xercesc::InputSource& is,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeviceParametersObjects >
    DeviceParametersObjects_ (::xercesc::InputSource& is,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeviceParametersObjects >
    DeviceParametersObjects_ (::xercesc::InputSource& is,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::DeviceParametersObjects >
    DeviceParametersObjects_ (const ::xercesc::DOMDocument& d,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeviceParametersObjects >
    DeviceParametersObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::ClassificationNameValueObjects >
    ClassificationNameValueObjects_ (const ::std::string& uri,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClassificationNameValueObjects >
    ClassificationNameValueObjects_ (const ::std::string& uri,
                                     ::xml_schema::error_handler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClassificationNameValueObjects >
    ClassificationNameValueObjects_ (const ::std::string& uri,
                                     ::xercesc::DOMErrorHandler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::ClassificationNameValueObjects >
    ClassificationNameValueObjects_ (::std::istream& is,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClassificationNameValueObjects >
    ClassificationNameValueObjects_ (::std::istream& is,
                                     ::xml_schema::error_handler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClassificationNameValueObjects >
    ClassificationNameValueObjects_ (::std::istream& is,
                                     ::xercesc::DOMErrorHandler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClassificationNameValueObjects >
    ClassificationNameValueObjects_ (::std::istream& is,
                                     const ::std::string& id,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClassificationNameValueObjects >
    ClassificationNameValueObjects_ (::std::istream& is,
                                     const ::std::string& id,
                                     ::xml_schema::error_handler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClassificationNameValueObjects >
    ClassificationNameValueObjects_ (::std::istream& is,
                                     const ::std::string& id,
                                     ::xercesc::DOMErrorHandler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::ClassificationNameValueObjects >
    ClassificationNameValueObjects_ (::xercesc::InputSource& is,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClassificationNameValueObjects >
    ClassificationNameValueObjects_ (::xercesc::InputSource& is,
                                     ::xml_schema::error_handler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClassificationNameValueObjects >
    ClassificationNameValueObjects_ (::xercesc::InputSource& is,
                                     ::xercesc::DOMErrorHandler& eh,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::ClassificationNameValueObjects >
    ClassificationNameValueObjects_ (const ::xercesc::DOMDocument& d,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ClassificationNameValueObjects >
    ClassificationNameValueObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                                     ::xml_schema::flags f = 0,
                                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::ContactNameValueObjects >
    ContactNameValueObjects_ (const ::std::string& uri,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContactNameValueObjects >
    ContactNameValueObjects_ (const ::std::string& uri,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContactNameValueObjects >
    ContactNameValueObjects_ (const ::std::string& uri,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::ContactNameValueObjects >
    ContactNameValueObjects_ (::std::istream& is,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContactNameValueObjects >
    ContactNameValueObjects_ (::std::istream& is,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContactNameValueObjects >
    ContactNameValueObjects_ (::std::istream& is,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContactNameValueObjects >
    ContactNameValueObjects_ (::std::istream& is,
                              const ::std::string& id,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContactNameValueObjects >
    ContactNameValueObjects_ (::std::istream& is,
                              const ::std::string& id,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContactNameValueObjects >
    ContactNameValueObjects_ (::std::istream& is,
                              const ::std::string& id,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::ContactNameValueObjects >
    ContactNameValueObjects_ (::xercesc::InputSource& is,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContactNameValueObjects >
    ContactNameValueObjects_ (::xercesc::InputSource& is,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContactNameValueObjects >
    ContactNameValueObjects_ (::xercesc::InputSource& is,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::ContactNameValueObjects >
    ContactNameValueObjects_ (const ::xercesc::DOMDocument& d,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ContactNameValueObjects >
    ContactNameValueObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::DeviceParametersNameValueObjects >
    DeviceParametersNameValueObjects_ (const ::std::string& uri,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeviceParametersNameValueObjects >
    DeviceParametersNameValueObjects_ (const ::std::string& uri,
                                       ::xml_schema::error_handler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeviceParametersNameValueObjects >
    DeviceParametersNameValueObjects_ (const ::std::string& uri,
                                       ::xercesc::DOMErrorHandler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::DeviceParametersNameValueObjects >
    DeviceParametersNameValueObjects_ (::std::istream& is,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeviceParametersNameValueObjects >
    DeviceParametersNameValueObjects_ (::std::istream& is,
                                       ::xml_schema::error_handler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeviceParametersNameValueObjects >
    DeviceParametersNameValueObjects_ (::std::istream& is,
                                       ::xercesc::DOMErrorHandler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeviceParametersNameValueObjects >
    DeviceParametersNameValueObjects_ (::std::istream& is,
                                       const ::std::string& id,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeviceParametersNameValueObjects >
    DeviceParametersNameValueObjects_ (::std::istream& is,
                                       const ::std::string& id,
                                       ::xml_schema::error_handler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeviceParametersNameValueObjects >
    DeviceParametersNameValueObjects_ (::std::istream& is,
                                       const ::std::string& id,
                                       ::xercesc::DOMErrorHandler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::DeviceParametersNameValueObjects >
    DeviceParametersNameValueObjects_ (::xercesc::InputSource& is,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeviceParametersNameValueObjects >
    DeviceParametersNameValueObjects_ (::xercesc::InputSource& is,
                                       ::xml_schema::error_handler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeviceParametersNameValueObjects >
    DeviceParametersNameValueObjects_ (::xercesc::InputSource& is,
                                       ::xercesc::DOMErrorHandler& eh,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::DeviceParametersNameValueObjects >
    DeviceParametersNameValueObjects_ (const ::xercesc::DOMDocument& d,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::DeviceParametersNameValueObjects >
    DeviceParametersNameValueObjects_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                                       ::xml_schema::flags f = 0,
                                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::MetadataServerLocators >
    MetadataServerLocators_ (const ::std::string& uri,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::MetadataServerLocators >
    MetadataServerLocators_ (const ::std::string& uri,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::MetadataServerLocators >
    MetadataServerLocators_ (const ::std::string& uri,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::MetadataServerLocators >
    MetadataServerLocators_ (::std::istream& is,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::MetadataServerLocators >
    MetadataServerLocators_ (::std::istream& is,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::MetadataServerLocators >
    MetadataServerLocators_ (::std::istream& is,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::MetadataServerLocators >
    MetadataServerLocators_ (::std::istream& is,
                             const ::std::string& id,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::MetadataServerLocators >
    MetadataServerLocators_ (::std::istream& is,
                             const ::std::string& id,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::MetadataServerLocators >
    MetadataServerLocators_ (::std::istream& is,
                             const ::std::string& id,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::MetadataServerLocators >
    MetadataServerLocators_ (::xercesc::InputSource& is,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::MetadataServerLocators >
    MetadataServerLocators_ (::xercesc::InputSource& is,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::MetadataServerLocators >
    MetadataServerLocators_ (::xercesc::InputSource& is,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::MetadataServerLocators >
    MetadataServerLocators_ (const ::xercesc::DOMDocument& d,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::MetadataServerLocators >
    MetadataServerLocators_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::RelatedMaterialLocators >
    RelatedMaterialLocators_ (const ::std::string& uri,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::RelatedMaterialLocators >
    RelatedMaterialLocators_ (const ::std::string& uri,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::RelatedMaterialLocators >
    RelatedMaterialLocators_ (const ::std::string& uri,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::RelatedMaterialLocators >
    RelatedMaterialLocators_ (::std::istream& is,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::RelatedMaterialLocators >
    RelatedMaterialLocators_ (::std::istream& is,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::RelatedMaterialLocators >
    RelatedMaterialLocators_ (::std::istream& is,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::RelatedMaterialLocators >
    RelatedMaterialLocators_ (::std::istream& is,
                              const ::std::string& id,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::RelatedMaterialLocators >
    RelatedMaterialLocators_ (::std::istream& is,
                              const ::std::string& id,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::RelatedMaterialLocators >
    RelatedMaterialLocators_ (::std::istream& is,
                              const ::std::string& id,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::RelatedMaterialLocators >
    RelatedMaterialLocators_ (::xercesc::InputSource& is,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::RelatedMaterialLocators >
    RelatedMaterialLocators_ (::xercesc::InputSource& is,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::RelatedMaterialLocators >
    RelatedMaterialLocators_ (::xercesc::InputSource& is,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::RelatedMaterialLocators >
    RelatedMaterialLocators_ (const ::xercesc::DOMDocument& d,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::RelatedMaterialLocators >
    RelatedMaterialLocators_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::ChannelIDs >
    ChannelIDs_ (const ::std::string& uri,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ChannelIDs >
    ChannelIDs_ (const ::std::string& uri,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ChannelIDs >
    ChannelIDs_ (const ::std::string& uri,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::ChannelIDs >
    ChannelIDs_ (::std::istream& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ChannelIDs >
    ChannelIDs_ (::std::istream& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ChannelIDs >
    ChannelIDs_ (::std::istream& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ChannelIDs >
    ChannelIDs_ (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ChannelIDs >
    ChannelIDs_ (::std::istream& is,
                 const ::std::string& id,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ChannelIDs >
    ChannelIDs_ (::std::istream& is,
                 const ::std::string& id,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::ChannelIDs >
    ChannelIDs_ (::xercesc::InputSource& is,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ChannelIDs >
    ChannelIDs_ (::xercesc::InputSource& is,
                 ::xml_schema::error_handler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ChannelIDs >
    ChannelIDs_ (::xercesc::InputSource& is,
                 ::xercesc::DOMErrorHandler& eh,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::ChannelIDs >
    ChannelIDs_ (const ::xercesc::DOMDocument& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::ChannelIDs >
    ChannelIDs_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                 ::xml_schema::flags f = 0,
                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::MonoSourceTrackIDs >
    MonoSourceTrackIDs_ (const ::std::string& uri,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::MonoSourceTrackIDs >
    MonoSourceTrackIDs_ (const ::std::string& uri,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::MonoSourceTrackIDs >
    MonoSourceTrackIDs_ (const ::std::string& uri,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::MonoSourceTrackIDs >
    MonoSourceTrackIDs_ (::std::istream& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::MonoSourceTrackIDs >
    MonoSourceTrackIDs_ (::std::istream& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::MonoSourceTrackIDs >
    MonoSourceTrackIDs_ (::std::istream& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::MonoSourceTrackIDs >
    MonoSourceTrackIDs_ (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::MonoSourceTrackIDs >
    MonoSourceTrackIDs_ (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::MonoSourceTrackIDs >
    MonoSourceTrackIDs_ (::std::istream& is,
                         const ::std::string& id,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::MonoSourceTrackIDs >
    MonoSourceTrackIDs_ (::xercesc::InputSource& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::MonoSourceTrackIDs >
    MonoSourceTrackIDs_ (::xercesc::InputSource& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::MonoSourceTrackIDs >
    MonoSourceTrackIDs_ (::xercesc::InputSource& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::MonoSourceTrackIDs >
    MonoSourceTrackIDs_ (const ::xercesc::DOMDocument& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::MonoSourceTrackIDs >
    MonoSourceTrackIDs_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::SubDescriptors >
    SubDescriptors_ (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SubDescriptors >
    SubDescriptors_ (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SubDescriptors >
    SubDescriptors_ (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::SubDescriptors >
    SubDescriptors_ (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SubDescriptors >
    SubDescriptors_ (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SubDescriptors >
    SubDescriptors_ (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SubDescriptors >
    SubDescriptors_ (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SubDescriptors >
    SubDescriptors_ (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SubDescriptors >
    SubDescriptors_ (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::SubDescriptors >
    SubDescriptors_ (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SubDescriptors >
    SubDescriptors_ (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SubDescriptors >
    SubDescriptors_ (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::SubDescriptors >
    SubDescriptors_ (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::SubDescriptors >
    SubDescriptors_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartPosition (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartPosition (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartPosition (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartPosition (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartPosition (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartPosition (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartPosition (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartPosition (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartPosition (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartPosition (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartPosition (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartPosition (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartPosition (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartPosition (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ComponentLength (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ComponentLength (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ComponentLength (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ComponentLength (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ComponentLength (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ComponentLength (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ComponentLength (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ComponentLength (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ComponentLength (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ComponentLength (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ComponentLength (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ComponentLength (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ComponentLength (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ComponentLength (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventPosition (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventPosition (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventPosition (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventPosition (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventPosition (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventPosition (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventPosition (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventPosition (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventPosition (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventPosition (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventPosition (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventPosition (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventPosition (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventPosition (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileModificationDate (const ::std::string& uri,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileModificationDate (const ::std::string& uri,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileModificationDate (const ::std::string& uri,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileModificationDate (::std::istream& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileModificationDate (::std::istream& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileModificationDate (::std::istream& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileModificationDate (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileModificationDate (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileModificationDate (::std::istream& is,
                          const ::std::string& id,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileModificationDate (::xercesc::InputSource& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileModificationDate (::xercesc::InputSource& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileModificationDate (::xercesc::InputSource& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileModificationDate (const ::xercesc::DOMDocument& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileModificationDate (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PackageLastModified (const ::std::string& uri,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PackageLastModified (const ::std::string& uri,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PackageLastModified (const ::std::string& uri,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PackageLastModified (::std::istream& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PackageLastModified (::std::istream& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PackageLastModified (::std::istream& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PackageLastModified (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PackageLastModified (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PackageLastModified (::std::istream& is,
                         const ::std::string& id,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PackageLastModified (::xercesc::InputSource& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PackageLastModified (::xercesc::InputSource& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PackageLastModified (::xercesc::InputSource& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PackageLastModified (const ::xercesc::DOMDocument& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    PackageLastModified (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileLastModified (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileLastModified (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileLastModified (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileLastModified (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileLastModified (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileLastModified (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileLastModified (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileLastModified (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileLastModified (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileLastModified (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileLastModified (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileLastModified (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileLastModified (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    FileLastModified (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    Origin (const ::std::string& uri,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    Origin (const ::std::string& uri,
            ::xml_schema::error_handler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    Origin (const ::std::string& uri,
            ::xercesc::DOMErrorHandler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    Origin (::std::istream& is,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    Origin (::std::istream& is,
            ::xml_schema::error_handler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    Origin (::std::istream& is,
            ::xercesc::DOMErrorHandler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    Origin (::std::istream& is,
            const ::std::string& id,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    Origin (::std::istream& is,
            const ::std::string& id,
            ::xml_schema::error_handler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    Origin (::std::istream& is,
            const ::std::string& id,
            ::xercesc::DOMErrorHandler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    Origin (::xercesc::InputSource& is,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    Origin (::xercesc::InputSource& is,
            ::xml_schema::error_handler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    Origin (::xercesc::InputSource& is,
            ::xercesc::DOMErrorHandler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    Origin (const ::xercesc::DOMDocument& d,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    Origin (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventTrackOrigin (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventTrackOrigin (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventTrackOrigin (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventTrackOrigin (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventTrackOrigin (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventTrackOrigin (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventTrackOrigin (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventTrackOrigin (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventTrackOrigin (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventTrackOrigin (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventTrackOrigin (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventTrackOrigin (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventTrackOrigin (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    EventTrackOrigin (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    CreationTime (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    CreationTime (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    CreationTime (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    CreationTime (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    CreationTime (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    CreationTime (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    CreationTime (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    CreationTime (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    CreationTime (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    CreationTime (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    CreationTime (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    CreationTime (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    CreationTime (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    CreationTime (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartTimecode (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartTimecode (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartTimecode (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartTimecode (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartTimecode (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartTimecode (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartTimecode (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartTimecode (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartTimecode (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartTimecode (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartTimecode (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartTimecode (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartTimecode (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    StartTimecode (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    LinkedPackageID (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    LinkedPackageID (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    LinkedPackageID (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    LinkedPackageID (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    LinkedPackageID (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    LinkedPackageID (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    LinkedPackageID (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    LinkedPackageID (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    LinkedPackageID (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    LinkedPackageID (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    LinkedPackageID (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    LinkedPackageID (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    LinkedPackageID (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UMID32 >
    LinkedPackageID (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    Codec (const ::std::string& uri,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    Codec (const ::std::string& uri,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    Codec (const ::std::string& uri,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    Codec (::std::istream& is,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    Codec (::std::istream& is,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    Codec (::std::istream& is,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    Codec (::std::istream& is,
           const ::std::string& id,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    Codec (::std::istream& is,
           const ::std::string& id,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    Codec (::std::istream& is,
           const ::std::string& id,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    Codec (::xercesc::InputSource& is,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    Codec (::xercesc::InputSource& is,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    Codec (::xercesc::InputSource& is,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    Codec (const ::xercesc::DOMDocument& d,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    Codec (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ContainerFormat (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ContainerFormat (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ContainerFormat (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ContainerFormat (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ContainerFormat (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ContainerFormat (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ContainerFormat (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ContainerFormat (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ContainerFormat (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ContainerFormat (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ContainerFormat (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ContainerFormat (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ContainerFormat (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    ContainerFormat (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    IndexStartPosition (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    IndexStartPosition (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    IndexStartPosition (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    IndexStartPosition (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    IndexStartPosition (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    IndexStartPosition (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    IndexStartPosition (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    IndexStartPosition (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    IndexStartPosition (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    IndexStartPosition (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    IndexStartPosition (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    IndexStartPosition (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    IndexStartPosition (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    IndexStartPosition (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Length >
    IndexDuration (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    IndexDuration (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    IndexDuration (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Length >
    IndexDuration (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    IndexDuration (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    IndexDuration (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    IndexDuration (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    IndexDuration (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    IndexDuration (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Length >
    IndexDuration (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    IndexDuration (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    IndexDuration (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Length >
    IndexDuration (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    IndexDuration (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RegionAreaOfIPLicense (const ::std::string& uri,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RegionAreaOfIPLicense (const ::std::string& uri,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RegionAreaOfIPLicense (const ::std::string& uri,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RegionAreaOfIPLicense (::std::istream& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RegionAreaOfIPLicense (::std::istream& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RegionAreaOfIPLicense (::std::istream& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RegionAreaOfIPLicense (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RegionAreaOfIPLicense (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RegionAreaOfIPLicense (::std::istream& is,
                           const ::std::string& id,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RegionAreaOfIPLicense (::xercesc::InputSource& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RegionAreaOfIPLicense (::xercesc::InputSource& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RegionAreaOfIPLicense (::xercesc::InputSource& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RegionAreaOfIPLicense (const ::xercesc::DOMDocument& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RegionAreaOfIPLicense (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PlaceName (const ::std::string& uri,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PlaceName (const ::std::string& uri,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PlaceName (const ::std::string& uri,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PlaceName (::std::istream& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PlaceName (::std::istream& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PlaceName (::std::istream& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PlaceName (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PlaceName (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PlaceName (::std::istream& is,
               const ::std::string& id,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PlaceName (::xercesc::InputSource& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PlaceName (::xercesc::InputSource& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PlaceName (::xercesc::InputSource& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PlaceName (const ::xercesc::DOMDocument& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PlaceName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    GeographicalCoordinates (const ::std::string& uri,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    GeographicalCoordinates (const ::std::string& uri,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    GeographicalCoordinates (const ::std::string& uri,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    GeographicalCoordinates (::std::istream& is,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    GeographicalCoordinates (::std::istream& is,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    GeographicalCoordinates (::std::istream& is,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    GeographicalCoordinates (::std::istream& is,
                             const ::std::string& id,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    GeographicalCoordinates (::std::istream& is,
                             const ::std::string& id,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    GeographicalCoordinates (::std::istream& is,
                             const ::std::string& id,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    GeographicalCoordinates (::xercesc::InputSource& is,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    GeographicalCoordinates (::xercesc::InputSource& is,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    GeographicalCoordinates (::xercesc::InputSource& is,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    GeographicalCoordinates (const ::xercesc::DOMDocument& d,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::DataStream >
    GeographicalCoordinates (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AstronomicalBodyName (const ::std::string& uri,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AstronomicalBodyName (const ::std::string& uri,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AstronomicalBodyName (const ::std::string& uri,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AstronomicalBodyName (::std::istream& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AstronomicalBodyName (::std::istream& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AstronomicalBodyName (::std::istream& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AstronomicalBodyName (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AstronomicalBodyName (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AstronomicalBodyName (::std::istream& is,
                          const ::std::string& id,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AstronomicalBodyName (::xercesc::InputSource& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AstronomicalBodyName (::xercesc::InputSource& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AstronomicalBodyName (::xercesc::InputSource& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AstronomicalBodyName (const ::xercesc::DOMDocument& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    AstronomicalBodyName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteNumber (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteNumber (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteNumber (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteNumber (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteNumber (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteNumber (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteNumber (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteNumber (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteNumber (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteNumber (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteNumber (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteNumber (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteNumber (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteNumber (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    ClipCreationDateTime (const ::std::string& uri,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    ClipCreationDateTime (const ::std::string& uri,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    ClipCreationDateTime (const ::std::string& uri,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    ClipCreationDateTime (::std::istream& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    ClipCreationDateTime (::std::istream& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    ClipCreationDateTime (::std::istream& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    ClipCreationDateTime (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    ClipCreationDateTime (::std::istream& is,
                          const ::std::string& id,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    ClipCreationDateTime (::std::istream& is,
                          const ::std::string& id,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    ClipCreationDateTime (::xercesc::InputSource& is,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    ClipCreationDateTime (::xercesc::InputSource& is,
                          ::xml_schema::error_handler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    ClipCreationDateTime (::xercesc::InputSource& is,
                          ::xercesc::DOMErrorHandler& eh,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    ClipCreationDateTime (const ::xercesc::DOMDocument& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    ClipCreationDateTime (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                          ::xml_schema::flags f = 0,
                          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetNumber (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetNumber (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetNumber (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetNumber (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetNumber (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetNumber (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetNumber (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetNumber (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetNumber (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetNumber (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetNumber (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetNumber (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetNumber (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetNumber (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetName (const ::std::string& uri,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetName (const ::std::string& uri,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetName (const ::std::string& uri,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetName (::std::istream& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetName (::std::istream& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetName (::std::istream& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetName (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetName (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetName (::std::istream& is,
                const ::std::string& id,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetName (::xercesc::InputSource& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetName (::xercesc::InputSource& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetName (::xercesc::InputSource& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetName (const ::xercesc::DOMDocument& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StreetName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalTown (const ::std::string& uri,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalTown (const ::std::string& uri,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalTown (const ::std::string& uri,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalTown (::std::istream& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalTown (::std::istream& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalTown (::std::istream& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalTown (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalTown (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalTown (::std::istream& is,
                const ::std::string& id,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalTown (::xercesc::InputSource& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalTown (::xercesc::InputSource& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalTown (::xercesc::InputSource& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalTown (const ::xercesc::DOMDocument& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalTown (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    City (const ::std::string& uri,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    City (const ::std::string& uri,
          ::xml_schema::error_handler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    City (const ::std::string& uri,
          ::xercesc::DOMErrorHandler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    City (::std::istream& is,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    City (::std::istream& is,
          ::xml_schema::error_handler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    City (::std::istream& is,
          ::xercesc::DOMErrorHandler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    City (::std::istream& is,
          const ::std::string& id,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    City (::std::istream& is,
          const ::std::string& id,
          ::xml_schema::error_handler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    City (::std::istream& is,
          const ::std::string& id,
          ::xercesc::DOMErrorHandler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    City (::xercesc::InputSource& is,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    City (::xercesc::InputSource& is,
          ::xml_schema::error_handler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    City (::xercesc::InputSource& is,
          ::xercesc::DOMErrorHandler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    City (const ::xercesc::DOMDocument& d,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    City (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StateProvinceCounty (const ::std::string& uri,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StateProvinceCounty (const ::std::string& uri,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StateProvinceCounty (const ::std::string& uri,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StateProvinceCounty (::std::istream& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StateProvinceCounty (::std::istream& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StateProvinceCounty (::std::istream& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StateProvinceCounty (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StateProvinceCounty (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StateProvinceCounty (::std::istream& is,
                         const ::std::string& id,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StateProvinceCounty (::xercesc::InputSource& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StateProvinceCounty (::xercesc::InputSource& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StateProvinceCounty (::xercesc::InputSource& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StateProvinceCounty (const ::xercesc::DOMDocument& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    StateProvinceCounty (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalCode (const ::std::string& uri,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalCode (const ::std::string& uri,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalCode (const ::std::string& uri,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalCode (::std::istream& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalCode (::std::istream& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalCode (::std::istream& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalCode (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalCode (::std::istream& is,
                const ::std::string& id,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalCode (::std::istream& is,
                const ::std::string& id,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalCode (::xercesc::InputSource& is,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalCode (::xercesc::InputSource& is,
                ::xml_schema::error_handler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalCode (::xercesc::InputSource& is,
                ::xercesc::DOMErrorHandler& eh,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalCode (const ::xercesc::DOMDocument& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    PostalCode (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                ::xml_schema::flags f = 0,
                const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Country (const ::std::string& uri,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Country (const ::std::string& uri,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Country (const ::std::string& uri,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Country (::std::istream& is,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Country (::std::istream& is,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Country (::std::istream& is,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Country (::std::istream& is,
             const ::std::string& id,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Country (::std::istream& is,
             const ::std::string& id,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Country (::std::istream& is,
             const ::std::string& id,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Country (::xercesc::InputSource& is,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Country (::xercesc::InputSource& is,
             ::xml_schema::error_handler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Country (::xercesc::InputSource& is,
             ::xercesc::DOMErrorHandler& eh,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Country (const ::xercesc::DOMDocument& d,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    Country (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
             ::xml_schema::flags f = 0,
             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteName (const ::std::string& uri,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteName (const ::std::string& uri,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteName (const ::std::string& uri,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteName (::std::istream& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteName (::std::istream& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteName (::std::istream& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteName (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteName (::std::istream& is,
                   const ::std::string& id,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteName (::std::istream& is,
                   const ::std::string& id,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteName (::xercesc::InputSource& is,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteName (::xercesc::InputSource& is,
                   ::xml_schema::error_handler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteName (::xercesc::InputSource& is,
                   ::xercesc::DOMErrorHandler& eh,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteName (const ::xercesc::DOMDocument& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    RoomSuiteName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                   ::xml_schema::flags f = 0,
                   const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BuildingName (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BuildingName (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BuildingName (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BuildingName (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BuildingName (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BuildingName (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BuildingName (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BuildingName (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BuildingName (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BuildingName (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BuildingName (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BuildingName (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BuildingName (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    BuildingName (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    TelephoneNumber (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    TelephoneNumber (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    TelephoneNumber (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    TelephoneNumber (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    TelephoneNumber (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    TelephoneNumber (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    TelephoneNumber (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    TelephoneNumber (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    TelephoneNumber (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    TelephoneNumber (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    TelephoneNumber (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    TelephoneNumber (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    TelephoneNumber (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    TelephoneNumber (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FaxNumber (const ::std::string& uri,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FaxNumber (const ::std::string& uri,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FaxNumber (const ::std::string& uri,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FaxNumber (::std::istream& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FaxNumber (::std::istream& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FaxNumber (::std::istream& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FaxNumber (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FaxNumber (::std::istream& is,
               const ::std::string& id,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FaxNumber (::std::istream& is,
               const ::std::string& id,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FaxNumber (::xercesc::InputSource& is,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FaxNumber (::xercesc::InputSource& is,
               ::xml_schema::error_handler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FaxNumber (::xercesc::InputSource& is,
               ::xercesc::DOMErrorHandler& eh,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FaxNumber (const ::xercesc::DOMDocument& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FaxNumber (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
               ::xml_schema::flags f = 0,
               const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EmailAddress (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EmailAddress (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EmailAddress (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EmailAddress (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EmailAddress (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EmailAddress (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EmailAddress (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EmailAddress (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EmailAddress (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EmailAddress (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EmailAddress (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EmailAddress (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EmailAddress (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    EmailAddress (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    CentralTelephoneNumber (const ::std::string& uri,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    CentralTelephoneNumber (const ::std::string& uri,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    CentralTelephoneNumber (const ::std::string& uri,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    CentralTelephoneNumber (::std::istream& is,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    CentralTelephoneNumber (::std::istream& is,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    CentralTelephoneNumber (::std::istream& is,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    CentralTelephoneNumber (::std::istream& is,
                            const ::std::string& id,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    CentralTelephoneNumber (::std::istream& is,
                            const ::std::string& id,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    CentralTelephoneNumber (::std::istream& is,
                            const ::std::string& id,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    CentralTelephoneNumber (::xercesc::InputSource& is,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    CentralTelephoneNumber (::xercesc::InputSource& is,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    CentralTelephoneNumber (::xercesc::InputSource& is,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    CentralTelephoneNumber (const ::xercesc::DOMDocument& d,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    CentralTelephoneNumber (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    MobileTelephoneNumber (const ::std::string& uri,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    MobileTelephoneNumber (const ::std::string& uri,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    MobileTelephoneNumber (const ::std::string& uri,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    MobileTelephoneNumber (::std::istream& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    MobileTelephoneNumber (::std::istream& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    MobileTelephoneNumber (::std::istream& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    MobileTelephoneNumber (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    MobileTelephoneNumber (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    MobileTelephoneNumber (::std::istream& is,
                           const ::std::string& id,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    MobileTelephoneNumber (::xercesc::InputSource& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    MobileTelephoneNumber (::xercesc::InputSource& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    MobileTelephoneNumber (::xercesc::InputSource& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    MobileTelephoneNumber (const ::xercesc::DOMDocument& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    MobileTelephoneNumber (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactWebPage (const ::std::string& uri,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactWebPage (const ::std::string& uri,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactWebPage (const ::std::string& uri,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactWebPage (::std::istream& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactWebPage (::std::istream& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactWebPage (::std::istream& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactWebPage (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactWebPage (::std::istream& is,
                    const ::std::string& id,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactWebPage (::std::istream& is,
                    const ::std::string& id,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactWebPage (::xercesc::InputSource& is,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactWebPage (::xercesc::InputSource& is,
                    ::xml_schema::error_handler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactWebPage (::xercesc::InputSource& is,
                    ::xercesc::DOMErrorHandler& eh,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactWebPage (const ::xercesc::DOMDocument& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    ContactWebPage (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                    ::xml_schema::flags f = 0,
                    const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationDescription (const ::std::string& uri,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationDescription (const ::std::string& uri,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationDescription (const ::std::string& uri,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationDescription (::std::istream& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationDescription (::std::istream& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationDescription (::std::istream& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationDescription (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationDescription (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationDescription (::std::istream& is,
                         const ::std::string& id,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationDescription (::xercesc::InputSource& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationDescription (::xercesc::InputSource& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationDescription (::xercesc::InputSource& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationDescription (const ::xercesc::DOMDocument& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationDescription (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationKind (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationKind (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationKind (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationKind (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationKind (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationKind (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationKind (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationKind (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationKind (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationKind (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationKind (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationKind (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationKind (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    LocationKind (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventStartDateTime (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventStartDateTime (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventStartDateTime (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventStartDateTime (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventStartDateTime (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventStartDateTime (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventStartDateTime (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventStartDateTime (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventStartDateTime (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventStartDateTime (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventStartDateTime (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventStartDateTime (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventStartDateTime (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventStartDateTime (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventEndDateTime (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventEndDateTime (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventEndDateTime (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventEndDateTime (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventEndDateTime (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventEndDateTime (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventEndDateTime (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventEndDateTime (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventEndDateTime (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventEndDateTime (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventEndDateTime (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventEndDateTime (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventEndDateTime (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    EventEndDateTime (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    KeypointPosition (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    KeypointPosition (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    KeypointPosition (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    KeypointPosition (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    KeypointPosition (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    KeypointPosition (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    KeypointPosition (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    KeypointPosition (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    KeypointPosition (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    KeypointPosition (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    KeypointPosition (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    KeypointPosition (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    KeypointPosition (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    KeypointPosition (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    ShotStartPosition (const ::std::string& uri,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    ShotStartPosition (const ::std::string& uri,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    ShotStartPosition (const ::std::string& uri,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    ShotStartPosition (::std::istream& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    ShotStartPosition (::std::istream& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    ShotStartPosition (::std::istream& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    ShotStartPosition (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    ShotStartPosition (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    ShotStartPosition (::std::istream& is,
                       const ::std::string& id,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    ShotStartPosition (::xercesc::InputSource& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    ShotStartPosition (::xercesc::InputSource& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    ShotStartPosition (::xercesc::InputSource& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Position >
    ShotStartPosition (const ::xercesc::DOMDocument& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Position >
    ShotStartPosition (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FestivalDateTime (const ::std::string& uri,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FestivalDateTime (const ::std::string& uri,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FestivalDateTime (const ::std::string& uri,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FestivalDateTime (::std::istream& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FestivalDateTime (::std::istream& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FestivalDateTime (::std::istream& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FestivalDateTime (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FestivalDateTime (::std::istream& is,
                      const ::std::string& id,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FestivalDateTime (::std::istream& is,
                      const ::std::string& id,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FestivalDateTime (::xercesc::InputSource& is,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FestivalDateTime (::xercesc::InputSource& is,
                      ::xml_schema::error_handler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FestivalDateTime (::xercesc::InputSource& is,
                      ::xercesc::DOMErrorHandler& eh,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FestivalDateTime (const ::xercesc::DOMDocument& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::ISO7bitCharString >
    FestivalDateTime (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                      ::xml_schema::flags f = 0,
                      const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TimePeriodKeyword (const ::std::string& uri,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TimePeriodKeyword (const ::std::string& uri,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TimePeriodKeyword (const ::std::string& uri,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TimePeriodKeyword (::std::istream& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TimePeriodKeyword (::std::istream& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TimePeriodKeyword (::std::istream& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TimePeriodKeyword (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TimePeriodKeyword (::std::istream& is,
                       const ::std::string& id,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TimePeriodKeyword (::std::istream& is,
                       const ::std::string& id,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TimePeriodKeyword (::xercesc::InputSource& is,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TimePeriodKeyword (::xercesc::InputSource& is,
                       ::xml_schema::error_handler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TimePeriodKeyword (::xercesc::InputSource& is,
                       ::xercesc::DOMErrorHandler& eh,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TimePeriodKeyword (const ::xercesc::DOMDocument& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    TimePeriodKeyword (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                       ::xml_schema::flags f = 0,
                       const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    SettingDateTime (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    SettingDateTime (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    SettingDateTime (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    SettingDateTime (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    SettingDateTime (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    SettingDateTime (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    SettingDateTime (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    SettingDateTime (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    SettingDateTime (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    SettingDateTime (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    SettingDateTime (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    SettingDateTime (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    SettingDateTime (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    SettingDateTime (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SettingPeriodDescription (const ::std::string& uri,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SettingPeriodDescription (const ::std::string& uri,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SettingPeriodDescription (const ::std::string& uri,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SettingPeriodDescription (::std::istream& is,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SettingPeriodDescription (::std::istream& is,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SettingPeriodDescription (::std::istream& is,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SettingPeriodDescription (::std::istream& is,
                              const ::std::string& id,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SettingPeriodDescription (::std::istream& is,
                              const ::std::string& id,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SettingPeriodDescription (::std::istream& is,
                              const ::std::string& id,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SettingPeriodDescription (::xercesc::InputSource& is,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SettingPeriodDescription (::xercesc::InputSource& is,
                              ::xml_schema::error_handler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SettingPeriodDescription (::xercesc::InputSource& is,
                              ::xercesc::DOMErrorHandler& eh,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SettingPeriodDescription (const ::xercesc::DOMDocument& d,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UTF16CharString >
    SettingPeriodDescription (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                              ::xml_schema::flags f = 0,
                              const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStartDateTime (const ::std::string& uri,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStartDateTime (const ::std::string& uri,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStartDateTime (const ::std::string& uri,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStartDateTime (::std::istream& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStartDateTime (::std::istream& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStartDateTime (::std::istream& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStartDateTime (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStartDateTime (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStartDateTime (::std::istream& is,
                         const ::std::string& id,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStartDateTime (::xercesc::InputSource& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStartDateTime (::xercesc::InputSource& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStartDateTime (::xercesc::InputSource& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStartDateTime (const ::xercesc::DOMDocument& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStartDateTime (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStopDateTime (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStopDateTime (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStopDateTime (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStopDateTime (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStopDateTime (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStopDateTime (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStopDateTime (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStopDateTime (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStopDateTime (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStopDateTime (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStopDateTime (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStopDateTime (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStopDateTime (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::TimestampType >
    RightsStopDateTime (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ShotDuration (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ShotDuration (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ShotDuration (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ShotDuration (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ShotDuration (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ShotDuration (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ShotDuration (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ShotDuration (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ShotDuration (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ShotDuration (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ShotDuration (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ShotDuration (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ShotDuration (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::Length >
    ShotDuration (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Rsiz (const ::std::string& uri,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Rsiz (const ::std::string& uri,
          ::xml_schema::error_handler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Rsiz (const ::std::string& uri,
          ::xercesc::DOMErrorHandler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Rsiz (::std::istream& is,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Rsiz (::std::istream& is,
          ::xml_schema::error_handler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Rsiz (::std::istream& is,
          ::xercesc::DOMErrorHandler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Rsiz (::std::istream& is,
          const ::std::string& id,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Rsiz (::std::istream& is,
          const ::std::string& id,
          ::xml_schema::error_handler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Rsiz (::std::istream& is,
          const ::std::string& id,
          ::xercesc::DOMErrorHandler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Rsiz (::xercesc::InputSource& is,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Rsiz (::xercesc::InputSource& is,
          ::xml_schema::error_handler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Rsiz (::xercesc::InputSource& is,
          ::xercesc::DOMErrorHandler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Rsiz (const ::xercesc::DOMDocument& d,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Rsiz (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Xsiz (const ::std::string& uri,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Xsiz (const ::std::string& uri,
          ::xml_schema::error_handler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Xsiz (const ::std::string& uri,
          ::xercesc::DOMErrorHandler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Xsiz (::std::istream& is,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Xsiz (::std::istream& is,
          ::xml_schema::error_handler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Xsiz (::std::istream& is,
          ::xercesc::DOMErrorHandler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Xsiz (::std::istream& is,
          const ::std::string& id,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Xsiz (::std::istream& is,
          const ::std::string& id,
          ::xml_schema::error_handler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Xsiz (::std::istream& is,
          const ::std::string& id,
          ::xercesc::DOMErrorHandler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Xsiz (::xercesc::InputSource& is,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Xsiz (::xercesc::InputSource& is,
          ::xml_schema::error_handler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Xsiz (::xercesc::InputSource& is,
          ::xercesc::DOMErrorHandler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Xsiz (const ::xercesc::DOMDocument& d,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Xsiz (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Ysiz (const ::std::string& uri,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Ysiz (const ::std::string& uri,
          ::xml_schema::error_handler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Ysiz (const ::std::string& uri,
          ::xercesc::DOMErrorHandler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Ysiz (::std::istream& is,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Ysiz (::std::istream& is,
          ::xml_schema::error_handler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Ysiz (::std::istream& is,
          ::xercesc::DOMErrorHandler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Ysiz (::std::istream& is,
          const ::std::string& id,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Ysiz (::std::istream& is,
          const ::std::string& id,
          ::xml_schema::error_handler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Ysiz (::std::istream& is,
          const ::std::string& id,
          ::xercesc::DOMErrorHandler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Ysiz (::xercesc::InputSource& is,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Ysiz (::xercesc::InputSource& is,
          ::xml_schema::error_handler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Ysiz (::xercesc::InputSource& is,
          ::xercesc::DOMErrorHandler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Ysiz (const ::xercesc::DOMDocument& d,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    Ysiz (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XOsiz (const ::std::string& uri,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XOsiz (const ::std::string& uri,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XOsiz (const ::std::string& uri,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XOsiz (::std::istream& is,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XOsiz (::std::istream& is,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XOsiz (::std::istream& is,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XOsiz (::std::istream& is,
           const ::std::string& id,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XOsiz (::std::istream& is,
           const ::std::string& id,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XOsiz (::std::istream& is,
           const ::std::string& id,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XOsiz (::xercesc::InputSource& is,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XOsiz (::xercesc::InputSource& is,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XOsiz (::xercesc::InputSource& is,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XOsiz (const ::xercesc::DOMDocument& d,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XOsiz (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YOsiz (const ::std::string& uri,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YOsiz (const ::std::string& uri,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YOsiz (const ::std::string& uri,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YOsiz (::std::istream& is,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YOsiz (::std::istream& is,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YOsiz (::std::istream& is,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YOsiz (::std::istream& is,
           const ::std::string& id,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YOsiz (::std::istream& is,
           const ::std::string& id,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YOsiz (::std::istream& is,
           const ::std::string& id,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YOsiz (::xercesc::InputSource& is,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YOsiz (::xercesc::InputSource& is,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YOsiz (::xercesc::InputSource& is,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YOsiz (const ::xercesc::DOMDocument& d,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YOsiz (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTsiz (const ::std::string& uri,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTsiz (const ::std::string& uri,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTsiz (const ::std::string& uri,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTsiz (::std::istream& is,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTsiz (::std::istream& is,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTsiz (::std::istream& is,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTsiz (::std::istream& is,
           const ::std::string& id,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTsiz (::std::istream& is,
           const ::std::string& id,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTsiz (::std::istream& is,
           const ::std::string& id,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTsiz (::xercesc::InputSource& is,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTsiz (::xercesc::InputSource& is,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTsiz (::xercesc::InputSource& is,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTsiz (const ::xercesc::DOMDocument& d,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTsiz (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTsiz (const ::std::string& uri,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTsiz (const ::std::string& uri,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTsiz (const ::std::string& uri,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTsiz (::std::istream& is,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTsiz (::std::istream& is,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTsiz (::std::istream& is,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTsiz (::std::istream& is,
           const ::std::string& id,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTsiz (::std::istream& is,
           const ::std::string& id,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTsiz (::std::istream& is,
           const ::std::string& id,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTsiz (::xercesc::InputSource& is,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTsiz (::xercesc::InputSource& is,
           ::xml_schema::error_handler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTsiz (::xercesc::InputSource& is,
           ::xercesc::DOMErrorHandler& eh,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTsiz (const ::xercesc::DOMDocument& d,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTsiz (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
           ::xml_schema::flags f = 0,
           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTOsiz (const ::std::string& uri,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTOsiz (const ::std::string& uri,
            ::xml_schema::error_handler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTOsiz (const ::std::string& uri,
            ::xercesc::DOMErrorHandler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTOsiz (::std::istream& is,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTOsiz (::std::istream& is,
            ::xml_schema::error_handler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTOsiz (::std::istream& is,
            ::xercesc::DOMErrorHandler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTOsiz (::std::istream& is,
            const ::std::string& id,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTOsiz (::std::istream& is,
            const ::std::string& id,
            ::xml_schema::error_handler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTOsiz (::std::istream& is,
            const ::std::string& id,
            ::xercesc::DOMErrorHandler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTOsiz (::xercesc::InputSource& is,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTOsiz (::xercesc::InputSource& is,
            ::xml_schema::error_handler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTOsiz (::xercesc::InputSource& is,
            ::xercesc::DOMErrorHandler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTOsiz (const ::xercesc::DOMDocument& d,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    XTOsiz (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTOsiz (const ::std::string& uri,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTOsiz (const ::std::string& uri,
            ::xml_schema::error_handler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTOsiz (const ::std::string& uri,
            ::xercesc::DOMErrorHandler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTOsiz (::std::istream& is,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTOsiz (::std::istream& is,
            ::xml_schema::error_handler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTOsiz (::std::istream& is,
            ::xercesc::DOMErrorHandler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTOsiz (::std::istream& is,
            const ::std::string& id,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTOsiz (::std::istream& is,
            const ::std::string& id,
            ::xml_schema::error_handler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTOsiz (::std::istream& is,
            const ::std::string& id,
            ::xercesc::DOMErrorHandler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTOsiz (::xercesc::InputSource& is,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTOsiz (::xercesc::InputSource& is,
            ::xml_schema::error_handler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTOsiz (::xercesc::InputSource& is,
            ::xercesc::DOMErrorHandler& eh,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTOsiz (const ::xercesc::DOMDocument& d,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt32 >
    YTOsiz (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
            ::xml_schema::flags f = 0,
            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Csiz (const ::std::string& uri,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Csiz (const ::std::string& uri,
          ::xml_schema::error_handler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Csiz (const ::std::string& uri,
          ::xercesc::DOMErrorHandler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Csiz (::std::istream& is,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Csiz (::std::istream& is,
          ::xml_schema::error_handler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Csiz (::std::istream& is,
          ::xercesc::DOMErrorHandler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Csiz (::std::istream& is,
          const ::std::string& id,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Csiz (::std::istream& is,
          const ::std::string& id,
          ::xml_schema::error_handler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Csiz (::std::istream& is,
          const ::std::string& id,
          ::xercesc::DOMErrorHandler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Csiz (::xercesc::InputSource& is,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Csiz (::xercesc::InputSource& is,
          ::xml_schema::error_handler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Csiz (::xercesc::InputSource& is,
          ::xercesc::DOMErrorHandler& eh,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Csiz (const ::xercesc::DOMDocument& d,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UInt16 >
    Csiz (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
          ::xml_schema::flags f = 0,
          const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::PictureComponentSizing >
    PictureComponentSizing_ (const ::std::string& uri,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PictureComponentSizing >
    PictureComponentSizing_ (const ::std::string& uri,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PictureComponentSizing >
    PictureComponentSizing_ (const ::std::string& uri,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::PictureComponentSizing >
    PictureComponentSizing_ (::std::istream& is,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PictureComponentSizing >
    PictureComponentSizing_ (::std::istream& is,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PictureComponentSizing >
    PictureComponentSizing_ (::std::istream& is,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PictureComponentSizing >
    PictureComponentSizing_ (::std::istream& is,
                             const ::std::string& id,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PictureComponentSizing >
    PictureComponentSizing_ (::std::istream& is,
                             const ::std::string& id,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PictureComponentSizing >
    PictureComponentSizing_ (::std::istream& is,
                             const ::std::string& id,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::PictureComponentSizing >
    PictureComponentSizing_ (::xercesc::InputSource& is,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PictureComponentSizing >
    PictureComponentSizing_ (::xercesc::InputSource& is,
                             ::xml_schema::error_handler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PictureComponentSizing >
    PictureComponentSizing_ (::xercesc::InputSource& is,
                             ::xercesc::DOMErrorHandler& eh,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::PictureComponentSizing >
    PictureComponentSizing_ (const ::xercesc::DOMDocument& d,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::PictureComponentSizing >
    PictureComponentSizing_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                             ::xml_schema::flags f = 0,
                             const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s422m::types::J2KCodingStyleDefault >
    CodingStyleDefault (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s422m::types::J2KCodingStyleDefault >
    CodingStyleDefault (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s422m::types::J2KCodingStyleDefault >
    CodingStyleDefault (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s422m::types::J2KCodingStyleDefault >
    CodingStyleDefault (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s422m::types::J2KCodingStyleDefault >
    CodingStyleDefault (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s422m::types::J2KCodingStyleDefault >
    CodingStyleDefault (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s422m::types::J2KCodingStyleDefault >
    CodingStyleDefault (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s422m::types::J2KCodingStyleDefault >
    CodingStyleDefault (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s422m::types::J2KCodingStyleDefault >
    CodingStyleDefault (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s422m::types::J2KCodingStyleDefault >
    CodingStyleDefault (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s422m::types::J2KCodingStyleDefault >
    CodingStyleDefault (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s422m::types::J2KCodingStyleDefault >
    CodingStyleDefault (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s422m::types::J2KCodingStyleDefault >
    CodingStyleDefault (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s422m::types::J2KCodingStyleDefault >
    CodingStyleDefault (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s422m::types::J2KQuantisationDefault >
    QuantizationDefault (const ::std::string& uri,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s422m::types::J2KQuantisationDefault >
    QuantizationDefault (const ::std::string& uri,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s422m::types::J2KQuantisationDefault >
    QuantizationDefault (const ::std::string& uri,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s422m::types::J2KQuantisationDefault >
    QuantizationDefault (::std::istream& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s422m::types::J2KQuantisationDefault >
    QuantizationDefault (::std::istream& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s422m::types::J2KQuantisationDefault >
    QuantizationDefault (::std::istream& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s422m::types::J2KQuantisationDefault >
    QuantizationDefault (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s422m::types::J2KQuantisationDefault >
    QuantizationDefault (::std::istream& is,
                         const ::std::string& id,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s422m::types::J2KQuantisationDefault >
    QuantizationDefault (::std::istream& is,
                         const ::std::string& id,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s422m::types::J2KQuantisationDefault >
    QuantizationDefault (::xercesc::InputSource& is,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s422m::types::J2KQuantisationDefault >
    QuantizationDefault (::xercesc::InputSource& is,
                         ::xml_schema::error_handler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s422m::types::J2KQuantisationDefault >
    QuantizationDefault (::xercesc::InputSource& is,
                         ::xercesc::DOMErrorHandler& eh,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s422m::types::J2KQuantisationDefault >
    QuantizationDefault (const ::xercesc::DOMDocument& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s422m::types::J2KQuantisationDefault >
    QuantizationDefault (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                         ::xml_schema::flags f = 0,
                         const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::properties::S335M::CryptographicContextObject >
    CryptographicContextObject_ (const ::std::string& uri,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CryptographicContextObject >
    CryptographicContextObject_ (const ::std::string& uri,
                                 ::xml_schema::error_handler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CryptographicContextObject >
    CryptographicContextObject_ (const ::std::string& uri,
                                 ::xercesc::DOMErrorHandler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::properties::S335M::CryptographicContextObject >
    CryptographicContextObject_ (::std::istream& is,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CryptographicContextObject >
    CryptographicContextObject_ (::std::istream& is,
                                 ::xml_schema::error_handler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CryptographicContextObject >
    CryptographicContextObject_ (::std::istream& is,
                                 ::xercesc::DOMErrorHandler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CryptographicContextObject >
    CryptographicContextObject_ (::std::istream& is,
                                 const ::std::string& id,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CryptographicContextObject >
    CryptographicContextObject_ (::std::istream& is,
                                 const ::std::string& id,
                                 ::xml_schema::error_handler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CryptographicContextObject >
    CryptographicContextObject_ (::std::istream& is,
                                 const ::std::string& id,
                                 ::xercesc::DOMErrorHandler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::properties::S335M::CryptographicContextObject >
    CryptographicContextObject_ (::xercesc::InputSource& is,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CryptographicContextObject >
    CryptographicContextObject_ (::xercesc::InputSource& is,
                                 ::xml_schema::error_handler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CryptographicContextObject >
    CryptographicContextObject_ (::xercesc::InputSource& is,
                                 ::xercesc::DOMErrorHandler& eh,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::properties::S335M::CryptographicContextObject >
    CryptographicContextObject_ (const ::xercesc::DOMDocument& d,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::properties::S335M::CryptographicContextObject >
    CryptographicContextObject_ (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                                 ::xml_schema::flags f = 0,
                                 const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicContextID (const ::std::string& uri,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicContextID (const ::std::string& uri,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicContextID (const ::std::string& uri,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicContextID (::std::istream& is,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicContextID (::std::istream& is,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicContextID (::std::istream& is,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicContextID (::std::istream& is,
                            const ::std::string& id,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicContextID (::std::istream& is,
                            const ::std::string& id,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicContextID (::std::istream& is,
                            const ::std::string& id,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicContextID (::xercesc::InputSource& is,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicContextID (::xercesc::InputSource& is,
                            ::xml_schema::error_handler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicContextID (::xercesc::InputSource& is,
                            ::xercesc::DOMErrorHandler& eh,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicContextID (const ::xercesc::DOMDocument& d,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicContextID (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                            ::xml_schema::flags f = 0,
                            const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SourceContainerFormat (const ::std::string& uri,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SourceContainerFormat (const ::std::string& uri,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SourceContainerFormat (const ::std::string& uri,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SourceContainerFormat (::std::istream& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SourceContainerFormat (::std::istream& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SourceContainerFormat (::std::istream& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SourceContainerFormat (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SourceContainerFormat (::std::istream& is,
                           const ::std::string& id,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SourceContainerFormat (::std::istream& is,
                           const ::std::string& id,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SourceContainerFormat (::xercesc::InputSource& is,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SourceContainerFormat (::xercesc::InputSource& is,
                           ::xml_schema::error_handler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SourceContainerFormat (::xercesc::InputSource& is,
                           ::xercesc::DOMErrorHandler& eh,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SourceContainerFormat (const ::xercesc::DOMDocument& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    SourceContainerFormat (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                           ::xml_schema::flags f = 0,
                           const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    CipherAlgorithm (const ::std::string& uri,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    CipherAlgorithm (const ::std::string& uri,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    CipherAlgorithm (const ::std::string& uri,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    CipherAlgorithm (::std::istream& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    CipherAlgorithm (::std::istream& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    CipherAlgorithm (::std::istream& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    CipherAlgorithm (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    CipherAlgorithm (::std::istream& is,
                     const ::std::string& id,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    CipherAlgorithm (::std::istream& is,
                     const ::std::string& id,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    CipherAlgorithm (::xercesc::InputSource& is,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    CipherAlgorithm (::xercesc::InputSource& is,
                     ::xml_schema::error_handler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    CipherAlgorithm (::xercesc::InputSource& is,
                     ::xercesc::DOMErrorHandler& eh,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    CipherAlgorithm (const ::xercesc::DOMDocument& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    CipherAlgorithm (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                     ::xml_schema::flags f = 0,
                     const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    MICAlgorithm (const ::std::string& uri,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    MICAlgorithm (const ::std::string& uri,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    MICAlgorithm (const ::std::string& uri,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    MICAlgorithm (::std::istream& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    MICAlgorithm (::std::istream& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    MICAlgorithm (::std::istream& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    MICAlgorithm (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    MICAlgorithm (::std::istream& is,
                  const ::std::string& id,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    MICAlgorithm (::std::istream& is,
                  const ::std::string& id,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    MICAlgorithm (::xercesc::InputSource& is,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    MICAlgorithm (::xercesc::InputSource& is,
                  ::xml_schema::error_handler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    MICAlgorithm (::xercesc::InputSource& is,
                  ::xercesc::DOMErrorHandler& eh,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UL >
    MICAlgorithm (const ::xercesc::DOMDocument& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UL >
    MICAlgorithm (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                  ::xml_schema::flags f = 0,
                  const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse a URI or a local file.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicKeyID (const ::std::string& uri,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicKeyID (const ::std::string& uri,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicKeyID (const ::std::string& uri,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse std::istream.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicKeyID (::std::istream& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicKeyID (::std::istream& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicKeyID (::std::istream& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicKeyID (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicKeyID (::std::istream& is,
                        const ::std::string& id,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicKeyID (::std::istream& is,
                        const ::std::string& id,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::InputSource.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicKeyID (::xercesc::InputSource& is,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicKeyID (::xercesc::InputSource& is,
                        ::xml_schema::error_handler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicKeyID (::xercesc::InputSource& is,
                        ::xercesc::DOMErrorHandler& eh,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    // Parse xercesc::DOMDocument.
    //

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicKeyID (const ::xercesc::DOMDocument& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());

    ::std::auto_ptr< ::st434::s377m::types::UUID >
    CryptographicKeyID (::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                        ::xml_schema::flags f = 0,
                        const ::xml_schema::properties& p = ::xml_schema::properties ());
  }
}

#include <iosfwd>

#include <xercesc/dom/DOMDocument.hpp>
#include <xercesc/dom/DOMErrorHandler.hpp>
#include <xercesc/framework/XMLFormatter.hpp>

#include <xsd/cxx/xml/dom/auto-ptr.hxx>

namespace properties
{
  namespace S335M
  {
    // Serialize to std::ostream.
    //

    void
    SupplyContractNumber (::std::ostream& os,
                          const ::st434::s377m::types::ISO7bitCharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    SupplyContractNumber (::std::ostream& os,
                          const ::st434::s377m::types::ISO7bitCharString& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    SupplyContractNumber (::std::ostream& os,
                          const ::st434::s377m::types::ISO7bitCharString& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SupplyContractNumber (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::ISO7bitCharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    SupplyContractNumber (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::ISO7bitCharString& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    SupplyContractNumber (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::ISO7bitCharString& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SupplyContractNumber (::xercesc::DOMDocument& d,
                          const ::st434::s377m::types::ISO7bitCharString& x,
                          ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SupplyContractNumber (const ::st434::s377m::types::ISO7bitCharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ProgrammingGroupKind (::std::ostream& os,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    ProgrammingGroupKind (::std::ostream& os,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    ProgrammingGroupKind (::std::ostream& os,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ProgrammingGroupKind (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    ProgrammingGroupKind (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    ProgrammingGroupKind (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ProgrammingGroupKind (::xercesc::DOMDocument& d,
                          const ::st434::s377m::types::UTF16CharString& x,
                          ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ProgrammingGroupKind (const ::st434::s377m::types::UTF16CharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ProgrammingGroupTitle (::std::ostream& os,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    ProgrammingGroupTitle (::std::ostream& os,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    ProgrammingGroupTitle (::std::ostream& os,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ProgrammingGroupTitle (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    ProgrammingGroupTitle (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    ProgrammingGroupTitle (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ProgrammingGroupTitle (::xercesc::DOMDocument& d,
                           const ::st434::s377m::types::UTF16CharString& x,
                           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ProgrammingGroupTitle (const ::st434::s377m::types::UTF16CharString& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    EpisodicStartNumber (::std::ostream& os,
                         const ::st434::s377m::types::UInt16& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    EpisodicStartNumber (::std::ostream& os,
                         const ::st434::s377m::types::UInt16& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    EpisodicStartNumber (::std::ostream& os,
                         const ::st434::s377m::types::UInt16& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    EpisodicStartNumber (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::UInt16& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    EpisodicStartNumber (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::UInt16& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    EpisodicStartNumber (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::UInt16& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    EpisodicStartNumber (::xercesc::DOMDocument& d,
                         const ::st434::s377m::types::UInt16& x,
                         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    EpisodicStartNumber (const ::st434::s377m::types::UInt16& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    EpisodicEndNumber (::std::ostream& os,
                       const ::st434::s377m::types::UInt16& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    EpisodicEndNumber (::std::ostream& os,
                       const ::st434::s377m::types::UInt16& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    EpisodicEndNumber (::std::ostream& os,
                       const ::st434::s377m::types::UInt16& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    EpisodicEndNumber (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UInt16& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    EpisodicEndNumber (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UInt16& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    EpisodicEndNumber (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UInt16& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    EpisodicEndNumber (::xercesc::DOMDocument& d,
                       const ::st434::s377m::types::UInt16& x,
                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    EpisodicEndNumber (const ::st434::s377m::types::UInt16& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    CopyrightOwner (::std::ostream& os,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    CopyrightOwner (::std::ostream& os,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    CopyrightOwner (::std::ostream& os,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    CopyrightOwner (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    CopyrightOwner (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    CopyrightOwner (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    CopyrightOwner (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::UTF16CharString& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    CopyrightOwner (const ::st434::s377m::types::UTF16CharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    IntellectualPropertyDescription (::std::ostream& os,
                                     const ::st434::s377m::types::UTF16CharString& x, 
                                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                     const ::std::string& e = "UTF-8",
                                     ::xml_schema::flags f = 0);

    void
    IntellectualPropertyDescription (::std::ostream& os,
                                     const ::st434::s377m::types::UTF16CharString& x, 
                                     ::xml_schema::error_handler& eh,
                                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                     const ::std::string& e = "UTF-8",
                                     ::xml_schema::flags f = 0);

    void
    IntellectualPropertyDescription (::std::ostream& os,
                                     const ::st434::s377m::types::UTF16CharString& x, 
                                     ::xercesc::DOMErrorHandler& eh,
                                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                     const ::std::string& e = "UTF-8",
                                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    IntellectualPropertyDescription (::xercesc::XMLFormatTarget& ft,
                                     const ::st434::s377m::types::UTF16CharString& x, 
                                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                     const ::std::string& e = "UTF-8",
                                     ::xml_schema::flags f = 0);

    void
    IntellectualPropertyDescription (::xercesc::XMLFormatTarget& ft,
                                     const ::st434::s377m::types::UTF16CharString& x, 
                                     ::xml_schema::error_handler& eh,
                                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                     const ::std::string& e = "UTF-8",
                                     ::xml_schema::flags f = 0);

    void
    IntellectualPropertyDescription (::xercesc::XMLFormatTarget& ft,
                                     const ::st434::s377m::types::UTF16CharString& x, 
                                     ::xercesc::DOMErrorHandler& eh,
                                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                     const ::std::string& e = "UTF-8",
                                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    IntellectualPropertyDescription (::xercesc::DOMDocument& d,
                                     const ::st434::s377m::types::UTF16CharString& x,
                                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    IntellectualPropertyDescription (const ::st434::s377m::types::UTF16CharString& x, 
                                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    IntellectualPropertyRight (::std::ostream& os,
                               const ::st434::s377m::types::UTF16CharString& x, 
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    void
    IntellectualPropertyRight (::std::ostream& os,
                               const ::st434::s377m::types::UTF16CharString& x, 
                               ::xml_schema::error_handler& eh,
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    void
    IntellectualPropertyRight (::std::ostream& os,
                               const ::st434::s377m::types::UTF16CharString& x, 
                               ::xercesc::DOMErrorHandler& eh,
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    IntellectualPropertyRight (::xercesc::XMLFormatTarget& ft,
                               const ::st434::s377m::types::UTF16CharString& x, 
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    void
    IntellectualPropertyRight (::xercesc::XMLFormatTarget& ft,
                               const ::st434::s377m::types::UTF16CharString& x, 
                               ::xml_schema::error_handler& eh,
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    void
    IntellectualPropertyRight (::xercesc::XMLFormatTarget& ft,
                               const ::st434::s377m::types::UTF16CharString& x, 
                               ::xercesc::DOMErrorHandler& eh,
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    IntellectualPropertyRight (::xercesc::DOMDocument& d,
                               const ::st434::s377m::types::UTF16CharString& x,
                               ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    IntellectualPropertyRight (const ::st434::s377m::types::UTF16CharString& x, 
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Rightsholder (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    Rightsholder (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    Rightsholder (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Rightsholder (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    Rightsholder (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    Rightsholder (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Rightsholder (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UTF16CharString& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    Rightsholder (const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    RightsManagementAuthority (::std::ostream& os,
                               const ::st434::s377m::types::UTF16CharString& x, 
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    void
    RightsManagementAuthority (::std::ostream& os,
                               const ::st434::s377m::types::UTF16CharString& x, 
                               ::xml_schema::error_handler& eh,
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    void
    RightsManagementAuthority (::std::ostream& os,
                               const ::st434::s377m::types::UTF16CharString& x, 
                               ::xercesc::DOMErrorHandler& eh,
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    RightsManagementAuthority (::xercesc::XMLFormatTarget& ft,
                               const ::st434::s377m::types::UTF16CharString& x, 
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    void
    RightsManagementAuthority (::xercesc::XMLFormatTarget& ft,
                               const ::st434::s377m::types::UTF16CharString& x, 
                               ::xml_schema::error_handler& eh,
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    void
    RightsManagementAuthority (::xercesc::XMLFormatTarget& ft,
                               const ::st434::s377m::types::UTF16CharString& x, 
                               ::xercesc::DOMErrorHandler& eh,
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    RightsManagementAuthority (::xercesc::DOMDocument& d,
                               const ::st434::s377m::types::UTF16CharString& x,
                               ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    RightsManagementAuthority (const ::st434::s377m::types::UTF16CharString& x, 
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    MaxNumberOfUsages (::std::ostream& os,
                       const ::st434::s377m::types::UInt16& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    MaxNumberOfUsages (::std::ostream& os,
                       const ::st434::s377m::types::UInt16& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    MaxNumberOfUsages (::std::ostream& os,
                       const ::st434::s377m::types::UInt16& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    MaxNumberOfUsages (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UInt16& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    MaxNumberOfUsages (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UInt16& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    MaxNumberOfUsages (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UInt16& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    MaxNumberOfUsages (::xercesc::DOMDocument& d,
                       const ::st434::s377m::types::UInt16& x,
                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    MaxNumberOfUsages (const ::st434::s377m::types::UInt16& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    RightsCondition (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    RightsCondition (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    RightsCondition (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    RightsCondition (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    RightsCondition (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    RightsCondition (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    RightsCondition (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::UTF16CharString& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    RightsCondition (const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    RightsComment (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    RightsComment (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    RightsComment (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    RightsComment (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    RightsComment (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    RightsComment (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    RightsComment (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::UTF16CharString& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    RightsComment (const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    IdentificationIssuingAuthority (::std::ostream& os,
                                    const ::st434::s377m::types::UTF16CharString& x, 
                                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                    const ::std::string& e = "UTF-8",
                                    ::xml_schema::flags f = 0);

    void
    IdentificationIssuingAuthority (::std::ostream& os,
                                    const ::st434::s377m::types::UTF16CharString& x, 
                                    ::xml_schema::error_handler& eh,
                                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                    const ::std::string& e = "UTF-8",
                                    ::xml_schema::flags f = 0);

    void
    IdentificationIssuingAuthority (::std::ostream& os,
                                    const ::st434::s377m::types::UTF16CharString& x, 
                                    ::xercesc::DOMErrorHandler& eh,
                                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                    const ::std::string& e = "UTF-8",
                                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    IdentificationIssuingAuthority (::xercesc::XMLFormatTarget& ft,
                                    const ::st434::s377m::types::UTF16CharString& x, 
                                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                    const ::std::string& e = "UTF-8",
                                    ::xml_schema::flags f = 0);

    void
    IdentificationIssuingAuthority (::xercesc::XMLFormatTarget& ft,
                                    const ::st434::s377m::types::UTF16CharString& x, 
                                    ::xml_schema::error_handler& eh,
                                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                    const ::std::string& e = "UTF-8",
                                    ::xml_schema::flags f = 0);

    void
    IdentificationIssuingAuthority (::xercesc::XMLFormatTarget& ft,
                                    const ::st434::s377m::types::UTF16CharString& x, 
                                    ::xercesc::DOMErrorHandler& eh,
                                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                    const ::std::string& e = "UTF-8",
                                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    IdentificationIssuingAuthority (::xercesc::DOMDocument& d,
                                    const ::st434::s377m::types::UTF16CharString& x,
                                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    IdentificationIssuingAuthority (const ::st434::s377m::types::UTF16CharString& x, 
                                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PublishingOrganizationName (::std::ostream& os,
                                const ::st434::s377m::types::UTF16CharString& x, 
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    void
    PublishingOrganizationName (::std::ostream& os,
                                const ::st434::s377m::types::UTF16CharString& x, 
                                ::xml_schema::error_handler& eh,
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    void
    PublishingOrganizationName (::std::ostream& os,
                                const ::st434::s377m::types::UTF16CharString& x, 
                                ::xercesc::DOMErrorHandler& eh,
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PublishingOrganizationName (::xercesc::XMLFormatTarget& ft,
                                const ::st434::s377m::types::UTF16CharString& x, 
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    void
    PublishingOrganizationName (::xercesc::XMLFormatTarget& ft,
                                const ::st434::s377m::types::UTF16CharString& x, 
                                ::xml_schema::error_handler& eh,
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    void
    PublishingOrganizationName (::xercesc::XMLFormatTarget& ft,
                                const ::st434::s377m::types::UTF16CharString& x, 
                                ::xercesc::DOMErrorHandler& eh,
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PublishingOrganizationName (::xercesc::DOMDocument& d,
                                const ::st434::s377m::types::UTF16CharString& x,
                                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PublishingOrganizationName (const ::st434::s377m::types::UTF16CharString& x, 
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PublishingServiceName (::std::ostream& os,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    PublishingServiceName (::std::ostream& os,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    PublishingServiceName (::std::ostream& os,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PublishingServiceName (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    PublishingServiceName (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    PublishingServiceName (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PublishingServiceName (::xercesc::DOMDocument& d,
                           const ::st434::s377m::types::UTF16CharString& x,
                           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PublishingServiceName (const ::st434::s377m::types::UTF16CharString& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PublishingMediumName (::std::ostream& os,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    PublishingMediumName (::std::ostream& os,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    PublishingMediumName (::std::ostream& os,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PublishingMediumName (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    PublishingMediumName (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    PublishingMediumName (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PublishingMediumName (::xercesc::DOMDocument& d,
                          const ::st434::s377m::types::UTF16CharString& x,
                          ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PublishingMediumName (const ::st434::s377m::types::UTF16CharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PublishingRegionName (::std::ostream& os,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    PublishingRegionName (::std::ostream& os,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    PublishingRegionName (::std::ostream& os,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PublishingRegionName (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    PublishingRegionName (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    PublishingRegionName (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PublishingRegionName (::xercesc::DOMDocument& d,
                          const ::st434::s377m::types::UTF16CharString& x,
                          ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PublishingRegionName (const ::st434::s377m::types::UTF16CharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ContributionStatus (::std::ostream& os,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    ContributionStatus (::std::ostream& os,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    ContributionStatus (::std::ostream& os,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ContributionStatus (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    ContributionStatus (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    ContributionStatus (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ContributionStatus (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::UTF16CharString& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ContributionStatus (const ::st434::s377m::types::UTF16CharString& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    OrganizationKind (::std::ostream& os,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    OrganizationKind (::std::ostream& os,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    OrganizationKind (::std::ostream& os,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    OrganizationKind (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    OrganizationKind (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    OrganizationKind (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    OrganizationKind (::xercesc::DOMDocument& d,
                      const ::st434::s377m::types::UTF16CharString& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    OrganizationKind (const ::st434::s377m::types::UTF16CharString& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    JobFunction (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    JobFunction (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    JobFunction (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    JobFunction (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    JobFunction (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    JobFunction (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    JobFunction (::xercesc::DOMDocument& d,
                 const ::st434::s377m::types::UTF16CharString& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    JobFunction (const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    JobFunctionCode (::std::ostream& os,
                     const ::st434::s377m::types::ISO7bitCharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    JobFunctionCode (::std::ostream& os,
                     const ::st434::s377m::types::ISO7bitCharString& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    JobFunctionCode (::std::ostream& os,
                     const ::st434::s377m::types::ISO7bitCharString& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    JobFunctionCode (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::ISO7bitCharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    JobFunctionCode (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::ISO7bitCharString& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    JobFunctionCode (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::ISO7bitCharString& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    JobFunctionCode (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::ISO7bitCharString& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    JobFunctionCode (const ::st434::s377m::types::ISO7bitCharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    RoleName (::std::ostream& os,
              const ::st434::s377m::types::UTF16CharString& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    RoleName (::std::ostream& os,
              const ::st434::s377m::types::UTF16CharString& x, 
              ::xml_schema::error_handler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    RoleName (::std::ostream& os,
              const ::st434::s377m::types::UTF16CharString& x, 
              ::xercesc::DOMErrorHandler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    RoleName (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::UTF16CharString& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    RoleName (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::UTF16CharString& x, 
              ::xml_schema::error_handler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    RoleName (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::UTF16CharString& x, 
              ::xercesc::DOMErrorHandler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    RoleName (::xercesc::DOMDocument& d,
              const ::st434::s377m::types::UTF16CharString& x,
              ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    RoleName (const ::st434::s377m::types::UTF16CharString& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ContactDepartment (::std::ostream& os,
                       const ::st434::s377m::types::UTF16CharString& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ContactDepartment (::std::ostream& os,
                       const ::st434::s377m::types::UTF16CharString& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ContactDepartment (::std::ostream& os,
                       const ::st434::s377m::types::UTF16CharString& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ContactDepartment (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UTF16CharString& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ContactDepartment (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UTF16CharString& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ContactDepartment (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UTF16CharString& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ContactDepartment (::xercesc::DOMDocument& d,
                       const ::st434::s377m::types::UTF16CharString& x,
                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ContactDepartment (const ::st434::s377m::types::UTF16CharString& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    FamilyName (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    FamilyName (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    FamilyName (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    FamilyName (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    FamilyName (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    FamilyName (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    FamilyName (::xercesc::DOMDocument& d,
                const ::st434::s377m::types::UTF16CharString& x,
                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    FamilyName (const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    FirstGivenName (::std::ostream& os,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    FirstGivenName (::std::ostream& os,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    FirstGivenName (::std::ostream& os,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    FirstGivenName (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    FirstGivenName (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    FirstGivenName (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    FirstGivenName (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::UTF16CharString& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    FirstGivenName (const ::st434::s377m::types::UTF16CharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Salutation (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    Salutation (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    Salutation (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Salutation (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    Salutation (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    Salutation (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Salutation (::xercesc::DOMDocument& d,
                const ::st434::s377m::types::UTF16CharString& x,
                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    Salutation (const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    HonorsQualifications (::std::ostream& os,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    HonorsQualifications (::std::ostream& os,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    HonorsQualifications (::std::ostream& os,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    HonorsQualifications (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    HonorsQualifications (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    HonorsQualifications (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    HonorsQualifications (::xercesc::DOMDocument& d,
                          const ::st434::s377m::types::UTF16CharString& x,
                          ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    HonorsQualifications (const ::st434::s377m::types::UTF16CharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PersonDescription (::std::ostream& os,
                       const ::st434::s377m::types::UTF16CharString& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    PersonDescription (::std::ostream& os,
                       const ::st434::s377m::types::UTF16CharString& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    PersonDescription (::std::ostream& os,
                       const ::st434::s377m::types::UTF16CharString& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PersonDescription (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UTF16CharString& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    PersonDescription (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UTF16CharString& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    PersonDescription (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UTF16CharString& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PersonDescription (::xercesc::DOMDocument& d,
                       const ::st434::s377m::types::UTF16CharString& x,
                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PersonDescription (const ::st434::s377m::types::UTF16CharString& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    OtherGivenNames (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    OtherGivenNames (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    OtherGivenNames (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    OtherGivenNames (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    OtherGivenNames (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    OtherGivenNames (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    OtherGivenNames (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::UTF16CharString& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    OtherGivenNames (const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    AlternateName (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    AlternateName (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    AlternateName (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    AlternateName (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    AlternateName (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    AlternateName (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    AlternateName (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::UTF16CharString& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    AlternateName (const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    LinkingName (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    LinkingName (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    LinkingName (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    LinkingName (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    LinkingName (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    LinkingName (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    LinkingName (::xercesc::DOMDocument& d,
                 const ::st434::s377m::types::UTF16CharString& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    LinkingName (const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    NameSuffix (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    NameSuffix (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    NameSuffix (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    NameSuffix (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    NameSuffix (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    NameSuffix (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    NameSuffix (::xercesc::DOMDocument& d,
                const ::st434::s377m::types::UTF16CharString& x,
                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    NameSuffix (const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    FormerFamilyName (::std::ostream& os,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    FormerFamilyName (::std::ostream& os,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    FormerFamilyName (::std::ostream& os,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    FormerFamilyName (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    FormerFamilyName (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    FormerFamilyName (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    FormerFamilyName (::xercesc::DOMDocument& d,
                      const ::st434::s377m::types::UTF16CharString& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    FormerFamilyName (const ::st434::s377m::types::UTF16CharString& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Nationality (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    Nationality (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    Nationality (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Nationality (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    Nationality (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    Nationality (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Nationality (::xercesc::DOMDocument& d,
                 const ::st434::s377m::types::UTF16CharString& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    Nationality (const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Citizenship (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    Citizenship (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    Citizenship (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Citizenship (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    Citizenship (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    Citizenship (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Citizenship (::xercesc::DOMDocument& d,
                 const ::st434::s377m::types::UTF16CharString& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    Citizenship (const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    OrganizationMainName (::std::ostream& os,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    OrganizationMainName (::std::ostream& os,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    OrganizationMainName (::std::ostream& os,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    OrganizationMainName (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    OrganizationMainName (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    OrganizationMainName (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    OrganizationMainName (::xercesc::DOMDocument& d,
                          const ::st434::s377m::types::UTF16CharString& x,
                          ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    OrganizationMainName (const ::st434::s377m::types::UTF16CharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    IndexStreamID (::std::ostream& os,
                   const ::st434::s377m::types::UInt32& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    IndexStreamID (::std::ostream& os,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    IndexStreamID (::std::ostream& os,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    IndexStreamID (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt32& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    IndexStreamID (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    IndexStreamID (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    IndexStreamID (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::UInt32& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    IndexStreamID (const ::st434::s377m::types::UInt32& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    EssenceStreamID (::std::ostream& os,
                     const ::st434::s377m::types::UInt32& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    EssenceStreamID (::std::ostream& os,
                     const ::st434::s377m::types::UInt32& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    EssenceStreamID (::std::ostream& os,
                     const ::st434::s377m::types::UInt32& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    EssenceStreamID (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UInt32& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    EssenceStreamID (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UInt32& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    EssenceStreamID (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UInt32& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    EssenceStreamID (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::UInt32& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    EssenceStreamID (const ::st434::s377m::types::UInt32& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    EssenceContainers_ (::std::ostream& os,
                        const ::properties::S335M::EssenceContainers& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    EssenceContainers_ (::std::ostream& os,
                        const ::properties::S335M::EssenceContainers& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    EssenceContainers_ (::std::ostream& os,
                        const ::properties::S335M::EssenceContainers& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    EssenceContainers_ (::xercesc::XMLFormatTarget& ft,
                        const ::properties::S335M::EssenceContainers& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    EssenceContainers_ (::xercesc::XMLFormatTarget& ft,
                        const ::properties::S335M::EssenceContainers& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    EssenceContainers_ (::xercesc::XMLFormatTarget& ft,
                        const ::properties::S335M::EssenceContainers& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    EssenceContainers_ (::xercesc::DOMDocument& d,
                        const ::properties::S335M::EssenceContainers& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    EssenceContainers_ (const ::properties::S335M::EssenceContainers& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PackageID (::std::ostream& os,
               const ::st434::s377m::types::UMID32& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    PackageID (::std::ostream& os,
               const ::st434::s377m::types::UMID32& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    PackageID (::std::ostream& os,
               const ::st434::s377m::types::UMID32& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PackageID (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::UMID32& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    PackageID (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::UMID32& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    PackageID (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::UMID32& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PackageID (::xercesc::DOMDocument& d,
               const ::st434::s377m::types::UMID32& x,
               ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PackageID (const ::st434::s377m::types::UMID32& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    TrackID (::std::ostream& os,
             const ::st434::s377m::types::UInt32& x, 
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    TrackID (::std::ostream& os,
             const ::st434::s377m::types::UInt32& x, 
             ::xml_schema::error_handler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    TrackID (::std::ostream& os,
             const ::st434::s377m::types::UInt32& x, 
             ::xercesc::DOMErrorHandler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    TrackID (::xercesc::XMLFormatTarget& ft,
             const ::st434::s377m::types::UInt32& x, 
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    TrackID (::xercesc::XMLFormatTarget& ft,
             const ::st434::s377m::types::UInt32& x, 
             ::xml_schema::error_handler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    TrackID (::xercesc::XMLFormatTarget& ft,
             const ::st434::s377m::types::UInt32& x, 
             ::xercesc::DOMErrorHandler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    TrackID (::xercesc::DOMDocument& d,
             const ::st434::s377m::types::UInt32& x,
             ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    TrackID (const ::st434::s377m::types::UInt32& x, 
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    URL (::std::ostream& os,
         const ::st434::s377m::types::UTF16CharString& x, 
         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
         const ::std::string& e = "UTF-8",
         ::xml_schema::flags f = 0);

    void
    URL (::std::ostream& os,
         const ::st434::s377m::types::UTF16CharString& x, 
         ::xml_schema::error_handler& eh,
         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
         const ::std::string& e = "UTF-8",
         ::xml_schema::flags f = 0);

    void
    URL (::std::ostream& os,
         const ::st434::s377m::types::UTF16CharString& x, 
         ::xercesc::DOMErrorHandler& eh,
         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
         const ::std::string& e = "UTF-8",
         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    URL (::xercesc::XMLFormatTarget& ft,
         const ::st434::s377m::types::UTF16CharString& x, 
         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
         const ::std::string& e = "UTF-8",
         ::xml_schema::flags f = 0);

    void
    URL (::xercesc::XMLFormatTarget& ft,
         const ::st434::s377m::types::UTF16CharString& x, 
         ::xml_schema::error_handler& eh,
         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
         const ::std::string& e = "UTF-8",
         ::xml_schema::flags f = 0);

    void
    URL (::xercesc::XMLFormatTarget& ft,
         const ::st434::s377m::types::UTF16CharString& x, 
         ::xercesc::DOMErrorHandler& eh,
         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
         const ::std::string& e = "UTF-8",
         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    URL (::xercesc::DOMDocument& d,
         const ::st434::s377m::types::UTF16CharString& x,
         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    URL (const ::st434::s377m::types::UTF16CharString& x, 
         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    LocationName (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    LocationName (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    LocationName (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    LocationName (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    LocationName (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    LocationName (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    LocationName (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UTF16CharString& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    LocationName (const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PackageName (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    PackageName (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    PackageName (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PackageName (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    PackageName (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    PackageName (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PackageName (::xercesc::DOMDocument& d,
                 const ::st434::s377m::types::UTF16CharString& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PackageName (const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    EssenceTrackNumber (::std::ostream& os,
                        const ::st434::s377m::types::UInt32& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    EssenceTrackNumber (::std::ostream& os,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    EssenceTrackNumber (::std::ostream& os,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    EssenceTrackNumber (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UInt32& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    EssenceTrackNumber (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    EssenceTrackNumber (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    EssenceTrackNumber (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::UInt32& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    EssenceTrackNumber (const ::st434::s377m::types::UInt32& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    OperationalPattern (::std::ostream& os,
                        const ::st434::s377m::types::UL& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    OperationalPattern (::std::ostream& os,
                        const ::st434::s377m::types::UL& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    OperationalPattern (::std::ostream& os,
                        const ::st434::s377m::types::UL& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    OperationalPattern (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UL& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    OperationalPattern (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UL& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    OperationalPattern (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UL& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    OperationalPattern (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::UL& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    OperationalPattern (const ::st434::s377m::types::UL& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DescriptiveSchemes_ (::std::ostream& os,
                         const ::properties::S335M::DescriptiveSchemes& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    DescriptiveSchemes_ (::std::ostream& os,
                         const ::properties::S335M::DescriptiveSchemes& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    DescriptiveSchemes_ (::std::ostream& os,
                         const ::properties::S335M::DescriptiveSchemes& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DescriptiveSchemes_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::DescriptiveSchemes& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    DescriptiveSchemes_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::DescriptiveSchemes& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    DescriptiveSchemes_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::DescriptiveSchemes& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DescriptiveSchemes_ (::xercesc::DOMDocument& d,
                         const ::properties::S335M::DescriptiveSchemes& x,
                         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DescriptiveSchemes_ (const ::properties::S335M::DescriptiveSchemes& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    TrackName (::std::ostream& os,
               const ::st434::s377m::types::UTF16CharString& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    TrackName (::std::ostream& os,
               const ::st434::s377m::types::UTF16CharString& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    TrackName (::std::ostream& os,
               const ::st434::s377m::types::UTF16CharString& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    TrackName (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::UTF16CharString& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    TrackName (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::UTF16CharString& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    TrackName (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::UTF16CharString& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    TrackName (::xercesc::DOMDocument& d,
               const ::st434::s377m::types::UTF16CharString& x,
               ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    TrackName (const ::st434::s377m::types::UTF16CharString& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DescriptiveClipDescribedTrackIDs_ (::std::ostream& os,
                                       const ::properties::S335M::DescriptiveClipDescribedTrackIDs& x, 
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    void
    DescriptiveClipDescribedTrackIDs_ (::std::ostream& os,
                                       const ::properties::S335M::DescriptiveClipDescribedTrackIDs& x, 
                                       ::xml_schema::error_handler& eh,
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    void
    DescriptiveClipDescribedTrackIDs_ (::std::ostream& os,
                                       const ::properties::S335M::DescriptiveClipDescribedTrackIDs& x, 
                                       ::xercesc::DOMErrorHandler& eh,
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DescriptiveClipDescribedTrackIDs_ (::xercesc::XMLFormatTarget& ft,
                                       const ::properties::S335M::DescriptiveClipDescribedTrackIDs& x, 
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    void
    DescriptiveClipDescribedTrackIDs_ (::xercesc::XMLFormatTarget& ft,
                                       const ::properties::S335M::DescriptiveClipDescribedTrackIDs& x, 
                                       ::xml_schema::error_handler& eh,
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    void
    DescriptiveClipDescribedTrackIDs_ (::xercesc::XMLFormatTarget& ft,
                                       const ::properties::S335M::DescriptiveClipDescribedTrackIDs& x, 
                                       ::xercesc::DOMErrorHandler& eh,
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DescriptiveClipDescribedTrackIDs_ (::xercesc::DOMDocument& d,
                                       const ::properties::S335M::DescriptiveClipDescribedTrackIDs& x,
                                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DescriptiveClipDescribedTrackIDs_ (const ::properties::S335M::DescriptiveClipDescribedTrackIDs& x, 
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DescribedTrackIDs_ (::std::ostream& os,
                        const ::properties::S335M::DescribedTrackIDs& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    DescribedTrackIDs_ (::std::ostream& os,
                        const ::properties::S335M::DescribedTrackIDs& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    DescribedTrackIDs_ (::std::ostream& os,
                        const ::properties::S335M::DescribedTrackIDs& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DescribedTrackIDs_ (::xercesc::XMLFormatTarget& ft,
                        const ::properties::S335M::DescribedTrackIDs& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    DescribedTrackIDs_ (::xercesc::XMLFormatTarget& ft,
                        const ::properties::S335M::DescribedTrackIDs& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    DescribedTrackIDs_ (::xercesc::XMLFormatTarget& ft,
                        const ::properties::S335M::DescribedTrackIDs& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DescribedTrackIDs_ (::xercesc::DOMDocument& d,
                        const ::properties::S335M::DescribedTrackIDs& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DescribedTrackIDs_ (const ::properties::S335M::DescribedTrackIDs& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    LocalTag (::std::ostream& os,
              const ::st434::s377m::types::LocalTag& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    LocalTag (::std::ostream& os,
              const ::st434::s377m::types::LocalTag& x, 
              ::xml_schema::error_handler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    LocalTag (::std::ostream& os,
              const ::st434::s377m::types::LocalTag& x, 
              ::xercesc::DOMErrorHandler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    LocalTag (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::LocalTag& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    LocalTag (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::LocalTag& x, 
              ::xml_schema::error_handler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    LocalTag (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::LocalTag& x, 
              ::xercesc::DOMErrorHandler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    LocalTag (::xercesc::DOMDocument& d,
              const ::st434::s377m::types::LocalTag& x,
              ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    LocalTag (const ::st434::s377m::types::LocalTag& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    LocalTagUniqueID (::std::ostream& os,
                      const ::st434::s377m::types::UL& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    LocalTagUniqueID (::std::ostream& os,
                      const ::st434::s377m::types::UL& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    LocalTagUniqueID (::std::ostream& os,
                      const ::st434::s377m::types::UL& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    LocalTagUniqueID (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UL& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    LocalTagUniqueID (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UL& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    LocalTagUniqueID (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UL& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    LocalTagUniqueID (::xercesc::DOMDocument& d,
                      const ::st434::s377m::types::UL& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    LocalTagUniqueID (const ::st434::s377m::types::UL& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ContactID (::std::ostream& os,
               const ::st434::s377m::types::UUID& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    ContactID (::std::ostream& os,
               const ::st434::s377m::types::UUID& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    ContactID (::std::ostream& os,
               const ::st434::s377m::types::UUID& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ContactID (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::UUID& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    ContactID (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::UUID& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    ContactID (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::UUID& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ContactID (::xercesc::DOMDocument& d,
               const ::st434::s377m::types::UUID& x,
               ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ContactID (const ::st434::s377m::types::UUID& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DeviceDesignation (::std::ostream& os,
                       const ::st434::s377m::types::ISO7bitCharString& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    DeviceDesignation (::std::ostream& os,
                       const ::st434::s377m::types::ISO7bitCharString& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    DeviceDesignation (::std::ostream& os,
                       const ::st434::s377m::types::ISO7bitCharString& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DeviceDesignation (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::ISO7bitCharString& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    DeviceDesignation (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::ISO7bitCharString& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    DeviceDesignation (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::ISO7bitCharString& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DeviceDesignation (::xercesc::DOMDocument& d,
                       const ::st434::s377m::types::ISO7bitCharString& x,
                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DeviceDesignation (const ::st434::s377m::types::ISO7bitCharString& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DeviceModel (::std::ostream& os,
                 const ::st434::s377m::types::ISO7bitCharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    DeviceModel (::std::ostream& os,
                 const ::st434::s377m::types::ISO7bitCharString& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    DeviceModel (::std::ostream& os,
                 const ::st434::s377m::types::ISO7bitCharString& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DeviceModel (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::ISO7bitCharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    DeviceModel (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::ISO7bitCharString& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    DeviceModel (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::ISO7bitCharString& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DeviceModel (::xercesc::DOMDocument& d,
                 const ::st434::s377m::types::ISO7bitCharString& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DeviceModel (const ::st434::s377m::types::ISO7bitCharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DeviceSerialNumber (::std::ostream& os,
                        const ::st434::s377m::types::ISO7bitCharString& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    DeviceSerialNumber (::std::ostream& os,
                        const ::st434::s377m::types::ISO7bitCharString& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    DeviceSerialNumber (::std::ostream& os,
                        const ::st434::s377m::types::ISO7bitCharString& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DeviceSerialNumber (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::ISO7bitCharString& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    DeviceSerialNumber (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::ISO7bitCharString& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    DeviceSerialNumber (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::ISO7bitCharString& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DeviceSerialNumber (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::ISO7bitCharString& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DeviceSerialNumber (const ::st434::s377m::types::ISO7bitCharString& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    IEEEDeviceIdentifier (::std::ostream& os,
                          const ::st434::s377m::types::ISO7bitCharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    IEEEDeviceIdentifier (::std::ostream& os,
                          const ::st434::s377m::types::ISO7bitCharString& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    IEEEDeviceIdentifier (::std::ostream& os,
                          const ::st434::s377m::types::ISO7bitCharString& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    IEEEDeviceIdentifier (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::ISO7bitCharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    IEEEDeviceIdentifier (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::ISO7bitCharString& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    IEEEDeviceIdentifier (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::ISO7bitCharString& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    IEEEDeviceIdentifier (::xercesc::DOMDocument& d,
                          const ::st434::s377m::types::ISO7bitCharString& x,
                          ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    IEEEDeviceIdentifier (const ::st434::s377m::types::ISO7bitCharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DeviceKind (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    DeviceKind (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    DeviceKind (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DeviceKind (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    DeviceKind (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    DeviceKind (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DeviceKind (::xercesc::DOMDocument& d,
                const ::st434::s377m::types::UTF16CharString& x,
                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DeviceKind (const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DeviceAssetNumber (::std::ostream& os,
                       const ::st434::s377m::types::ISO7bitCharString& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    DeviceAssetNumber (::std::ostream& os,
                       const ::st434::s377m::types::ISO7bitCharString& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    DeviceAssetNumber (::std::ostream& os,
                       const ::st434::s377m::types::ISO7bitCharString& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DeviceAssetNumber (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::ISO7bitCharString& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    DeviceAssetNumber (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::ISO7bitCharString& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    DeviceAssetNumber (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::ISO7bitCharString& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DeviceAssetNumber (::xercesc::DOMDocument& d,
                       const ::st434::s377m::types::ISO7bitCharString& x,
                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DeviceAssetNumber (const ::st434::s377m::types::ISO7bitCharString& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SMPTEUniversalLabelLocator (::std::ostream& os,
                                const ::st434::s377m::types::UL& x, 
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    void
    SMPTEUniversalLabelLocator (::std::ostream& os,
                                const ::st434::s377m::types::UL& x, 
                                ::xml_schema::error_handler& eh,
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    void
    SMPTEUniversalLabelLocator (::std::ostream& os,
                                const ::st434::s377m::types::UL& x, 
                                ::xercesc::DOMErrorHandler& eh,
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SMPTEUniversalLabelLocator (::xercesc::XMLFormatTarget& ft,
                                const ::st434::s377m::types::UL& x, 
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    void
    SMPTEUniversalLabelLocator (::xercesc::XMLFormatTarget& ft,
                                const ::st434::s377m::types::UL& x, 
                                ::xml_schema::error_handler& eh,
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    void
    SMPTEUniversalLabelLocator (::xercesc::XMLFormatTarget& ft,
                                const ::st434::s377m::types::UL& x, 
                                ::xercesc::DOMErrorHandler& eh,
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SMPTEUniversalLabelLocator (::xercesc::DOMDocument& d,
                                const ::st434::s377m::types::UL& x,
                                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SMPTEUniversalLabelLocator (const ::st434::s377m::types::UL& x, 
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    IdentificationLocator (::std::ostream& os,
                           const ::st434::s377m::types::UL& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    IdentificationLocator (::std::ostream& os,
                           const ::st434::s377m::types::UL& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    IdentificationLocator (::std::ostream& os,
                           const ::st434::s377m::types::UL& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    IdentificationLocator (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UL& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    IdentificationLocator (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UL& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    IdentificationLocator (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UL& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    IdentificationLocator (::xercesc::DOMDocument& d,
                           const ::st434::s377m::types::UL& x,
                           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    IdentificationLocator (const ::st434::s377m::types::UL& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ProjectNumber (::std::ostream& os,
                   const ::st434::s377m::types::ISO7bitCharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ProjectNumber (::std::ostream& os,
                   const ::st434::s377m::types::ISO7bitCharString& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ProjectNumber (::std::ostream& os,
                   const ::st434::s377m::types::ISO7bitCharString& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ProjectNumber (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::ISO7bitCharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ProjectNumber (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::ISO7bitCharString& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ProjectNumber (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::ISO7bitCharString& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ProjectNumber (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::ISO7bitCharString& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ProjectNumber (const ::st434::s377m::types::ISO7bitCharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ProjectName (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    ProjectName (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    ProjectName (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ProjectName (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    ProjectName (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    ProjectName (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ProjectName (::xercesc::DOMDocument& d,
                 const ::st434::s377m::types::UTF16CharString& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ProjectName (const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    MainTitle (::std::ostream& os,
               const ::st434::s377m::types::UTF16CharString& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    MainTitle (::std::ostream& os,
               const ::st434::s377m::types::UTF16CharString& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    MainTitle (::std::ostream& os,
               const ::st434::s377m::types::UTF16CharString& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    MainTitle (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::UTF16CharString& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    MainTitle (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::UTF16CharString& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    MainTitle (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::UTF16CharString& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    MainTitle (::xercesc::DOMDocument& d,
               const ::st434::s377m::types::UTF16CharString& x,
               ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    MainTitle (const ::st434::s377m::types::UTF16CharString& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SecondaryTitle (::std::ostream& os,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SecondaryTitle (::std::ostream& os,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SecondaryTitle (::std::ostream& os,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SecondaryTitle (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SecondaryTitle (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SecondaryTitle (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SecondaryTitle (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::UTF16CharString& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SecondaryTitle (const ::st434::s377m::types::UTF16CharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SceneNumber (::std::ostream& os,
                 const ::st434::s377m::types::ISO7bitCharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    SceneNumber (::std::ostream& os,
                 const ::st434::s377m::types::ISO7bitCharString& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    SceneNumber (::std::ostream& os,
                 const ::st434::s377m::types::ISO7bitCharString& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SceneNumber (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::ISO7bitCharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    SceneNumber (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::ISO7bitCharString& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    SceneNumber (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::ISO7bitCharString& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SceneNumber (::xercesc::DOMDocument& d,
                 const ::st434::s377m::types::ISO7bitCharString& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SceneNumber (const ::st434::s377m::types::ISO7bitCharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    VersionTitle (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    VersionTitle (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    VersionTitle (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    VersionTitle (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    VersionTitle (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    VersionTitle (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    VersionTitle (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UTF16CharString& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    VersionTitle (const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    WorkingTitle (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    WorkingTitle (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    WorkingTitle (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    WorkingTitle (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    WorkingTitle (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    WorkingTitle (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    WorkingTitle (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UTF16CharString& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    WorkingTitle (const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    OriginalTitle (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    OriginalTitle (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    OriginalTitle (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    OriginalTitle (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    OriginalTitle (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    OriginalTitle (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    OriginalTitle (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::UTF16CharString& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    OriginalTitle (const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ClipNumber (::std::ostream& os,
                const ::st434::s377m::types::ISO7bitCharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    ClipNumber (::std::ostream& os,
                const ::st434::s377m::types::ISO7bitCharString& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    ClipNumber (::std::ostream& os,
                const ::st434::s377m::types::ISO7bitCharString& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ClipNumber (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::ISO7bitCharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    ClipNumber (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::ISO7bitCharString& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    ClipNumber (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::ISO7bitCharString& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ClipNumber (::xercesc::DOMDocument& d,
                const ::st434::s377m::types::ISO7bitCharString& x,
                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ClipNumber (const ::st434::s377m::types::ISO7bitCharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ExtendedClipID (::std::ostream& os,
                    const ::st434::s377m::types::UMID64& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ExtendedClipID (::std::ostream& os,
                    const ::st434::s377m::types::UMID64& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ExtendedClipID (::std::ostream& os,
                    const ::st434::s377m::types::UMID64& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ExtendedClipID (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UMID64& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ExtendedClipID (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UMID64& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ExtendedClipID (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UMID64& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ExtendedClipID (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::UMID64& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ExtendedClipID (const ::st434::s377m::types::UMID64& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    TakeNumber (::std::ostream& os,
                const ::st434::s377m::types::UInt16& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    TakeNumber (::std::ostream& os,
                const ::st434::s377m::types::UInt16& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    TakeNumber (::std::ostream& os,
                const ::st434::s377m::types::UInt16& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    TakeNumber (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt16& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    TakeNumber (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt16& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    TakeNumber (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt16& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    TakeNumber (::xercesc::DOMDocument& d,
                const ::st434::s377m::types::UInt16& x,
                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    TakeNumber (const ::st434::s377m::types::UInt16& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SlateInformation (::std::ostream& os,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    SlateInformation (::std::ostream& os,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    SlateInformation (::std::ostream& os,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SlateInformation (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    SlateInformation (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    SlateInformation (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SlateInformation (::xercesc::DOMDocument& d,
                      const ::st434::s377m::types::UTF16CharString& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SlateInformation (const ::st434::s377m::types::UTF16CharString& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    BrandMainTitle (::std::ostream& os,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    BrandMainTitle (::std::ostream& os,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    BrandMainTitle (::std::ostream& os,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    BrandMainTitle (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    BrandMainTitle (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    BrandMainTitle (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    BrandMainTitle (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::UTF16CharString& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    BrandMainTitle (const ::st434::s377m::types::UTF16CharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    BrandOriginalTitle (::std::ostream& os,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    BrandOriginalTitle (::std::ostream& os,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    BrandOriginalTitle (::std::ostream& os,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    BrandOriginalTitle (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    BrandOriginalTitle (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    BrandOriginalTitle (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    BrandOriginalTitle (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::UTF16CharString& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    BrandOriginalTitle (const ::st434::s377m::types::UTF16CharString& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    FrameworkTitle (::std::ostream& os,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    FrameworkTitle (::std::ostream& os,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    FrameworkTitle (::std::ostream& os,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    FrameworkTitle (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    FrameworkTitle (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    FrameworkTitle (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    FrameworkTitle (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::UTF16CharString& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    FrameworkTitle (const ::st434::s377m::types::UTF16CharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ShotTrackIDs_ (::std::ostream& os,
                   const ::properties::S335M::ShotTrackIDs& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ShotTrackIDs_ (::std::ostream& os,
                   const ::properties::S335M::ShotTrackIDs& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ShotTrackIDs_ (::std::ostream& os,
                   const ::properties::S335M::ShotTrackIDs& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ShotTrackIDs_ (::xercesc::XMLFormatTarget& ft,
                   const ::properties::S335M::ShotTrackIDs& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ShotTrackIDs_ (::xercesc::XMLFormatTarget& ft,
                   const ::properties::S335M::ShotTrackIDs& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ShotTrackIDs_ (::xercesc::XMLFormatTarget& ft,
                   const ::properties::S335M::ShotTrackIDs& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ShotTrackIDs_ (::xercesc::DOMDocument& d,
                   const ::properties::S335M::ShotTrackIDs& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ShotTrackIDs_ (const ::properties::S335M::ShotTrackIDs& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    IdentifierKind (::std::ostream& os,
                    const ::st434::s377m::types::ISO7bitCharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    IdentifierKind (::std::ostream& os,
                    const ::st434::s377m::types::ISO7bitCharString& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    IdentifierKind (::std::ostream& os,
                    const ::st434::s377m::types::ISO7bitCharString& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    IdentifierKind (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::ISO7bitCharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    IdentifierKind (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::ISO7bitCharString& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    IdentifierKind (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::ISO7bitCharString& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    IdentifierKind (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::ISO7bitCharString& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    IdentifierKind (const ::st434::s377m::types::ISO7bitCharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    IdentifierValue (::std::ostream& os,
                     const ::st434::s377m::types::ISO7bitCharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    IdentifierValue (::std::ostream& os,
                     const ::st434::s377m::types::ISO7bitCharString& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    IdentifierValue (::std::ostream& os,
                     const ::st434::s377m::types::ISO7bitCharString& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    IdentifierValue (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::ISO7bitCharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    IdentifierValue (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::ISO7bitCharString& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    IdentifierValue (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::ISO7bitCharString& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    IdentifierValue (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::ISO7bitCharString& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    IdentifierValue (const ::st434::s377m::types::ISO7bitCharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ParticipantID (::std::ostream& os,
                   const ::st434::s377m::types::UUID& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ParticipantID (::std::ostream& os,
                   const ::st434::s377m::types::UUID& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ParticipantID (::std::ostream& os,
                   const ::st434::s377m::types::UUID& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ParticipantID (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UUID& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ParticipantID (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UUID& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ParticipantID (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UUID& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ParticipantID (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::UUID& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ParticipantID (const ::st434::s377m::types::UUID& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DeviceManufacturerName (::std::ostream& os,
                            const ::st434::s377m::types::UTF16CharString& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    DeviceManufacturerName (::std::ostream& os,
                            const ::st434::s377m::types::UTF16CharString& x, 
                            ::xml_schema::error_handler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    DeviceManufacturerName (::std::ostream& os,
                            const ::st434::s377m::types::UTF16CharString& x, 
                            ::xercesc::DOMErrorHandler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DeviceManufacturerName (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::UTF16CharString& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    DeviceManufacturerName (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::UTF16CharString& x, 
                            ::xml_schema::error_handler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    DeviceManufacturerName (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::UTF16CharString& x, 
                            ::xercesc::DOMErrorHandler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DeviceManufacturerName (::xercesc::DOMDocument& d,
                            const ::st434::s377m::types::UTF16CharString& x,
                            ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DeviceManufacturerName (const ::st434::s377m::types::UTF16CharString& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    OrganizationCode (::std::ostream& os,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    OrganizationCode (::std::ostream& os,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    OrganizationCode (::std::ostream& os,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    OrganizationCode (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    OrganizationCode (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    OrganizationCode (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UTF16CharString& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    OrganizationCode (::xercesc::DOMDocument& d,
                      const ::st434::s377m::types::UTF16CharString& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    OrganizationCode (const ::st434::s377m::types::UTF16CharString& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    MajorVersion (::std::ostream& os,
                  const ::st434::s377m::types::UInt16& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    MajorVersion (::std::ostream& os,
                  const ::st434::s377m::types::UInt16& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    MajorVersion (::std::ostream& os,
                  const ::st434::s377m::types::UInt16& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    MajorVersion (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt16& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    MajorVersion (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt16& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    MajorVersion (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt16& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    MajorVersion (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UInt16& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    MajorVersion (const ::st434::s377m::types::UInt16& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    MinorVersion (::std::ostream& os,
                  const ::st434::s377m::types::UInt16& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    MinorVersion (::std::ostream& os,
                  const ::st434::s377m::types::UInt16& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    MinorVersion (::std::ostream& os,
                  const ::st434::s377m::types::UInt16& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    MinorVersion (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt16& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    MinorVersion (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt16& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    MinorVersion (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt16& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    MinorVersion (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UInt16& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    MinorVersion (const ::st434::s377m::types::UInt16& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    KAGSize (::std::ostream& os,
             const ::st434::s377m::types::UInt32& x, 
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    KAGSize (::std::ostream& os,
             const ::st434::s377m::types::UInt32& x, 
             ::xml_schema::error_handler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    KAGSize (::std::ostream& os,
             const ::st434::s377m::types::UInt32& x, 
             ::xercesc::DOMErrorHandler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    KAGSize (::xercesc::XMLFormatTarget& ft,
             const ::st434::s377m::types::UInt32& x, 
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    KAGSize (::xercesc::XMLFormatTarget& ft,
             const ::st434::s377m::types::UInt32& x, 
             ::xml_schema::error_handler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    KAGSize (::xercesc::XMLFormatTarget& ft,
             const ::st434::s377m::types::UInt32& x, 
             ::xercesc::DOMErrorHandler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    KAGSize (::xercesc::DOMDocument& d,
             const ::st434::s377m::types::UInt32& x,
             ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    KAGSize (const ::st434::s377m::types::UInt32& x, 
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    FormatVersion (::std::ostream& os,
                   const ::st434::s377m::types::VersionType& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    FormatVersion (::std::ostream& os,
                   const ::st434::s377m::types::VersionType& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    FormatVersion (::std::ostream& os,
                   const ::st434::s377m::types::VersionType& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    FormatVersion (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::VersionType& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    FormatVersion (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::VersionType& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    FormatVersion (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::VersionType& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    FormatVersion (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::VersionType& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    FormatVersion (const ::st434::s377m::types::VersionType& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ObjectModelVersion (::std::ostream& os,
                        const ::st434::s377m::types::UInt32& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    ObjectModelVersion (::std::ostream& os,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    ObjectModelVersion (::std::ostream& os,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ObjectModelVersion (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UInt32& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    ObjectModelVersion (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    ObjectModelVersion (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ObjectModelVersion (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::UInt32& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ObjectModelVersion (const ::st434::s377m::types::UInt32& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ReversedByteOrder (::std::ostream& os,
                       const ::st434::s377m::types::Boolean& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ReversedByteOrder (::std::ostream& os,
                       const ::st434::s377m::types::Boolean& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ReversedByteOrder (::std::ostream& os,
                       const ::st434::s377m::types::Boolean& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ReversedByteOrder (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::Boolean& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ReversedByteOrder (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::Boolean& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ReversedByteOrder (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::Boolean& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ReversedByteOrder (::xercesc::DOMDocument& d,
                       const ::st434::s377m::types::Boolean& x,
                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ReversedByteOrder (const ::st434::s377m::types::Boolean& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ItemName (::std::ostream& os,
              const ::st434::s377m::types::UTF16CharString& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    ItemName (::std::ostream& os,
              const ::st434::s377m::types::UTF16CharString& x, 
              ::xml_schema::error_handler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    ItemName (::std::ostream& os,
              const ::st434::s377m::types::UTF16CharString& x, 
              ::xercesc::DOMErrorHandler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ItemName (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::UTF16CharString& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    ItemName (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::UTF16CharString& x, 
              ::xml_schema::error_handler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    ItemName (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::UTF16CharString& x, 
              ::xercesc::DOMErrorHandler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ItemName (::xercesc::DOMDocument& d,
              const ::st434::s377m::types::UTF16CharString& x,
              ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ItemName (const ::st434::s377m::types::UTF16CharString& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ItemValue (::std::ostream& os,
               const ::st434::s377m::types::UTF16CharString& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    ItemValue (::std::ostream& os,
               const ::st434::s377m::types::UTF16CharString& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    ItemValue (::std::ostream& os,
               const ::st434::s377m::types::UTF16CharString& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ItemValue (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::UTF16CharString& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    ItemValue (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::UTF16CharString& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    ItemValue (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::UTF16CharString& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ItemValue (::xercesc::DOMDocument& d,
               const ::st434::s377m::types::UTF16CharString& x,
               ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ItemValue (const ::st434::s377m::types::UTF16CharString& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ContentClassification (::std::ostream& os,
                           const ::st434::s377m::types::ISO7bitCharString& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    ContentClassification (::std::ostream& os,
                           const ::st434::s377m::types::ISO7bitCharString& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    ContentClassification (::std::ostream& os,
                           const ::st434::s377m::types::ISO7bitCharString& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ContentClassification (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::ISO7bitCharString& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    ContentClassification (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::ISO7bitCharString& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    ContentClassification (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::ISO7bitCharString& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ContentClassification (::xercesc::DOMDocument& d,
                           const ::st434::s377m::types::ISO7bitCharString& x,
                           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ContentClassification (const ::st434::s377m::types::ISO7bitCharString& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    InCueWords (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    InCueWords (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    InCueWords (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    InCueWords (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    InCueWords (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    InCueWords (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    InCueWords (::xercesc::DOMDocument& d,
                const ::st434::s377m::types::UTF16CharString& x,
                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    InCueWords (const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    OutCueWords (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    OutCueWords (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    OutCueWords (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    OutCueWords (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    OutCueWords (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    OutCueWords (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    OutCueWords (::xercesc::DOMDocument& d,
                 const ::st434::s377m::types::UTF16CharString& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    OutCueWords (const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    KeypointKind (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    KeypointKind (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    KeypointKind (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    KeypointKind (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    KeypointKind (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    KeypointKind (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    KeypointKind (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UTF16CharString& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    KeypointKind (const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    KeypointValue (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    KeypointValue (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    KeypointValue (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    KeypointValue (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    KeypointValue (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    KeypointValue (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    KeypointValue (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::UTF16CharString& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    KeypointValue (const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    GroupSynopsis (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    GroupSynopsis (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    GroupSynopsis (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    GroupSynopsis (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    GroupSynopsis (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    GroupSynopsis (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    GroupSynopsis (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::UTF16CharString& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    GroupSynopsis (const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    NominationCategory (::std::ostream& os,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    NominationCategory (::std::ostream& os,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    NominationCategory (::std::ostream& os,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    NominationCategory (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    NominationCategory (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    NominationCategory (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    NominationCategory (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::UTF16CharString& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    NominationCategory (const ::st434::s377m::types::UTF16CharString& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ShotCommentKind (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ShotCommentKind (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ShotCommentKind (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ShotCommentKind (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ShotCommentKind (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ShotCommentKind (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ShotCommentKind (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::UTF16CharString& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ShotCommentKind (const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ShotComment (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    ShotComment (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    ShotComment (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ShotComment (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    ShotComment (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    ShotComment (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ShotComment (::xercesc::DOMDocument& d,
                 const ::st434::s377m::types::UTF16CharString& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ShotComment (const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ExtendedCaptionsLanguageCode (::std::ostream& os,
                                  const ::st434::s377m::types::ISO7bitCharString& x, 
                                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                  const ::std::string& e = "UTF-8",
                                  ::xml_schema::flags f = 0);

    void
    ExtendedCaptionsLanguageCode (::std::ostream& os,
                                  const ::st434::s377m::types::ISO7bitCharString& x, 
                                  ::xml_schema::error_handler& eh,
                                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                  const ::std::string& e = "UTF-8",
                                  ::xml_schema::flags f = 0);

    void
    ExtendedCaptionsLanguageCode (::std::ostream& os,
                                  const ::st434::s377m::types::ISO7bitCharString& x, 
                                  ::xercesc::DOMErrorHandler& eh,
                                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                  const ::std::string& e = "UTF-8",
                                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ExtendedCaptionsLanguageCode (::xercesc::XMLFormatTarget& ft,
                                  const ::st434::s377m::types::ISO7bitCharString& x, 
                                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                  const ::std::string& e = "UTF-8",
                                  ::xml_schema::flags f = 0);

    void
    ExtendedCaptionsLanguageCode (::xercesc::XMLFormatTarget& ft,
                                  const ::st434::s377m::types::ISO7bitCharString& x, 
                                  ::xml_schema::error_handler& eh,
                                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                  const ::std::string& e = "UTF-8",
                                  ::xml_schema::flags f = 0);

    void
    ExtendedCaptionsLanguageCode (::xercesc::XMLFormatTarget& ft,
                                  const ::st434::s377m::types::ISO7bitCharString& x, 
                                  ::xercesc::DOMErrorHandler& eh,
                                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                  const ::std::string& e = "UTF-8",
                                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ExtendedCaptionsLanguageCode (::xercesc::DOMDocument& d,
                                  const ::st434::s377m::types::ISO7bitCharString& x,
                                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ExtendedCaptionsLanguageCode (const ::st434::s377m::types::ISO7bitCharString& x, 
                                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DescriptiveComment (::std::ostream& os,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    DescriptiveComment (::std::ostream& os,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    DescriptiveComment (::std::ostream& os,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DescriptiveComment (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    DescriptiveComment (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    DescriptiveComment (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DescriptiveComment (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::UTF16CharString& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DescriptiveComment (const ::st434::s377m::types::UTF16CharString& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    FrameworkExtendedTextLanguageCode (::std::ostream& os,
                                       const ::st434::s377m::types::ISO7bitCharString& x, 
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    void
    FrameworkExtendedTextLanguageCode (::std::ostream& os,
                                       const ::st434::s377m::types::ISO7bitCharString& x, 
                                       ::xml_schema::error_handler& eh,
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    void
    FrameworkExtendedTextLanguageCode (::std::ostream& os,
                                       const ::st434::s377m::types::ISO7bitCharString& x, 
                                       ::xercesc::DOMErrorHandler& eh,
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    FrameworkExtendedTextLanguageCode (::xercesc::XMLFormatTarget& ft,
                                       const ::st434::s377m::types::ISO7bitCharString& x, 
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    void
    FrameworkExtendedTextLanguageCode (::xercesc::XMLFormatTarget& ft,
                                       const ::st434::s377m::types::ISO7bitCharString& x, 
                                       ::xml_schema::error_handler& eh,
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    void
    FrameworkExtendedTextLanguageCode (::xercesc::XMLFormatTarget& ft,
                                       const ::st434::s377m::types::ISO7bitCharString& x, 
                                       ::xercesc::DOMErrorHandler& eh,
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    FrameworkExtendedTextLanguageCode (::xercesc::DOMDocument& d,
                                       const ::st434::s377m::types::ISO7bitCharString& x,
                                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    FrameworkExtendedTextLanguageCode (const ::st434::s377m::types::ISO7bitCharString& x, 
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ExtendedTextLanguageCode (::std::ostream& os,
                              const ::st434::s377m::types::ISO7bitCharString& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    ExtendedTextLanguageCode (::std::ostream& os,
                              const ::st434::s377m::types::ISO7bitCharString& x, 
                              ::xml_schema::error_handler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    ExtendedTextLanguageCode (::std::ostream& os,
                              const ::st434::s377m::types::ISO7bitCharString& x, 
                              ::xercesc::DOMErrorHandler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ExtendedTextLanguageCode (::xercesc::XMLFormatTarget& ft,
                              const ::st434::s377m::types::ISO7bitCharString& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    ExtendedTextLanguageCode (::xercesc::XMLFormatTarget& ft,
                              const ::st434::s377m::types::ISO7bitCharString& x, 
                              ::xml_schema::error_handler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    ExtendedTextLanguageCode (::xercesc::XMLFormatTarget& ft,
                              const ::st434::s377m::types::ISO7bitCharString& x, 
                              ::xercesc::DOMErrorHandler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ExtendedTextLanguageCode (::xercesc::DOMDocument& d,
                              const ::st434::s377m::types::ISO7bitCharString& x,
                              ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ExtendedTextLanguageCode (const ::st434::s377m::types::ISO7bitCharString& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    FrameworkThesaurusName (::std::ostream& os,
                            const ::st434::s377m::types::UTF16CharString& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    FrameworkThesaurusName (::std::ostream& os,
                            const ::st434::s377m::types::UTF16CharString& x, 
                            ::xml_schema::error_handler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    FrameworkThesaurusName (::std::ostream& os,
                            const ::st434::s377m::types::UTF16CharString& x, 
                            ::xercesc::DOMErrorHandler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    FrameworkThesaurusName (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::UTF16CharString& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    FrameworkThesaurusName (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::UTF16CharString& x, 
                            ::xml_schema::error_handler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    FrameworkThesaurusName (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::UTF16CharString& x, 
                            ::xercesc::DOMErrorHandler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    FrameworkThesaurusName (::xercesc::DOMDocument& d,
                            const ::st434::s377m::types::UTF16CharString& x,
                            ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    FrameworkThesaurusName (const ::st434::s377m::types::UTF16CharString& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ThesaurusName (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ThesaurusName (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ThesaurusName (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ThesaurusName (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ThesaurusName (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ThesaurusName (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ThesaurusName (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::UTF16CharString& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ThesaurusName (const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PrimaryExtendedSpokenLanguageCode (::std::ostream& os,
                                       const ::st434::s377m::types::ISO7bitCharString& x, 
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    void
    PrimaryExtendedSpokenLanguageCode (::std::ostream& os,
                                       const ::st434::s377m::types::ISO7bitCharString& x, 
                                       ::xml_schema::error_handler& eh,
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    void
    PrimaryExtendedSpokenLanguageCode (::std::ostream& os,
                                       const ::st434::s377m::types::ISO7bitCharString& x, 
                                       ::xercesc::DOMErrorHandler& eh,
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PrimaryExtendedSpokenLanguageCode (::xercesc::XMLFormatTarget& ft,
                                       const ::st434::s377m::types::ISO7bitCharString& x, 
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    void
    PrimaryExtendedSpokenLanguageCode (::xercesc::XMLFormatTarget& ft,
                                       const ::st434::s377m::types::ISO7bitCharString& x, 
                                       ::xml_schema::error_handler& eh,
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    void
    PrimaryExtendedSpokenLanguageCode (::xercesc::XMLFormatTarget& ft,
                                       const ::st434::s377m::types::ISO7bitCharString& x, 
                                       ::xercesc::DOMErrorHandler& eh,
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PrimaryExtendedSpokenLanguageCode (::xercesc::DOMDocument& d,
                                       const ::st434::s377m::types::ISO7bitCharString& x,
                                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PrimaryExtendedSpokenLanguageCode (const ::st434::s377m::types::ISO7bitCharString& x, 
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SecondaryExtendedSpokenLanguageCode (::std::ostream& os,
                                         const ::st434::s377m::types::ISO7bitCharString& x, 
                                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                         const ::std::string& e = "UTF-8",
                                         ::xml_schema::flags f = 0);

    void
    SecondaryExtendedSpokenLanguageCode (::std::ostream& os,
                                         const ::st434::s377m::types::ISO7bitCharString& x, 
                                         ::xml_schema::error_handler& eh,
                                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                         const ::std::string& e = "UTF-8",
                                         ::xml_schema::flags f = 0);

    void
    SecondaryExtendedSpokenLanguageCode (::std::ostream& os,
                                         const ::st434::s377m::types::ISO7bitCharString& x, 
                                         ::xercesc::DOMErrorHandler& eh,
                                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                         const ::std::string& e = "UTF-8",
                                         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SecondaryExtendedSpokenLanguageCode (::xercesc::XMLFormatTarget& ft,
                                         const ::st434::s377m::types::ISO7bitCharString& x, 
                                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                         const ::std::string& e = "UTF-8",
                                         ::xml_schema::flags f = 0);

    void
    SecondaryExtendedSpokenLanguageCode (::xercesc::XMLFormatTarget& ft,
                                         const ::st434::s377m::types::ISO7bitCharString& x, 
                                         ::xml_schema::error_handler& eh,
                                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                         const ::std::string& e = "UTF-8",
                                         ::xml_schema::flags f = 0);

    void
    SecondaryExtendedSpokenLanguageCode (::xercesc::XMLFormatTarget& ft,
                                         const ::st434::s377m::types::ISO7bitCharString& x, 
                                         ::xercesc::DOMErrorHandler& eh,
                                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                         const ::std::string& e = "UTF-8",
                                         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SecondaryExtendedSpokenLanguageCode (::xercesc::DOMDocument& d,
                                         const ::st434::s377m::types::ISO7bitCharString& x,
                                         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SecondaryExtendedSpokenLanguageCode (const ::st434::s377m::types::ISO7bitCharString& x, 
                                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    OriginalExtendedSpokenLanguageCode (::std::ostream& os,
                                        const ::st434::s377m::types::ISO7bitCharString& x, 
                                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                        const ::std::string& e = "UTF-8",
                                        ::xml_schema::flags f = 0);

    void
    OriginalExtendedSpokenLanguageCode (::std::ostream& os,
                                        const ::st434::s377m::types::ISO7bitCharString& x, 
                                        ::xml_schema::error_handler& eh,
                                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                        const ::std::string& e = "UTF-8",
                                        ::xml_schema::flags f = 0);

    void
    OriginalExtendedSpokenLanguageCode (::std::ostream& os,
                                        const ::st434::s377m::types::ISO7bitCharString& x, 
                                        ::xercesc::DOMErrorHandler& eh,
                                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                        const ::std::string& e = "UTF-8",
                                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    OriginalExtendedSpokenLanguageCode (::xercesc::XMLFormatTarget& ft,
                                        const ::st434::s377m::types::ISO7bitCharString& x, 
                                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                        const ::std::string& e = "UTF-8",
                                        ::xml_schema::flags f = 0);

    void
    OriginalExtendedSpokenLanguageCode (::xercesc::XMLFormatTarget& ft,
                                        const ::st434::s377m::types::ISO7bitCharString& x, 
                                        ::xml_schema::error_handler& eh,
                                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                        const ::std::string& e = "UTF-8",
                                        ::xml_schema::flags f = 0);

    void
    OriginalExtendedSpokenLanguageCode (::xercesc::XMLFormatTarget& ft,
                                        const ::st434::s377m::types::ISO7bitCharString& x, 
                                        ::xercesc::DOMErrorHandler& eh,
                                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                        const ::std::string& e = "UTF-8",
                                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    OriginalExtendedSpokenLanguageCode (::xercesc::DOMDocument& d,
                                        const ::st434::s377m::types::ISO7bitCharString& x,
                                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    OriginalExtendedSpokenLanguageCode (const ::st434::s377m::types::ISO7bitCharString& x, 
                                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ColorDescriptor (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ColorDescriptor (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ColorDescriptor (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ColorDescriptor (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ColorDescriptor (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ColorDescriptor (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ColorDescriptor (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::UTF16CharString& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ColorDescriptor (const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    AnnotationSynopsis (::std::ostream& os,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    AnnotationSynopsis (::std::ostream& os,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    AnnotationSynopsis (::std::ostream& os,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    AnnotationSynopsis (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    AnnotationSynopsis (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    AnnotationSynopsis (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UTF16CharString& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    AnnotationSynopsis (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::UTF16CharString& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    AnnotationSynopsis (const ::st434::s377m::types::UTF16CharString& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    AnnotationDescription (::std::ostream& os,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    AnnotationDescription (::std::ostream& os,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    AnnotationDescription (::std::ostream& os,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    AnnotationDescription (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    AnnotationDescription (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    AnnotationDescription (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    AnnotationDescription (::xercesc::DOMDocument& d,
                           const ::st434::s377m::types::UTF16CharString& x,
                           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    AnnotationDescription (const ::st434::s377m::types::UTF16CharString& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ScriptingKind (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ScriptingKind (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ScriptingKind (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ScriptingKind (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ScriptingKind (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ScriptingKind (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ScriptingKind (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::UTF16CharString& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ScriptingKind (const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ScriptingText (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ScriptingText (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ScriptingText (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ScriptingText (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ScriptingText (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ScriptingText (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ScriptingText (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::UTF16CharString& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ScriptingText (const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ShotDescription (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ShotDescription (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ShotDescription (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ShotDescription (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ShotDescription (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ShotDescription (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ShotDescription (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::UTF16CharString& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ShotDescription (const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    AnnotationKind (::std::ostream& os,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    AnnotationKind (::std::ostream& os,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    AnnotationKind (::std::ostream& os,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    AnnotationKind (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    AnnotationKind (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    AnnotationKind (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    AnnotationKind (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::UTF16CharString& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    AnnotationKind (const ::st434::s377m::types::UTF16CharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    RelatedMaterialDescription (::std::ostream& os,
                                const ::st434::s377m::types::UTF16CharString& x, 
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    void
    RelatedMaterialDescription (::std::ostream& os,
                                const ::st434::s377m::types::UTF16CharString& x, 
                                ::xml_schema::error_handler& eh,
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    void
    RelatedMaterialDescription (::std::ostream& os,
                                const ::st434::s377m::types::UTF16CharString& x, 
                                ::xercesc::DOMErrorHandler& eh,
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    RelatedMaterialDescription (::xercesc::XMLFormatTarget& ft,
                                const ::st434::s377m::types::UTF16CharString& x, 
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    void
    RelatedMaterialDescription (::xercesc::XMLFormatTarget& ft,
                                const ::st434::s377m::types::UTF16CharString& x, 
                                ::xml_schema::error_handler& eh,
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    void
    RelatedMaterialDescription (::xercesc::XMLFormatTarget& ft,
                                const ::st434::s377m::types::UTF16CharString& x, 
                                ::xercesc::DOMErrorHandler& eh,
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    RelatedMaterialDescription (::xercesc::DOMDocument& d,
                                const ::st434::s377m::types::UTF16CharString& x,
                                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    RelatedMaterialDescription (const ::st434::s377m::types::UTF16CharString& x, 
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    FestivalName (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    FestivalName (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    FestivalName (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    FestivalName (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    FestivalName (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    FestivalName (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    FestivalName (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UTF16CharString& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    FestivalName (const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    AwardName (::std::ostream& os,
               const ::st434::s377m::types::UTF16CharString& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    AwardName (::std::ostream& os,
               const ::st434::s377m::types::UTF16CharString& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    AwardName (::std::ostream& os,
               const ::st434::s377m::types::UTF16CharString& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    AwardName (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::UTF16CharString& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    AwardName (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::UTF16CharString& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    AwardName (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::UTF16CharString& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    AwardName (::xercesc::DOMDocument& d,
               const ::st434::s377m::types::UTF16CharString& x,
               ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    AwardName (const ::st434::s377m::types::UTF16CharString& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    AwardCategory (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    AwardCategory (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    AwardCategory (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    AwardCategory (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    AwardCategory (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    AwardCategory (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    AwardCategory (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::UTF16CharString& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    AwardCategory (const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ClipKind (::std::ostream& os,
              const ::st434::s377m::types::UTF16CharString& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    ClipKind (::std::ostream& os,
              const ::st434::s377m::types::UTF16CharString& x, 
              ::xml_schema::error_handler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    ClipKind (::std::ostream& os,
              const ::st434::s377m::types::UTF16CharString& x, 
              ::xercesc::DOMErrorHandler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ClipKind (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::UTF16CharString& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    ClipKind (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::UTF16CharString& x, 
              ::xml_schema::error_handler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    ClipKind (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::UTF16CharString& x, 
              ::xercesc::DOMErrorHandler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ClipKind (::xercesc::DOMDocument& d,
              const ::st434::s377m::types::UTF16CharString& x,
              ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ClipKind (const ::st434::s377m::types::UTF16CharString& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DeviceUsageDescription (::std::ostream& os,
                            const ::st434::s377m::types::UTF16CharString& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    DeviceUsageDescription (::std::ostream& os,
                            const ::st434::s377m::types::UTF16CharString& x, 
                            ::xml_schema::error_handler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    DeviceUsageDescription (::std::ostream& os,
                            const ::st434::s377m::types::UTF16CharString& x, 
                            ::xercesc::DOMErrorHandler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DeviceUsageDescription (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::UTF16CharString& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    DeviceUsageDescription (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::UTF16CharString& x, 
                            ::xml_schema::error_handler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    DeviceUsageDescription (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::UTF16CharString& x, 
                            ::xercesc::DOMErrorHandler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DeviceUsageDescription (::xercesc::DOMDocument& d,
                            const ::st434::s377m::types::UTF16CharString& x,
                            ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DeviceUsageDescription (const ::st434::s377m::types::UTF16CharString& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    HeaderByteCount (::std::ostream& os,
                     const ::st434::s377m::types::UInt64& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    HeaderByteCount (::std::ostream& os,
                     const ::st434::s377m::types::UInt64& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    HeaderByteCount (::std::ostream& os,
                     const ::st434::s377m::types::UInt64& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    HeaderByteCount (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UInt64& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    HeaderByteCount (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UInt64& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    HeaderByteCount (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UInt64& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    HeaderByteCount (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::UInt64& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    HeaderByteCount (const ::st434::s377m::types::UInt64& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    IndexByteCount (::std::ostream& os,
                    const ::st434::s377m::types::UInt64& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    IndexByteCount (::std::ostream& os,
                    const ::st434::s377m::types::UInt64& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    IndexByteCount (::std::ostream& os,
                    const ::st434::s377m::types::UInt64& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    IndexByteCount (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UInt64& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    IndexByteCount (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UInt64& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    IndexByteCount (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UInt64& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    IndexByteCount (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::UInt64& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    IndexByteCount (const ::st434::s377m::types::UInt64& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    FrameLayout (::std::ostream& os,
                 const ::st434::s377m::types::UInt8& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    FrameLayout (::std::ostream& os,
                 const ::st434::s377m::types::UInt8& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    FrameLayout (::std::ostream& os,
                 const ::st434::s377m::types::UInt8& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    FrameLayout (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UInt8& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    FrameLayout (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UInt8& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    FrameLayout (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UInt8& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    FrameLayout (::xercesc::DOMDocument& d,
                 const ::st434::s377m::types::UInt8& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    FrameLayout (const ::st434::s377m::types::UInt8& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    FieldDominance (::std::ostream& os,
                    const ::st434::s377m::types::UInt8& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    FieldDominance (::std::ostream& os,
                    const ::st434::s377m::types::UInt8& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    FieldDominance (::std::ostream& os,
                    const ::st434::s377m::types::UInt8& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    FieldDominance (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UInt8& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    FieldDominance (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UInt8& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    FieldDominance (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UInt8& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    FieldDominance (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::UInt8& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    FieldDominance (const ::st434::s377m::types::UInt8& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    QuantizationBits (::std::ostream& os,
                      const ::st434::s377m::types::UInt32& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    QuantizationBits (::std::ostream& os,
                      const ::st434::s377m::types::UInt32& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    QuantizationBits (::std::ostream& os,
                      const ::st434::s377m::types::UInt32& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    QuantizationBits (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UInt32& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    QuantizationBits (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UInt32& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    QuantizationBits (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UInt32& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    QuantizationBits (::xercesc::DOMDocument& d,
                      const ::st434::s377m::types::UInt32& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    QuantizationBits (const ::st434::s377m::types::UInt32& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DisplayF2Offset (::std::ostream& os,
                     const ::st434::s377m::types::Int32& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    DisplayF2Offset (::std::ostream& os,
                     const ::st434::s377m::types::Int32& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    DisplayF2Offset (::std::ostream& os,
                     const ::st434::s377m::types::Int32& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DisplayF2Offset (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::Int32& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    DisplayF2Offset (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::Int32& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    DisplayF2Offset (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::Int32& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DisplayF2Offset (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::Int32& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DisplayF2Offset (const ::st434::s377m::types::Int32& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DialNorm (::std::ostream& os,
              const ::st434::s377m::types::Int8& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    DialNorm (::std::ostream& os,
              const ::st434::s377m::types::Int8& x, 
              ::xml_schema::error_handler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    DialNorm (::std::ostream& os,
              const ::st434::s377m::types::Int8& x, 
              ::xercesc::DOMErrorHandler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DialNorm (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::Int8& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    DialNorm (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::Int8& x, 
              ::xml_schema::error_handler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    DialNorm (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::Int8& x, 
              ::xercesc::DOMErrorHandler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DialNorm (::xercesc::DOMDocument& d,
              const ::st434::s377m::types::Int8& x,
              ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DialNorm (const ::st434::s377m::types::Int8& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SoundCompression (::std::ostream& os,
                      const ::st434::s377m::types::UL& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    SoundCompression (::std::ostream& os,
                      const ::st434::s377m::types::UL& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    SoundCompression (::std::ostream& os,
                      const ::st434::s377m::types::UL& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SoundCompression (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UL& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    SoundCompression (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UL& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    SoundCompression (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UL& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SoundCompression (::xercesc::DOMDocument& d,
                      const ::st434::s377m::types::UL& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SoundCompression (const ::st434::s377m::types::UL& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PaletteLayout (::std::ostream& os,
                   const ::st434::s377m::types::RGBALayout& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    PaletteLayout (::std::ostream& os,
                   const ::st434::s377m::types::RGBALayout& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    PaletteLayout (::std::ostream& os,
                   const ::st434::s377m::types::RGBALayout& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PaletteLayout (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::RGBALayout& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    PaletteLayout (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::RGBALayout& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    PaletteLayout (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::RGBALayout& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PaletteLayout (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::RGBALayout& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PaletteLayout (const ::st434::s377m::types::RGBALayout& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ScanningDirection (::std::ostream& os,
                       const ::st434::s377m::types::Orientation& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ScanningDirection (::std::ostream& os,
                       const ::st434::s377m::types::Orientation& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ScanningDirection (::std::ostream& os,
                       const ::st434::s377m::types::Orientation& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ScanningDirection (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::Orientation& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ScanningDirection (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::Orientation& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ScanningDirection (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::Orientation& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ScanningDirection (::xercesc::DOMDocument& d,
                       const ::st434::s377m::types::Orientation& x,
                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ScanningDirection (const ::st434::s377m::types::Orientation& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ColorRange (::std::ostream& os,
                const ::st434::s377m::types::UInt32& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    ColorRange (::std::ostream& os,
                const ::st434::s377m::types::UInt32& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    ColorRange (::std::ostream& os,
                const ::st434::s377m::types::UInt32& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ColorRange (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt32& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    ColorRange (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt32& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    ColorRange (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt32& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ColorRange (::xercesc::DOMDocument& d,
                const ::st434::s377m::types::UInt32& x,
                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ColorRange (const ::st434::s377m::types::UInt32& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PixelLayout (::std::ostream& os,
                 const ::st434::s377m::types::RGBALayout& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    PixelLayout (::std::ostream& os,
                 const ::st434::s377m::types::RGBALayout& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    PixelLayout (::std::ostream& os,
                 const ::st434::s377m::types::RGBALayout& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PixelLayout (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::RGBALayout& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    PixelLayout (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::RGBALayout& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    PixelLayout (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::RGBALayout& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PixelLayout (::xercesc::DOMDocument& d,
                 const ::st434::s377m::types::RGBALayout& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PixelLayout (const ::st434::s377m::types::RGBALayout& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SignalStandard (::std::ostream& os,
                    const ::st434::s377m::types::SignalStandard& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SignalStandard (::std::ostream& os,
                    const ::st434::s377m::types::SignalStandard& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SignalStandard (::std::ostream& os,
                    const ::st434::s377m::types::SignalStandard& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SignalStandard (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::SignalStandard& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SignalStandard (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::SignalStandard& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SignalStandard (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::SignalStandard& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SignalStandard (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::SignalStandard& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SignalStandard (const ::st434::s377m::types::SignalStandard& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    AudioSampleRate (::std::ostream& os,
                     const ::st434::s377m::types::Rational& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    AudioSampleRate (::std::ostream& os,
                     const ::st434::s377m::types::Rational& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    AudioSampleRate (::std::ostream& os,
                     const ::st434::s377m::types::Rational& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    AudioSampleRate (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::Rational& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    AudioSampleRate (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::Rational& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    AudioSampleRate (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::Rational& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    AudioSampleRate (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::Rational& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    AudioSampleRate (const ::st434::s377m::types::Rational& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    VerticalSubsampling (::std::ostream& os,
                         const ::st434::s377m::types::UInt32& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    VerticalSubsampling (::std::ostream& os,
                         const ::st434::s377m::types::UInt32& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    VerticalSubsampling (::std::ostream& os,
                         const ::st434::s377m::types::UInt32& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    VerticalSubsampling (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::UInt32& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    VerticalSubsampling (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::UInt32& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    VerticalSubsampling (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::UInt32& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    VerticalSubsampling (::xercesc::DOMDocument& d,
                         const ::st434::s377m::types::UInt32& x,
                         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    VerticalSubsampling (const ::st434::s377m::types::UInt32& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    TimecodeSource (::std::ostream& os,
                    const ::st434::s377m::types::UInt8& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    TimecodeSource (::std::ostream& os,
                    const ::st434::s377m::types::UInt8& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    TimecodeSource (::std::ostream& os,
                    const ::st434::s377m::types::UInt8& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    TimecodeSource (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UInt8& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    TimecodeSource (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UInt8& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    TimecodeSource (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UInt8& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    TimecodeSource (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::UInt8& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    TimecodeSource (const ::st434::s377m::types::UInt8& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ChannelCount (::std::ostream& os,
                  const ::st434::s377m::types::UInt32& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    ChannelCount (::std::ostream& os,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    ChannelCount (::std::ostream& os,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ChannelCount (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt32& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    ChannelCount (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    ChannelCount (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ChannelCount (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UInt32& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ChannelCount (const ::st434::s377m::types::UInt32& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    AlphaMinRef (::std::ostream& os,
                 const ::st434::s377m::types::UInt32& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    AlphaMinRef (::std::ostream& os,
                 const ::st434::s377m::types::UInt32& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    AlphaMinRef (::std::ostream& os,
                 const ::st434::s377m::types::UInt32& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    AlphaMinRef (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UInt32& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    AlphaMinRef (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UInt32& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    AlphaMinRef (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UInt32& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    AlphaMinRef (::xercesc::DOMDocument& d,
                 const ::st434::s377m::types::UInt32& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    AlphaMinRef (const ::st434::s377m::types::UInt32& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Locked (::std::ostream& os,
            const ::st434::s377m::types::Boolean& x, 
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    void
    Locked (::std::ostream& os,
            const ::st434::s377m::types::Boolean& x, 
            ::xml_schema::error_handler& eh,
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    void
    Locked (::std::ostream& os,
            const ::st434::s377m::types::Boolean& x, 
            ::xercesc::DOMErrorHandler& eh,
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Locked (::xercesc::XMLFormatTarget& ft,
            const ::st434::s377m::types::Boolean& x, 
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    void
    Locked (::xercesc::XMLFormatTarget& ft,
            const ::st434::s377m::types::Boolean& x, 
            ::xml_schema::error_handler& eh,
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    void
    Locked (::xercesc::XMLFormatTarget& ft,
            const ::st434::s377m::types::Boolean& x, 
            ::xercesc::DOMErrorHandler& eh,
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Locked (::xercesc::DOMDocument& d,
            const ::st434::s377m::types::Boolean& x,
            ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    Locked (const ::st434::s377m::types::Boolean& x, 
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PictureCompression (::std::ostream& os,
                        const ::st434::s377m::types::UL& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PictureCompression (::std::ostream& os,
                        const ::st434::s377m::types::UL& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PictureCompression (::std::ostream& os,
                        const ::st434::s377m::types::UL& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PictureCompression (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UL& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PictureCompression (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UL& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PictureCompression (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UL& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PictureCompression (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::UL& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PictureCompression (const ::st434::s377m::types::UL& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    StoredF2Offset (::std::ostream& os,
                    const ::st434::s377m::types::Int32& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    StoredF2Offset (::std::ostream& os,
                    const ::st434::s377m::types::Int32& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    StoredF2Offset (::std::ostream& os,
                    const ::st434::s377m::types::Int32& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    StoredF2Offset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Int32& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    StoredF2Offset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Int32& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    StoredF2Offset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Int32& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    StoredF2Offset (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::Int32& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    StoredF2Offset (const ::st434::s377m::types::Int32& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ActiveFormatDescriptor (::std::ostream& os,
                            const ::st434::s377m::types::UInt8& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    ActiveFormatDescriptor (::std::ostream& os,
                            const ::st434::s377m::types::UInt8& x, 
                            ::xml_schema::error_handler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    ActiveFormatDescriptor (::std::ostream& os,
                            const ::st434::s377m::types::UInt8& x, 
                            ::xercesc::DOMErrorHandler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ActiveFormatDescriptor (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::UInt8& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    ActiveFormatDescriptor (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::UInt8& x, 
                            ::xml_schema::error_handler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    ActiveFormatDescriptor (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::UInt8& x, 
                            ::xercesc::DOMErrorHandler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ActiveFormatDescriptor (::xercesc::DOMDocument& d,
                            const ::st434::s377m::types::UInt8& x,
                            ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ActiveFormatDescriptor (const ::st434::s377m::types::UInt8& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    VideoLineMap_ (::std::ostream& os,
                   const ::properties::S335M::VideoLineMap& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    VideoLineMap_ (::std::ostream& os,
                   const ::properties::S335M::VideoLineMap& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    VideoLineMap_ (::std::ostream& os,
                   const ::properties::S335M::VideoLineMap& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    VideoLineMap_ (::xercesc::XMLFormatTarget& ft,
                   const ::properties::S335M::VideoLineMap& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    VideoLineMap_ (::xercesc::XMLFormatTarget& ft,
                   const ::properties::S335M::VideoLineMap& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    VideoLineMap_ (::xercesc::XMLFormatTarget& ft,
                   const ::properties::S335M::VideoLineMap& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    VideoLineMap_ (::xercesc::DOMDocument& d,
                   const ::properties::S335M::VideoLineMap& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    VideoLineMap_ (const ::properties::S335M::VideoLineMap& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ImageAlignmentFactor (::std::ostream& os,
                          const ::st434::s377m::types::UInt32& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    ImageAlignmentFactor (::std::ostream& os,
                          const ::st434::s377m::types::UInt32& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    ImageAlignmentFactor (::std::ostream& os,
                          const ::st434::s377m::types::UInt32& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ImageAlignmentFactor (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UInt32& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    ImageAlignmentFactor (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UInt32& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    ImageAlignmentFactor (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UInt32& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ImageAlignmentFactor (::xercesc::DOMDocument& d,
                          const ::st434::s377m::types::UInt32& x,
                          ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ImageAlignmentFactor (const ::st434::s377m::types::UInt32& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ImageStartOffset (::std::ostream& os,
                      const ::st434::s377m::types::UInt32& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    ImageStartOffset (::std::ostream& os,
                      const ::st434::s377m::types::UInt32& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    ImageStartOffset (::std::ostream& os,
                      const ::st434::s377m::types::UInt32& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ImageStartOffset (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UInt32& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    ImageStartOffset (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UInt32& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    ImageStartOffset (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UInt32& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ImageStartOffset (::xercesc::DOMDocument& d,
                      const ::st434::s377m::types::UInt32& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ImageStartOffset (const ::st434::s377m::types::UInt32& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ImageEndOffset (::std::ostream& os,
                    const ::st434::s377m::types::UInt32& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ImageEndOffset (::std::ostream& os,
                    const ::st434::s377m::types::UInt32& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ImageEndOffset (::std::ostream& os,
                    const ::st434::s377m::types::UInt32& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ImageEndOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UInt32& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ImageEndOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UInt32& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ImageEndOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UInt32& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ImageEndOffset (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::UInt32& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ImageEndOffset (const ::st434::s377m::types::UInt32& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PaddingBits (::std::ostream& os,
                 const ::st434::s377m::types::Int16& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    PaddingBits (::std::ostream& os,
                 const ::st434::s377m::types::Int16& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    PaddingBits (::std::ostream& os,
                 const ::st434::s377m::types::Int16& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PaddingBits (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::Int16& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    PaddingBits (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::Int16& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    PaddingBits (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::Int16& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PaddingBits (::xercesc::DOMDocument& d,
                 const ::st434::s377m::types::Int16& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PaddingBits (const ::st434::s377m::types::Int16& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SampledXOffset (::std::ostream& os,
                    const ::st434::s377m::types::Int32& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SampledXOffset (::std::ostream& os,
                    const ::st434::s377m::types::Int32& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SampledXOffset (::std::ostream& os,
                    const ::st434::s377m::types::Int32& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SampledXOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Int32& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SampledXOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Int32& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SampledXOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Int32& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SampledXOffset (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::Int32& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SampledXOffset (const ::st434::s377m::types::Int32& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SampledWidth (::std::ostream& os,
                  const ::st434::s377m::types::UInt32& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    SampledWidth (::std::ostream& os,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    SampledWidth (::std::ostream& os,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SampledWidth (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt32& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    SampledWidth (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    SampledWidth (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SampledWidth (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UInt32& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SampledWidth (const ::st434::s377m::types::UInt32& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    IncludeSync (::std::ostream& os,
                 const ::st434::s377m::types::Boolean& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    IncludeSync (::std::ostream& os,
                 const ::st434::s377m::types::Boolean& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    IncludeSync (::std::ostream& os,
                 const ::st434::s377m::types::Boolean& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    IncludeSync (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::Boolean& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    IncludeSync (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::Boolean& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    IncludeSync (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::Boolean& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    IncludeSync (::xercesc::DOMDocument& d,
                 const ::st434::s377m::types::Boolean& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    IncludeSync (const ::st434::s377m::types::Boolean& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DropFrame (::std::ostream& os,
               const ::st434::s377m::types::Boolean& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    DropFrame (::std::ostream& os,
               const ::st434::s377m::types::Boolean& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    DropFrame (::std::ostream& os,
               const ::st434::s377m::types::Boolean& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DropFrame (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::Boolean& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    DropFrame (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::Boolean& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    DropFrame (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::Boolean& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DropFrame (::xercesc::DOMDocument& d,
               const ::st434::s377m::types::Boolean& x,
               ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DropFrame (const ::st434::s377m::types::Boolean& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    BlackRefLevel (::std::ostream& os,
                   const ::st434::s377m::types::UInt32& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    BlackRefLevel (::std::ostream& os,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    BlackRefLevel (::std::ostream& os,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    BlackRefLevel (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt32& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    BlackRefLevel (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    BlackRefLevel (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    BlackRefLevel (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::UInt32& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    BlackRefLevel (const ::st434::s377m::types::UInt32& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SampledHeight (::std::ostream& os,
                   const ::st434::s377m::types::UInt32& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    SampledHeight (::std::ostream& os,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    SampledHeight (::std::ostream& os,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SampledHeight (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt32& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    SampledHeight (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    SampledHeight (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SampledHeight (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::UInt32& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SampledHeight (const ::st434::s377m::types::UInt32& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ColorSiting (::std::ostream& os,
                 const ::st434::s377m::types::UInt8& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    ColorSiting (::std::ostream& os,
                 const ::st434::s377m::types::UInt8& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    ColorSiting (::std::ostream& os,
                 const ::st434::s377m::types::UInt8& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ColorSiting (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UInt8& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    ColorSiting (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UInt8& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    ColorSiting (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UInt8& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ColorSiting (::xercesc::DOMDocument& d,
                 const ::st434::s377m::types::UInt8& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ColorSiting (const ::st434::s377m::types::UInt8& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    HorizontalSubsampling (::std::ostream& os,
                           const ::st434::s377m::types::UInt32& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    HorizontalSubsampling (::std::ostream& os,
                           const ::st434::s377m::types::UInt32& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    HorizontalSubsampling (::std::ostream& os,
                           const ::st434::s377m::types::UInt32& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    HorizontalSubsampling (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UInt32& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    HorizontalSubsampling (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UInt32& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    HorizontalSubsampling (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UInt32& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    HorizontalSubsampling (::xercesc::DOMDocument& d,
                           const ::st434::s377m::types::UInt32& x,
                           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    HorizontalSubsampling (const ::st434::s377m::types::UInt32& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ComponentDepth (::std::ostream& os,
                    const ::st434::s377m::types::UInt32& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ComponentDepth (::std::ostream& os,
                    const ::st434::s377m::types::UInt32& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ComponentDepth (::std::ostream& os,
                    const ::st434::s377m::types::UInt32& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ComponentDepth (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UInt32& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ComponentDepth (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UInt32& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ComponentDepth (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UInt32& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ComponentDepth (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::UInt32& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ComponentDepth (const ::st434::s377m::types::UInt32& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ComponentMinRef (::std::ostream& os,
                     const ::st434::s377m::types::UInt32& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ComponentMinRef (::std::ostream& os,
                     const ::st434::s377m::types::UInt32& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ComponentMinRef (::std::ostream& os,
                     const ::st434::s377m::types::UInt32& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ComponentMinRef (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UInt32& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ComponentMinRef (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UInt32& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ComponentMinRef (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UInt32& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ComponentMinRef (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::UInt32& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ComponentMinRef (const ::st434::s377m::types::UInt32& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ComponentMaxRef (::std::ostream& os,
                     const ::st434::s377m::types::UInt32& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ComponentMaxRef (::std::ostream& os,
                     const ::st434::s377m::types::UInt32& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ComponentMaxRef (::std::ostream& os,
                     const ::st434::s377m::types::UInt32& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ComponentMaxRef (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UInt32& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ComponentMaxRef (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UInt32& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ComponentMaxRef (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UInt32& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ComponentMaxRef (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::UInt32& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ComponentMaxRef (const ::st434::s377m::types::UInt32& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    AlphaMaxRef (::std::ostream& os,
                 const ::st434::s377m::types::UInt32& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    AlphaMaxRef (::std::ostream& os,
                 const ::st434::s377m::types::UInt32& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    AlphaMaxRef (::std::ostream& os,
                 const ::st434::s377m::types::UInt32& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    AlphaMaxRef (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UInt32& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    AlphaMaxRef (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UInt32& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    AlphaMaxRef (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UInt32& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    AlphaMaxRef (::xercesc::DOMDocument& d,
                 const ::st434::s377m::types::UInt32& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    AlphaMaxRef (const ::st434::s377m::types::UInt32& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DisplayWidth (::std::ostream& os,
                  const ::st434::s377m::types::UInt32& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    DisplayWidth (::std::ostream& os,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    DisplayWidth (::std::ostream& os,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DisplayWidth (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt32& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    DisplayWidth (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    DisplayWidth (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DisplayWidth (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UInt32& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DisplayWidth (const ::st434::s377m::types::UInt32& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DisplayHeight (::std::ostream& os,
                   const ::st434::s377m::types::UInt32& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    DisplayHeight (::std::ostream& os,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    DisplayHeight (::std::ostream& os,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DisplayHeight (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt32& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    DisplayHeight (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    DisplayHeight (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DisplayHeight (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::UInt32& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DisplayHeight (const ::st434::s377m::types::UInt32& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SampledYOffset (::std::ostream& os,
                    const ::st434::s377m::types::Int32& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SampledYOffset (::std::ostream& os,
                    const ::st434::s377m::types::Int32& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SampledYOffset (::std::ostream& os,
                    const ::st434::s377m::types::Int32& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SampledYOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Int32& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SampledYOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Int32& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SampledYOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Int32& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SampledYOffset (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::Int32& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SampledYOffset (const ::st434::s377m::types::Int32& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    FramesPerSecond (::std::ostream& os,
                     const ::st434::s377m::types::UInt16& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    FramesPerSecond (::std::ostream& os,
                     const ::st434::s377m::types::UInt16& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    FramesPerSecond (::std::ostream& os,
                     const ::st434::s377m::types::UInt16& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    FramesPerSecond (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UInt16& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    FramesPerSecond (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UInt16& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    FramesPerSecond (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UInt16& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    FramesPerSecond (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::UInt16& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    FramesPerSecond (const ::st434::s377m::types::UInt16& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DisplayYOffset (::std::ostream& os,
                    const ::st434::s377m::types::Int32& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    DisplayYOffset (::std::ostream& os,
                    const ::st434::s377m::types::Int32& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    DisplayYOffset (::std::ostream& os,
                    const ::st434::s377m::types::Int32& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DisplayYOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Int32& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    DisplayYOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Int32& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    DisplayYOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Int32& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DisplayYOffset (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::Int32& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DisplayYOffset (const ::st434::s377m::types::Int32& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DisplayXOffset (::std::ostream& os,
                    const ::st434::s377m::types::Int32& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    DisplayXOffset (::std::ostream& os,
                    const ::st434::s377m::types::Int32& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    DisplayXOffset (::std::ostream& os,
                    const ::st434::s377m::types::Int32& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DisplayXOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Int32& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    DisplayXOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Int32& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    DisplayXOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Int32& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DisplayXOffset (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::Int32& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DisplayXOffset (const ::st434::s377m::types::Int32& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    TimecodeStreamSampleRate (::std::ostream& os,
                              const ::st434::s377m::types::Rational& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    TimecodeStreamSampleRate (::std::ostream& os,
                              const ::st434::s377m::types::Rational& x, 
                              ::xml_schema::error_handler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    TimecodeStreamSampleRate (::std::ostream& os,
                              const ::st434::s377m::types::Rational& x, 
                              ::xercesc::DOMErrorHandler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    TimecodeStreamSampleRate (::xercesc::XMLFormatTarget& ft,
                              const ::st434::s377m::types::Rational& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    TimecodeStreamSampleRate (::xercesc::XMLFormatTarget& ft,
                              const ::st434::s377m::types::Rational& x, 
                              ::xml_schema::error_handler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    TimecodeStreamSampleRate (::xercesc::XMLFormatTarget& ft,
                              const ::st434::s377m::types::Rational& x, 
                              ::xercesc::DOMErrorHandler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    TimecodeStreamSampleRate (::xercesc::DOMDocument& d,
                              const ::st434::s377m::types::Rational& x,
                              ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    TimecodeStreamSampleRate (const ::st434::s377m::types::Rational& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ElectrospatialFormulation_ (::std::ostream& os,
                                const ::properties::S335M::ElectrospatialFormulation& x, 
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    void
    ElectrospatialFormulation_ (::std::ostream& os,
                                const ::properties::S335M::ElectrospatialFormulation& x, 
                                ::xml_schema::error_handler& eh,
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    void
    ElectrospatialFormulation_ (::std::ostream& os,
                                const ::properties::S335M::ElectrospatialFormulation& x, 
                                ::xercesc::DOMErrorHandler& eh,
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ElectrospatialFormulation_ (::xercesc::XMLFormatTarget& ft,
                                const ::properties::S335M::ElectrospatialFormulation& x, 
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    void
    ElectrospatialFormulation_ (::xercesc::XMLFormatTarget& ft,
                                const ::properties::S335M::ElectrospatialFormulation& x, 
                                ::xml_schema::error_handler& eh,
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    void
    ElectrospatialFormulation_ (::xercesc::XMLFormatTarget& ft,
                                const ::properties::S335M::ElectrospatialFormulation& x, 
                                ::xercesc::DOMErrorHandler& eh,
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ElectrospatialFormulation_ (::xercesc::DOMDocument& d,
                                const ::properties::S335M::ElectrospatialFormulation& x,
                                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ElectrospatialFormulation_ (const ::properties::S335M::ElectrospatialFormulation& x, 
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DataEssenceCoding (::std::ostream& os,
                       const ::st434::s377m::types::UL& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    DataEssenceCoding (::std::ostream& os,
                       const ::st434::s377m::types::UL& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    DataEssenceCoding (::std::ostream& os,
                       const ::st434::s377m::types::UL& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DataEssenceCoding (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UL& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    DataEssenceCoding (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UL& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    DataEssenceCoding (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UL& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DataEssenceCoding (::xercesc::DOMDocument& d,
                       const ::st434::s377m::types::UL& x,
                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DataEssenceCoding (const ::st434::s377m::types::UL& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    TransferCharacteristic (::std::ostream& os,
                            const ::st434::s377m::types::UL& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    TransferCharacteristic (::std::ostream& os,
                            const ::st434::s377m::types::UL& x, 
                            ::xml_schema::error_handler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    TransferCharacteristic (::std::ostream& os,
                            const ::st434::s377m::types::UL& x, 
                            ::xercesc::DOMErrorHandler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    TransferCharacteristic (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::UL& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    TransferCharacteristic (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::UL& x, 
                            ::xml_schema::error_handler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    TransferCharacteristic (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::UL& x, 
                            ::xercesc::DOMErrorHandler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    TransferCharacteristic (::xercesc::DOMDocument& d,
                            const ::st434::s377m::types::UL& x,
                            ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    TransferCharacteristic (const ::st434::s377m::types::UL& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    StoredWidth (::std::ostream& os,
                 const ::st434::s377m::types::UInt32& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    StoredWidth (::std::ostream& os,
                 const ::st434::s377m::types::UInt32& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    StoredWidth (::std::ostream& os,
                 const ::st434::s377m::types::UInt32& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    StoredWidth (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UInt32& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    StoredWidth (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UInt32& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    StoredWidth (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UInt32& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    StoredWidth (::xercesc::DOMDocument& d,
                 const ::st434::s377m::types::UInt32& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    StoredWidth (const ::st434::s377m::types::UInt32& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    AudioReferenceLevel (::std::ostream& os,
                         const ::st434::s377m::types::Int8& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    AudioReferenceLevel (::std::ostream& os,
                         const ::st434::s377m::types::Int8& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    AudioReferenceLevel (::std::ostream& os,
                         const ::st434::s377m::types::Int8& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    AudioReferenceLevel (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::Int8& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    AudioReferenceLevel (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::Int8& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    AudioReferenceLevel (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::Int8& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    AudioReferenceLevel (::xercesc::DOMDocument& d,
                         const ::st434::s377m::types::Int8& x,
                         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    AudioReferenceLevel (const ::st434::s377m::types::Int8& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    StoredHeight (::std::ostream& os,
                  const ::st434::s377m::types::UInt32& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    StoredHeight (::std::ostream& os,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    StoredHeight (::std::ostream& os,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    StoredHeight (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt32& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    StoredHeight (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    StoredHeight (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    StoredHeight (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UInt32& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    StoredHeight (const ::st434::s377m::types::UInt32& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    EssenceLength (::std::ostream& os,
                   const ::st434::s377m::types::Length& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    EssenceLength (::std::ostream& os,
                   const ::st434::s377m::types::Length& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    EssenceLength (::std::ostream& os,
                   const ::st434::s377m::types::Length& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    EssenceLength (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::Length& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    EssenceLength (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::Length& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    EssenceLength (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::Length& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    EssenceLength (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::Length& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    EssenceLength (const ::st434::s377m::types::Length& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SampleRate (::std::ostream& os,
                const ::st434::s377m::types::Rational& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    SampleRate (::std::ostream& os,
                const ::st434::s377m::types::Rational& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    SampleRate (::std::ostream& os,
                const ::st434::s377m::types::Rational& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SampleRate (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::Rational& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    SampleRate (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::Rational& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    SampleRate (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::Rational& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SampleRate (::xercesc::DOMDocument& d,
                const ::st434::s377m::types::Rational& x,
                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SampleRate (const ::st434::s377m::types::Rational& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ComponentDataDefinition (::std::ostream& os,
                             const ::st434::s377m::types::UL& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    ComponentDataDefinition (::std::ostream& os,
                             const ::st434::s377m::types::UL& x, 
                             ::xml_schema::error_handler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    ComponentDataDefinition (::std::ostream& os,
                             const ::st434::s377m::types::UL& x, 
                             ::xercesc::DOMErrorHandler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ComponentDataDefinition (::xercesc::XMLFormatTarget& ft,
                             const ::st434::s377m::types::UL& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    ComponentDataDefinition (::xercesc::XMLFormatTarget& ft,
                             const ::st434::s377m::types::UL& x, 
                             ::xml_schema::error_handler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    ComponentDataDefinition (::xercesc::XMLFormatTarget& ft,
                             const ::st434::s377m::types::UL& x, 
                             ::xercesc::DOMErrorHandler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ComponentDataDefinition (::xercesc::DOMDocument& d,
                             const ::st434::s377m::types::UL& x,
                             ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ComponentDataDefinition (const ::st434::s377m::types::UL& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    TimecodeStreamData (::std::ostream& os,
                        const ::st434::s377m::types::DataStream& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    TimecodeStreamData (::std::ostream& os,
                        const ::st434::s377m::types::DataStream& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    TimecodeStreamData (::std::ostream& os,
                        const ::st434::s377m::types::DataStream& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    TimecodeStreamData (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::DataStream& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    TimecodeStreamData (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::DataStream& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    TimecodeStreamData (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::DataStream& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    TimecodeStreamData (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::DataStream& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    TimecodeStreamData (const ::st434::s377m::types::DataStream& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Palette (::std::ostream& os,
             const ::st434::s377m::types::DataStream& x, 
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    Palette (::std::ostream& os,
             const ::st434::s377m::types::DataStream& x, 
             ::xml_schema::error_handler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    Palette (::std::ostream& os,
             const ::st434::s377m::types::DataStream& x, 
             ::xercesc::DOMErrorHandler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Palette (::xercesc::XMLFormatTarget& ft,
             const ::st434::s377m::types::DataStream& x, 
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    Palette (::xercesc::XMLFormatTarget& ft,
             const ::st434::s377m::types::DataStream& x, 
             ::xml_schema::error_handler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    Palette (::xercesc::XMLFormatTarget& ft,
             const ::st434::s377m::types::DataStream& x, 
             ::xercesc::DOMErrorHandler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Palette (::xercesc::DOMDocument& d,
             const ::st434::s377m::types::DataStream& x,
             ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    Palette (const ::st434::s377m::types::DataStream& x, 
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    WhiteRefLevel (::std::ostream& os,
                   const ::st434::s377m::types::UInt32& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    WhiteRefLevel (::std::ostream& os,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    WhiteRefLevel (::std::ostream& os,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    WhiteRefLevel (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt32& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    WhiteRefLevel (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    WhiteRefLevel (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    WhiteRefLevel (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::UInt32& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    WhiteRefLevel (const ::st434::s377m::types::UInt32& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    AlphaSampleDepth (::std::ostream& os,
                      const ::st434::s377m::types::UInt32& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    AlphaSampleDepth (::std::ostream& os,
                      const ::st434::s377m::types::UInt32& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    AlphaSampleDepth (::std::ostream& os,
                      const ::st434::s377m::types::UInt32& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    AlphaSampleDepth (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UInt32& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    AlphaSampleDepth (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UInt32& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    AlphaSampleDepth (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UInt32& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    AlphaSampleDepth (::xercesc::DOMDocument& d,
                      const ::st434::s377m::types::UInt32& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    AlphaSampleDepth (const ::st434::s377m::types::UInt32& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ImageAspectRatio (::std::ostream& os,
                      const ::st434::s377m::types::Rational& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    ImageAspectRatio (::std::ostream& os,
                      const ::st434::s377m::types::Rational& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    ImageAspectRatio (::std::ostream& os,
                      const ::st434::s377m::types::Rational& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ImageAspectRatio (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::Rational& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    ImageAspectRatio (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::Rational& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    ImageAspectRatio (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::Rational& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ImageAspectRatio (::xercesc::DOMDocument& d,
                      const ::st434::s377m::types::Rational& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ImageAspectRatio (const ::st434::s377m::types::Rational& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    MaxBPictureCount (::std::ostream& os,
                      const ::st434::s377m::types::UInt16& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    MaxBPictureCount (::std::ostream& os,
                      const ::st434::s377m::types::UInt16& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    MaxBPictureCount (::std::ostream& os,
                      const ::st434::s377m::types::UInt16& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    MaxBPictureCount (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UInt16& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    MaxBPictureCount (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UInt16& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    MaxBPictureCount (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UInt16& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    MaxBPictureCount (::xercesc::DOMDocument& d,
                      const ::st434::s377m::types::UInt16& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    MaxBPictureCount (const ::st434::s377m::types::UInt16& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    BitRate (::std::ostream& os,
             const ::st434::s377m::types::UInt32& x, 
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    BitRate (::std::ostream& os,
             const ::st434::s377m::types::UInt32& x, 
             ::xml_schema::error_handler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    BitRate (::std::ostream& os,
             const ::st434::s377m::types::UInt32& x, 
             ::xercesc::DOMErrorHandler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    BitRate (::xercesc::XMLFormatTarget& ft,
             const ::st434::s377m::types::UInt32& x, 
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    BitRate (::xercesc::XMLFormatTarget& ft,
             const ::st434::s377m::types::UInt32& x, 
             ::xml_schema::error_handler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    BitRate (::xercesc::XMLFormatTarget& ft,
             const ::st434::s377m::types::UInt32& x, 
             ::xercesc::DOMErrorHandler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    BitRate (::xercesc::DOMDocument& d,
             const ::st434::s377m::types::UInt32& x,
             ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    BitRate (const ::st434::s377m::types::UInt32& x, 
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ClosedGOP (::std::ostream& os,
               const ::st434::s377m::types::Boolean& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    ClosedGOP (::std::ostream& os,
               const ::st434::s377m::types::Boolean& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    ClosedGOP (::std::ostream& os,
               const ::st434::s377m::types::Boolean& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ClosedGOP (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::Boolean& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    ClosedGOP (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::Boolean& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    ClosedGOP (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::Boolean& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ClosedGOP (::xercesc::DOMDocument& d,
               const ::st434::s377m::types::Boolean& x,
               ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ClosedGOP (const ::st434::s377m::types::Boolean& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    CodedContentScanning (::std::ostream& os,
                          const ::st434::s377m::types::UInt8& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    CodedContentScanning (::std::ostream& os,
                          const ::st434::s377m::types::UInt8& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    CodedContentScanning (::std::ostream& os,
                          const ::st434::s377m::types::UInt8& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    CodedContentScanning (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UInt8& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    CodedContentScanning (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UInt8& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    CodedContentScanning (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UInt8& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    CodedContentScanning (::xercesc::DOMDocument& d,
                          const ::st434::s377m::types::UInt8& x,
                          ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    CodedContentScanning (const ::st434::s377m::types::UInt8& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ConstantBPictureCount (::std::ostream& os,
                           const ::st434::s377m::types::Boolean& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    ConstantBPictureCount (::std::ostream& os,
                           const ::st434::s377m::types::Boolean& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    ConstantBPictureCount (::std::ostream& os,
                           const ::st434::s377m::types::Boolean& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ConstantBPictureCount (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::Boolean& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    ConstantBPictureCount (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::Boolean& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    ConstantBPictureCount (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::Boolean& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ConstantBPictureCount (::xercesc::DOMDocument& d,
                           const ::st434::s377m::types::Boolean& x,
                           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ConstantBPictureCount (const ::st434::s377m::types::Boolean& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    IdenticalGOP (::std::ostream& os,
                  const ::st434::s377m::types::Boolean& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    IdenticalGOP (::std::ostream& os,
                  const ::st434::s377m::types::Boolean& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    IdenticalGOP (::std::ostream& os,
                  const ::st434::s377m::types::Boolean& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    IdenticalGOP (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::Boolean& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    IdenticalGOP (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::Boolean& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    IdenticalGOP (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::Boolean& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    IdenticalGOP (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::Boolean& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    IdenticalGOP (const ::st434::s377m::types::Boolean& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    LowDelay (::std::ostream& os,
              const ::st434::s377m::types::Boolean& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    LowDelay (::std::ostream& os,
              const ::st434::s377m::types::Boolean& x, 
              ::xml_schema::error_handler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    LowDelay (::std::ostream& os,
              const ::st434::s377m::types::Boolean& x, 
              ::xercesc::DOMErrorHandler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    LowDelay (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::Boolean& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    LowDelay (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::Boolean& x, 
              ::xml_schema::error_handler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    LowDelay (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::Boolean& x, 
              ::xercesc::DOMErrorHandler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    LowDelay (::xercesc::DOMDocument& d,
              const ::st434::s377m::types::Boolean& x,
              ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    LowDelay (const ::st434::s377m::types::Boolean& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    MaxGOP (::std::ostream& os,
            const ::st434::s377m::types::UInt16& x, 
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    void
    MaxGOP (::std::ostream& os,
            const ::st434::s377m::types::UInt16& x, 
            ::xml_schema::error_handler& eh,
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    void
    MaxGOP (::std::ostream& os,
            const ::st434::s377m::types::UInt16& x, 
            ::xercesc::DOMErrorHandler& eh,
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    MaxGOP (::xercesc::XMLFormatTarget& ft,
            const ::st434::s377m::types::UInt16& x, 
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    void
    MaxGOP (::xercesc::XMLFormatTarget& ft,
            const ::st434::s377m::types::UInt16& x, 
            ::xml_schema::error_handler& eh,
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    void
    MaxGOP (::xercesc::XMLFormatTarget& ft,
            const ::st434::s377m::types::UInt16& x, 
            ::xercesc::DOMErrorHandler& eh,
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    MaxGOP (::xercesc::DOMDocument& d,
            const ::st434::s377m::types::UInt16& x,
            ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    MaxGOP (const ::st434::s377m::types::UInt16& x, 
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ProfileAndLevel (::std::ostream& os,
                     const ::st434::s377m::types::UInt8& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ProfileAndLevel (::std::ostream& os,
                     const ::st434::s377m::types::UInt8& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ProfileAndLevel (::std::ostream& os,
                     const ::st434::s377m::types::UInt8& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ProfileAndLevel (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UInt8& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ProfileAndLevel (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UInt8& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ProfileAndLevel (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UInt8& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ProfileAndLevel (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::UInt8& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ProfileAndLevel (const ::st434::s377m::types::UInt8& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SingleSequence (::std::ostream& os,
                    const ::st434::s377m::types::Boolean& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SingleSequence (::std::ostream& os,
                    const ::st434::s377m::types::Boolean& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SingleSequence (::std::ostream& os,
                    const ::st434::s377m::types::Boolean& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SingleSequence (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Boolean& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SingleSequence (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Boolean& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SingleSequence (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Boolean& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SingleSequence (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::Boolean& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SingleSequence (const ::st434::s377m::types::Boolean& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DateTimeRate (::std::ostream& os,
                  const ::st434::s377m::types::Rational& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    DateTimeRate (::std::ostream& os,
                  const ::st434::s377m::types::Rational& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    DateTimeRate (::std::ostream& os,
                  const ::st434::s377m::types::Rational& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DateTimeRate (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::Rational& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    DateTimeRate (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::Rational& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    DateTimeRate (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::Rational& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DateTimeRate (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::Rational& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DateTimeRate (const ::st434::s377m::types::Rational& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DateTimeDropFrame (::std::ostream& os,
                       const ::st434::s377m::types::Boolean& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    DateTimeDropFrame (::std::ostream& os,
                       const ::st434::s377m::types::Boolean& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    DateTimeDropFrame (::std::ostream& os,
                       const ::st434::s377m::types::Boolean& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DateTimeDropFrame (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::Boolean& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    DateTimeDropFrame (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::Boolean& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    DateTimeDropFrame (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::Boolean& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DateTimeDropFrame (::xercesc::DOMDocument& d,
                       const ::st434::s377m::types::Boolean& x,
                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DateTimeDropFrame (const ::st434::s377m::types::Boolean& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DateTimeEmbedded (::std::ostream& os,
                      const ::st434::s377m::types::Boolean& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    DateTimeEmbedded (::std::ostream& os,
                      const ::st434::s377m::types::Boolean& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    DateTimeEmbedded (::std::ostream& os,
                      const ::st434::s377m::types::Boolean& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DateTimeEmbedded (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::Boolean& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    DateTimeEmbedded (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::Boolean& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    DateTimeEmbedded (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::Boolean& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DateTimeEmbedded (::xercesc::DOMDocument& d,
                      const ::st434::s377m::types::Boolean& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DateTimeEmbedded (const ::st434::s377m::types::Boolean& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DateTimeKind (::std::ostream& os,
                  const ::st434::s377m::types::UL& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    DateTimeKind (::std::ostream& os,
                  const ::st434::s377m::types::UL& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    DateTimeKind (::std::ostream& os,
                  const ::st434::s377m::types::UL& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DateTimeKind (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UL& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    DateTimeKind (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UL& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    DateTimeKind (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UL& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DateTimeKind (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UL& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DateTimeKind (const ::st434::s377m::types::UL& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    BlockAlign (::std::ostream& os,
                const ::st434::s377m::types::UInt16& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    BlockAlign (::std::ostream& os,
                const ::st434::s377m::types::UInt16& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    BlockAlign (::std::ostream& os,
                const ::st434::s377m::types::UInt16& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    BlockAlign (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt16& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    BlockAlign (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt16& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    BlockAlign (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt16& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    BlockAlign (::xercesc::DOMDocument& d,
                const ::st434::s377m::types::UInt16& x,
                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    BlockAlign (const ::st434::s377m::types::UInt16& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SequenceOffset (::std::ostream& os,
                    const ::st434::s377m::types::UInt8& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SequenceOffset (::std::ostream& os,
                    const ::st434::s377m::types::UInt8& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SequenceOffset (::std::ostream& os,
                    const ::st434::s377m::types::UInt8& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SequenceOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UInt8& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SequenceOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UInt8& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SequenceOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UInt8& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SequenceOffset (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::UInt8& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SequenceOffset (const ::st434::s377m::types::UInt8& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    AverageBytesPerSecond (::std::ostream& os,
                           const ::st434::s377m::types::UInt32& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    AverageBytesPerSecond (::std::ostream& os,
                           const ::st434::s377m::types::UInt32& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    AverageBytesPerSecond (::std::ostream& os,
                           const ::st434::s377m::types::UInt32& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    AverageBytesPerSecond (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UInt32& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    AverageBytesPerSecond (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UInt32& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    AverageBytesPerSecond (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UInt32& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    AverageBytesPerSecond (::xercesc::DOMDocument& d,
                           const ::st434::s377m::types::UInt32& x,
                           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    AverageBytesPerSecond (const ::st434::s377m::types::UInt32& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PeakEnvelope (::std::ostream& os,
                  const ::st434::s377m::types::DataStream& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    PeakEnvelope (::std::ostream& os,
                  const ::st434::s377m::types::DataStream& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    PeakEnvelope (::std::ostream& os,
                  const ::st434::s377m::types::DataStream& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PeakEnvelope (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::DataStream& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    PeakEnvelope (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::DataStream& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    PeakEnvelope (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::DataStream& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PeakEnvelope (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::DataStream& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PeakEnvelope (const ::st434::s377m::types::DataStream& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ChannelAssignment (::std::ostream& os,
                       const ::st434::s377m::types::UL& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ChannelAssignment (::std::ostream& os,
                       const ::st434::s377m::types::UL& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ChannelAssignment (::std::ostream& os,
                       const ::st434::s377m::types::UL& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ChannelAssignment (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UL& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ChannelAssignment (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UL& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ChannelAssignment (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UL& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ChannelAssignment (::xercesc::DOMDocument& d,
                       const ::st434::s377m::types::UL& x,
                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ChannelAssignment (const ::st434::s377m::types::UL& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PeakEnvelopeVersion (::std::ostream& os,
                         const ::st434::s377m::types::UInt32& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    PeakEnvelopeVersion (::std::ostream& os,
                         const ::st434::s377m::types::UInt32& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    PeakEnvelopeVersion (::std::ostream& os,
                         const ::st434::s377m::types::UInt32& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PeakEnvelopeVersion (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::UInt32& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    PeakEnvelopeVersion (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::UInt32& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    PeakEnvelopeVersion (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::UInt32& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PeakEnvelopeVersion (::xercesc::DOMDocument& d,
                         const ::st434::s377m::types::UInt32& x,
                         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PeakEnvelopeVersion (const ::st434::s377m::types::UInt32& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PeakEnvelopeFormat (::std::ostream& os,
                        const ::st434::s377m::types::UInt32& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PeakEnvelopeFormat (::std::ostream& os,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PeakEnvelopeFormat (::std::ostream& os,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PeakEnvelopeFormat (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UInt32& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PeakEnvelopeFormat (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PeakEnvelopeFormat (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PeakEnvelopeFormat (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::UInt32& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PeakEnvelopeFormat (const ::st434::s377m::types::UInt32& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PointsPerPeakValue (::std::ostream& os,
                        const ::st434::s377m::types::UInt32& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PointsPerPeakValue (::std::ostream& os,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PointsPerPeakValue (::std::ostream& os,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PointsPerPeakValue (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UInt32& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PointsPerPeakValue (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PointsPerPeakValue (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PointsPerPeakValue (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::UInt32& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PointsPerPeakValue (const ::st434::s377m::types::UInt32& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PeakEnvelopeBlockSize (::std::ostream& os,
                           const ::st434::s377m::types::UInt32& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    PeakEnvelopeBlockSize (::std::ostream& os,
                           const ::st434::s377m::types::UInt32& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    PeakEnvelopeBlockSize (::std::ostream& os,
                           const ::st434::s377m::types::UInt32& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PeakEnvelopeBlockSize (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UInt32& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    PeakEnvelopeBlockSize (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UInt32& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    PeakEnvelopeBlockSize (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UInt32& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PeakEnvelopeBlockSize (::xercesc::DOMDocument& d,
                           const ::st434::s377m::types::UInt32& x,
                           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PeakEnvelopeBlockSize (const ::st434::s377m::types::UInt32& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PeakChannels (::std::ostream& os,
                  const ::st434::s377m::types::UInt32& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    PeakChannels (::std::ostream& os,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    PeakChannels (::std::ostream& os,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PeakChannels (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt32& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    PeakChannels (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    PeakChannels (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PeakChannels (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UInt32& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PeakChannels (const ::st434::s377m::types::UInt32& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PeakFrames (::std::ostream& os,
                const ::st434::s377m::types::UInt32& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    PeakFrames (::std::ostream& os,
                const ::st434::s377m::types::UInt32& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    PeakFrames (::std::ostream& os,
                const ::st434::s377m::types::UInt32& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PeakFrames (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt32& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    PeakFrames (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt32& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    PeakFrames (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt32& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PeakFrames (::xercesc::DOMDocument& d,
                const ::st434::s377m::types::UInt32& x,
                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PeakFrames (const ::st434::s377m::types::UInt32& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PeakOfPeaksPosition (::std::ostream& os,
                         const ::st434::s377m::types::Position& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    PeakOfPeaksPosition (::std::ostream& os,
                         const ::st434::s377m::types::Position& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    PeakOfPeaksPosition (::std::ostream& os,
                         const ::st434::s377m::types::Position& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PeakOfPeaksPosition (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::Position& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    PeakOfPeaksPosition (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::Position& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    PeakOfPeaksPosition (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::Position& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PeakOfPeaksPosition (::xercesc::DOMDocument& d,
                         const ::st434::s377m::types::Position& x,
                         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PeakOfPeaksPosition (const ::st434::s377m::types::Position& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PeakEnvelopeTimestamp (::std::ostream& os,
                           const ::st434::s377m::types::TimestampType& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    PeakEnvelopeTimestamp (::std::ostream& os,
                           const ::st434::s377m::types::TimestampType& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    PeakEnvelopeTimestamp (::std::ostream& os,
                           const ::st434::s377m::types::TimestampType& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PeakEnvelopeTimestamp (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::TimestampType& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    PeakEnvelopeTimestamp (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::TimestampType& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    PeakEnvelopeTimestamp (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::TimestampType& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PeakEnvelopeTimestamp (::xercesc::DOMDocument& d,
                           const ::st434::s377m::types::TimestampType& x,
                           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PeakEnvelopeTimestamp (const ::st434::s377m::types::TimestampType& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PeakEnvelopeData (::std::ostream& os,
                      const ::st434::s377m::types::DataStream& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    PeakEnvelopeData (::std::ostream& os,
                      const ::st434::s377m::types::DataStream& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    PeakEnvelopeData (::std::ostream& os,
                      const ::st434::s377m::types::DataStream& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PeakEnvelopeData (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::DataStream& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    PeakEnvelopeData (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::DataStream& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    PeakEnvelopeData (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::DataStream& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PeakEnvelopeData (::xercesc::DOMDocument& d,
                      const ::st434::s377m::types::DataStream& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PeakEnvelopeData (const ::st434::s377m::types::DataStream& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    FileSecurityReport (::std::ostream& os,
                        const ::st434::s377m::types::UInt32& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    FileSecurityReport (::std::ostream& os,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    FileSecurityReport (::std::ostream& os,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    FileSecurityReport (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UInt32& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    FileSecurityReport (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    FileSecurityReport (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    FileSecurityReport (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::UInt32& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    FileSecurityReport (const ::st434::s377m::types::UInt32& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    FileSecurityWave (::std::ostream& os,
                      const ::st434::s377m::types::UInt32& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    FileSecurityWave (::std::ostream& os,
                      const ::st434::s377m::types::UInt32& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    FileSecurityWave (::std::ostream& os,
                      const ::st434::s377m::types::UInt32& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    FileSecurityWave (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UInt32& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    FileSecurityWave (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UInt32& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    FileSecurityWave (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UInt32& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    FileSecurityWave (::xercesc::DOMDocument& d,
                      const ::st434::s377m::types::UInt32& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    FileSecurityWave (const ::st434::s377m::types::UInt32& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Emphasis (::std::ostream& os,
              const ::st434::s377m::types::UInt8& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    Emphasis (::std::ostream& os,
              const ::st434::s377m::types::UInt8& x, 
              ::xml_schema::error_handler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    Emphasis (::std::ostream& os,
              const ::st434::s377m::types::UInt8& x, 
              ::xercesc::DOMErrorHandler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Emphasis (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::UInt8& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    Emphasis (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::UInt8& x, 
              ::xml_schema::error_handler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    Emphasis (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::UInt8& x, 
              ::xercesc::DOMErrorHandler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Emphasis (::xercesc::DOMDocument& d,
              const ::st434::s377m::types::UInt8& x,
              ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    Emphasis (const ::st434::s377m::types::UInt8& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    BlockStartOffset (::std::ostream& os,
                      const ::st434::s377m::types::UInt16& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    BlockStartOffset (::std::ostream& os,
                      const ::st434::s377m::types::UInt16& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    BlockStartOffset (::std::ostream& os,
                      const ::st434::s377m::types::UInt16& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    BlockStartOffset (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UInt16& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    BlockStartOffset (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UInt16& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    BlockStartOffset (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::UInt16& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    BlockStartOffset (::xercesc::DOMDocument& d,
                      const ::st434::s377m::types::UInt16& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    BlockStartOffset (const ::st434::s377m::types::UInt16& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    AuxBitsMode (::std::ostream& os,
                 const ::st434::s377m::types::UInt8& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    AuxBitsMode (::std::ostream& os,
                 const ::st434::s377m::types::UInt8& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    AuxBitsMode (::std::ostream& os,
                 const ::st434::s377m::types::UInt8& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    AuxBitsMode (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UInt8& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    AuxBitsMode (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UInt8& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    AuxBitsMode (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UInt8& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    AuxBitsMode (::xercesc::DOMDocument& d,
                 const ::st434::s377m::types::UInt8& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    AuxBitsMode (const ::st434::s377m::types::UInt8& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ChannelStatusMode_ (::std::ostream& os,
                        const ::properties::S335M::ChannelStatusMode& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    ChannelStatusMode_ (::std::ostream& os,
                        const ::properties::S335M::ChannelStatusMode& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    ChannelStatusMode_ (::std::ostream& os,
                        const ::properties::S335M::ChannelStatusMode& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ChannelStatusMode_ (::xercesc::XMLFormatTarget& ft,
                        const ::properties::S335M::ChannelStatusMode& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    ChannelStatusMode_ (::xercesc::XMLFormatTarget& ft,
                        const ::properties::S335M::ChannelStatusMode& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    ChannelStatusMode_ (::xercesc::XMLFormatTarget& ft,
                        const ::properties::S335M::ChannelStatusMode& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ChannelStatusMode_ (::xercesc::DOMDocument& d,
                        const ::properties::S335M::ChannelStatusMode& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ChannelStatusMode_ (const ::properties::S335M::ChannelStatusMode& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    FixedChannelStatusData_ (::std::ostream& os,
                             const ::properties::S335M::FixedChannelStatusData& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    FixedChannelStatusData_ (::std::ostream& os,
                             const ::properties::S335M::FixedChannelStatusData& x, 
                             ::xml_schema::error_handler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    FixedChannelStatusData_ (::std::ostream& os,
                             const ::properties::S335M::FixedChannelStatusData& x, 
                             ::xercesc::DOMErrorHandler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    FixedChannelStatusData_ (::xercesc::XMLFormatTarget& ft,
                             const ::properties::S335M::FixedChannelStatusData& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    FixedChannelStatusData_ (::xercesc::XMLFormatTarget& ft,
                             const ::properties::S335M::FixedChannelStatusData& x, 
                             ::xml_schema::error_handler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    FixedChannelStatusData_ (::xercesc::XMLFormatTarget& ft,
                             const ::properties::S335M::FixedChannelStatusData& x, 
                             ::xercesc::DOMErrorHandler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    FixedChannelStatusData_ (::xercesc::DOMDocument& d,
                             const ::properties::S335M::FixedChannelStatusData& x,
                             ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    FixedChannelStatusData_ (const ::properties::S335M::FixedChannelStatusData& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    UserDataMode_ (::std::ostream& os,
                   const ::properties::S335M::UserDataMode& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    UserDataMode_ (::std::ostream& os,
                   const ::properties::S335M::UserDataMode& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    UserDataMode_ (::std::ostream& os,
                   const ::properties::S335M::UserDataMode& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    UserDataMode_ (::xercesc::XMLFormatTarget& ft,
                   const ::properties::S335M::UserDataMode& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    UserDataMode_ (::xercesc::XMLFormatTarget& ft,
                   const ::properties::S335M::UserDataMode& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    UserDataMode_ (::xercesc::XMLFormatTarget& ft,
                   const ::properties::S335M::UserDataMode& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    UserDataMode_ (::xercesc::DOMDocument& d,
                   const ::properties::S335M::UserDataMode& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    UserDataMode_ (const ::properties::S335M::UserDataMode& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    FixedUserData_ (::std::ostream& os,
                    const ::properties::S335M::FixedUserData& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    FixedUserData_ (::std::ostream& os,
                    const ::properties::S335M::FixedUserData& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    FixedUserData_ (::std::ostream& os,
                    const ::properties::S335M::FixedUserData& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    FixedUserData_ (::xercesc::XMLFormatTarget& ft,
                    const ::properties::S335M::FixedUserData& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    FixedUserData_ (::xercesc::XMLFormatTarget& ft,
                    const ::properties::S335M::FixedUserData& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    FixedUserData_ (::xercesc::XMLFormatTarget& ft,
                    const ::properties::S335M::FixedUserData& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    FixedUserData_ (::xercesc::DOMDocument& d,
                    const ::properties::S335M::FixedUserData& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    FixedUserData_ (const ::properties::S335M::FixedUserData& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PackLength (::std::ostream& os,
                const ::st434::s377m::types::UInt32& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    PackLength (::std::ostream& os,
                const ::st434::s377m::types::UInt32& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    PackLength (::std::ostream& os,
                const ::st434::s377m::types::UInt32& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PackLength (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt32& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    PackLength (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt32& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    PackLength (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt32& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PackLength (::xercesc::DOMDocument& d,
                const ::st434::s377m::types::UInt32& x,
                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PackLength (const ::st434::s377m::types::UInt32& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    EditUnitByteCount (::std::ostream& os,
                       const ::st434::s377m::types::UInt32& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    EditUnitByteCount (::std::ostream& os,
                       const ::st434::s377m::types::UInt32& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    EditUnitByteCount (::std::ostream& os,
                       const ::st434::s377m::types::UInt32& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    EditUnitByteCount (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UInt32& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    EditUnitByteCount (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UInt32& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    EditUnitByteCount (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UInt32& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    EditUnitByteCount (::xercesc::DOMDocument& d,
                       const ::st434::s377m::types::UInt32& x,
                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    EditUnitByteCount (const ::st434::s377m::types::UInt32& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SliceCount (::std::ostream& os,
                const ::st434::s377m::types::UInt8& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    SliceCount (::std::ostream& os,
                const ::st434::s377m::types::UInt8& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    SliceCount (::std::ostream& os,
                const ::st434::s377m::types::UInt8& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SliceCount (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt8& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    SliceCount (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt8& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    SliceCount (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt8& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SliceCount (::xercesc::DOMDocument& d,
                const ::st434::s377m::types::UInt8& x,
                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SliceCount (const ::st434::s377m::types::UInt8& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PositionTableCount (::std::ostream& os,
                        const ::st434::s377m::types::UInt8& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PositionTableCount (::std::ostream& os,
                        const ::st434::s377m::types::UInt8& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PositionTableCount (::std::ostream& os,
                        const ::st434::s377m::types::UInt8& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PositionTableCount (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UInt8& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PositionTableCount (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UInt8& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PositionTableCount (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UInt8& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PositionTableCount (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::UInt8& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PositionTableCount (const ::st434::s377m::types::UInt8& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PositionTableIndex (::std::ostream& os,
                        const ::st434::s377m::types::Int8& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PositionTableIndex (::std::ostream& os,
                        const ::st434::s377m::types::Int8& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PositionTableIndex (::std::ostream& os,
                        const ::st434::s377m::types::Int8& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PositionTableIndex (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::Int8& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PositionTableIndex (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::Int8& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PositionTableIndex (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::Int8& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PositionTableIndex (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::Int8& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PositionTableIndex (const ::st434::s377m::types::Int8& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Slice (::std::ostream& os,
           const ::st434::s377m::types::UInt8& x, 
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    Slice (::std::ostream& os,
           const ::st434::s377m::types::UInt8& x, 
           ::xml_schema::error_handler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    Slice (::std::ostream& os,
           const ::st434::s377m::types::UInt8& x, 
           ::xercesc::DOMErrorHandler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Slice (::xercesc::XMLFormatTarget& ft,
           const ::st434::s377m::types::UInt8& x, 
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    Slice (::xercesc::XMLFormatTarget& ft,
           const ::st434::s377m::types::UInt8& x, 
           ::xml_schema::error_handler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    Slice (::xercesc::XMLFormatTarget& ft,
           const ::st434::s377m::types::UInt8& x, 
           ::xercesc::DOMErrorHandler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Slice (::xercesc::DOMDocument& d,
           const ::st434::s377m::types::UInt8& x,
           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    Slice (const ::st434::s377m::types::UInt8& x, 
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ElementDelta (::std::ostream& os,
                  const ::st434::s377m::types::UInt32& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    ElementDelta (::std::ostream& os,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    ElementDelta (::std::ostream& os,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ElementDelta (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt32& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    ElementDelta (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    ElementDelta (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt32& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ElementDelta (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UInt32& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ElementDelta (const ::st434::s377m::types::UInt32& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    TemporalOffset (::std::ostream& os,
                    const ::st434::s377m::types::Int8& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    TemporalOffset (::std::ostream& os,
                    const ::st434::s377m::types::Int8& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    TemporalOffset (::std::ostream& os,
                    const ::st434::s377m::types::Int8& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    TemporalOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Int8& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    TemporalOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Int8& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    TemporalOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Int8& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    TemporalOffset (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::Int8& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    TemporalOffset (const ::st434::s377m::types::Int8& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    KeyFrameOffset (::std::ostream& os,
                    const ::st434::s377m::types::Int8& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    KeyFrameOffset (::std::ostream& os,
                    const ::st434::s377m::types::Int8& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    KeyFrameOffset (::std::ostream& os,
                    const ::st434::s377m::types::Int8& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    KeyFrameOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Int8& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    KeyFrameOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Int8& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    KeyFrameOffset (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::Int8& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    KeyFrameOffset (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::Int8& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    KeyFrameOffset (const ::st434::s377m::types::Int8& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Flags (::std::ostream& os,
           const ::st434::s377m::types::UInt8& x, 
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    Flags (::std::ostream& os,
           const ::st434::s377m::types::UInt8& x, 
           ::xml_schema::error_handler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    Flags (::std::ostream& os,
           const ::st434::s377m::types::UInt8& x, 
           ::xercesc::DOMErrorHandler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Flags (::xercesc::XMLFormatTarget& ft,
           const ::st434::s377m::types::UInt8& x, 
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    Flags (::xercesc::XMLFormatTarget& ft,
           const ::st434::s377m::types::UInt8& x, 
           ::xml_schema::error_handler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    Flags (::xercesc::XMLFormatTarget& ft,
           const ::st434::s377m::types::UInt8& x, 
           ::xercesc::DOMErrorHandler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Flags (::xercesc::DOMDocument& d,
           const ::st434::s377m::types::UInt8& x,
           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    Flags (const ::st434::s377m::types::UInt8& x, 
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    StreamOffset (::std::ostream& os,
                  const ::st434::s377m::types::UInt64& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    StreamOffset (::std::ostream& os,
                  const ::st434::s377m::types::UInt64& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    StreamOffset (::std::ostream& os,
                  const ::st434::s377m::types::UInt64& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    StreamOffset (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt64& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    StreamOffset (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt64& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    StreamOffset (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UInt64& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    StreamOffset (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UInt64& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    StreamOffset (const ::st434::s377m::types::UInt64& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SliceOffset_ (::std::ostream& os,
                  const ::properties::S335M::SliceOffset& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    SliceOffset_ (::std::ostream& os,
                  const ::properties::S335M::SliceOffset& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    SliceOffset_ (::std::ostream& os,
                  const ::properties::S335M::SliceOffset& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SliceOffset_ (::xercesc::XMLFormatTarget& ft,
                  const ::properties::S335M::SliceOffset& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    SliceOffset_ (::xercesc::XMLFormatTarget& ft,
                  const ::properties::S335M::SliceOffset& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    SliceOffset_ (::xercesc::XMLFormatTarget& ft,
                  const ::properties::S335M::SliceOffset& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SliceOffset_ (::xercesc::DOMDocument& d,
                  const ::properties::S335M::SliceOffset& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SliceOffset_ (const ::properties::S335M::SliceOffset& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PositionTable_ (::std::ostream& os,
                    const ::properties::S335M::PositionTable& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    PositionTable_ (::std::ostream& os,
                    const ::properties::S335M::PositionTable& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    PositionTable_ (::std::ostream& os,
                    const ::properties::S335M::PositionTable& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PositionTable_ (::xercesc::XMLFormatTarget& ft,
                    const ::properties::S335M::PositionTable& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    PositionTable_ (::xercesc::XMLFormatTarget& ft,
                    const ::properties::S335M::PositionTable& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    PositionTable_ (::xercesc::XMLFormatTarget& ft,
                    const ::properties::S335M::PositionTable& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PositionTable_ (::xercesc::DOMDocument& d,
                    const ::properties::S335M::PositionTable& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PositionTable_ (const ::properties::S335M::PositionTable& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    void
    operator<< (::xercesc::DOMElement&, const DeltaEntryType&);

    // Serialize to std::ostream.
    //

    void
    DeltaEntryArray_ (::std::ostream& os,
                      const ::properties::S335M::DeltaEntryArray& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    DeltaEntryArray_ (::std::ostream& os,
                      const ::properties::S335M::DeltaEntryArray& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    DeltaEntryArray_ (::std::ostream& os,
                      const ::properties::S335M::DeltaEntryArray& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DeltaEntryArray_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::DeltaEntryArray& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    DeltaEntryArray_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::DeltaEntryArray& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    DeltaEntryArray_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::DeltaEntryArray& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DeltaEntryArray_ (::xercesc::DOMDocument& d,
                      const ::properties::S335M::DeltaEntryArray& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DeltaEntryArray_ (const ::properties::S335M::DeltaEntryArray& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    void
    operator<< (::xercesc::DOMElement&, const IndexEntryType&);

    // Serialize to std::ostream.
    //

    void
    IndexEntryArray_ (::std::ostream& os,
                      const ::properties::S335M::IndexEntryArray& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    IndexEntryArray_ (::std::ostream& os,
                      const ::properties::S335M::IndexEntryArray& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    IndexEntryArray_ (::std::ostream& os,
                      const ::properties::S335M::IndexEntryArray& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    IndexEntryArray_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::IndexEntryArray& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    IndexEntryArray_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::IndexEntryArray& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    IndexEntryArray_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::IndexEntryArray& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    IndexEntryArray_ (::xercesc::DOMDocument& d,
                      const ::properties::S335M::IndexEntryArray& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    IndexEntryArray_ (const ::properties::S335M::IndexEntryArray& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ViewportAspectRatio (::std::ostream& os,
                         const ::st434::s377m::types::Rational& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    ViewportAspectRatio (::std::ostream& os,
                         const ::st434::s377m::types::Rational& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    ViewportAspectRatio (::std::ostream& os,
                         const ::st434::s377m::types::Rational& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ViewportAspectRatio (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::Rational& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    ViewportAspectRatio (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::Rational& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    ViewportAspectRatio (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::Rational& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ViewportAspectRatio (::xercesc::DOMDocument& d,
                         const ::st434::s377m::types::Rational& x,
                         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ViewportAspectRatio (const ::st434::s377m::types::Rational& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PerceivedDisplayFormat (::std::ostream& os,
                            const ::st434::s377m::types::ISO7bitCharString& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    PerceivedDisplayFormat (::std::ostream& os,
                            const ::st434::s377m::types::ISO7bitCharString& x, 
                            ::xml_schema::error_handler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    PerceivedDisplayFormat (::std::ostream& os,
                            const ::st434::s377m::types::ISO7bitCharString& x, 
                            ::xercesc::DOMErrorHandler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PerceivedDisplayFormat (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::ISO7bitCharString& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    PerceivedDisplayFormat (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::ISO7bitCharString& x, 
                            ::xml_schema::error_handler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    PerceivedDisplayFormat (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::ISO7bitCharString& x, 
                            ::xercesc::DOMErrorHandler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PerceivedDisplayFormat (::xercesc::DOMDocument& d,
                            const ::st434::s377m::types::ISO7bitCharString& x,
                            ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PerceivedDisplayFormat (const ::st434::s377m::types::ISO7bitCharString& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    CaptionKind (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    CaptionKind (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    CaptionKind (::std::ostream& os,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    CaptionKind (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    CaptionKind (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    CaptionKind (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UTF16CharString& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    CaptionKind (::xercesc::DOMDocument& d,
                 const ::st434::s377m::types::UTF16CharString& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    CaptionKind (const ::st434::s377m::types::UTF16CharString& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ChunkID (::std::ostream& os,
             const ::st434::s377m::types::UInt32& x, 
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    ChunkID (::std::ostream& os,
             const ::st434::s377m::types::UInt32& x, 
             ::xml_schema::error_handler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    ChunkID (::std::ostream& os,
             const ::st434::s377m::types::UInt32& x, 
             ::xercesc::DOMErrorHandler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ChunkID (::xercesc::XMLFormatTarget& ft,
             const ::st434::s377m::types::UInt32& x, 
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    ChunkID (::xercesc::XMLFormatTarget& ft,
             const ::st434::s377m::types::UInt32& x, 
             ::xml_schema::error_handler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    ChunkID (::xercesc::XMLFormatTarget& ft,
             const ::st434::s377m::types::UInt32& x, 
             ::xercesc::DOMErrorHandler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ChunkID (::xercesc::DOMDocument& d,
             const ::st434::s377m::types::UInt32& x,
             ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ChunkID (const ::st434::s377m::types::UInt32& x, 
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ChunkLength (::std::ostream& os,
                 const ::st434::s377m::types::UInt32& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    ChunkLength (::std::ostream& os,
                 const ::st434::s377m::types::UInt32& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    ChunkLength (::std::ostream& os,
                 const ::st434::s377m::types::UInt32& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ChunkLength (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UInt32& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    ChunkLength (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UInt32& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    ChunkLength (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::UInt32& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ChunkLength (::xercesc::DOMDocument& d,
                 const ::st434::s377m::types::UInt32& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ChunkLength (const ::st434::s377m::types::UInt32& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ChunkData (::std::ostream& os,
               const ::st434::s377m::types::DataStream& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    ChunkData (::std::ostream& os,
               const ::st434::s377m::types::DataStream& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    ChunkData (::std::ostream& os,
               const ::st434::s377m::types::DataStream& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ChunkData (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::DataStream& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    ChunkData (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::DataStream& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    ChunkData (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::DataStream& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ChunkData (::xercesc::DOMDocument& d,
               const ::st434::s377m::types::DataStream& x,
               ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ChunkData (const ::st434::s377m::types::DataStream& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ApplicationProductID (::std::ostream& os,
                          const ::st434::s377m::types::UUID& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    ApplicationProductID (::std::ostream& os,
                          const ::st434::s377m::types::UUID& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    ApplicationProductID (::std::ostream& os,
                          const ::st434::s377m::types::UUID& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ApplicationProductID (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UUID& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    ApplicationProductID (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UUID& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    ApplicationProductID (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UUID& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ApplicationProductID (::xercesc::DOMDocument& d,
                          const ::st434::s377m::types::UUID& x,
                          ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ApplicationProductID (const ::st434::s377m::types::UUID& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ApplicationSupplierName (::std::ostream& os,
                             const ::st434::s377m::types::UTF16CharString& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    ApplicationSupplierName (::std::ostream& os,
                             const ::st434::s377m::types::UTF16CharString& x, 
                             ::xml_schema::error_handler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    ApplicationSupplierName (::std::ostream& os,
                             const ::st434::s377m::types::UTF16CharString& x, 
                             ::xercesc::DOMErrorHandler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ApplicationSupplierName (::xercesc::XMLFormatTarget& ft,
                             const ::st434::s377m::types::UTF16CharString& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    ApplicationSupplierName (::xercesc::XMLFormatTarget& ft,
                             const ::st434::s377m::types::UTF16CharString& x, 
                             ::xml_schema::error_handler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    ApplicationSupplierName (::xercesc::XMLFormatTarget& ft,
                             const ::st434::s377m::types::UTF16CharString& x, 
                             ::xercesc::DOMErrorHandler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ApplicationSupplierName (::xercesc::DOMDocument& d,
                             const ::st434::s377m::types::UTF16CharString& x,
                             ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ApplicationSupplierName (const ::st434::s377m::types::UTF16CharString& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ApplicationPlatform (::std::ostream& os,
                         const ::st434::s377m::types::UTF16CharString& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    ApplicationPlatform (::std::ostream& os,
                         const ::st434::s377m::types::UTF16CharString& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    ApplicationPlatform (::std::ostream& os,
                         const ::st434::s377m::types::UTF16CharString& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ApplicationPlatform (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::UTF16CharString& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    ApplicationPlatform (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::UTF16CharString& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    ApplicationPlatform (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::UTF16CharString& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ApplicationPlatform (::xercesc::DOMDocument& d,
                         const ::st434::s377m::types::UTF16CharString& x,
                         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ApplicationPlatform (const ::st434::s377m::types::UTF16CharString& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    EditRate (::std::ostream& os,
              const ::st434::s377m::types::Rational& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    EditRate (::std::ostream& os,
              const ::st434::s377m::types::Rational& x, 
              ::xml_schema::error_handler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    EditRate (::std::ostream& os,
              const ::st434::s377m::types::Rational& x, 
              ::xercesc::DOMErrorHandler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    EditRate (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::Rational& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    EditRate (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::Rational& x, 
              ::xml_schema::error_handler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    EditRate (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::Rational& x, 
              ::xercesc::DOMErrorHandler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    EditRate (::xercesc::DOMDocument& d,
              const ::st434::s377m::types::Rational& x,
              ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    EditRate (const ::st434::s377m::types::Rational& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    EventTrackEditRate (::std::ostream& os,
                        const ::st434::s377m::types::Rational& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    EventTrackEditRate (::std::ostream& os,
                        const ::st434::s377m::types::Rational& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    EventTrackEditRate (::std::ostream& os,
                        const ::st434::s377m::types::Rational& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    EventTrackEditRate (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::Rational& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    EventTrackEditRate (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::Rational& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    EventTrackEditRate (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::Rational& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    EventTrackEditRate (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::Rational& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    EventTrackEditRate (const ::st434::s377m::types::Rational& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ApplicationVersionString (::std::ostream& os,
                              const ::st434::s377m::types::UTF16CharString& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    ApplicationVersionString (::std::ostream& os,
                              const ::st434::s377m::types::UTF16CharString& x, 
                              ::xml_schema::error_handler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    ApplicationVersionString (::std::ostream& os,
                              const ::st434::s377m::types::UTF16CharString& x, 
                              ::xercesc::DOMErrorHandler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ApplicationVersionString (::xercesc::XMLFormatTarget& ft,
                              const ::st434::s377m::types::UTF16CharString& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    ApplicationVersionString (::xercesc::XMLFormatTarget& ft,
                              const ::st434::s377m::types::UTF16CharString& x, 
                              ::xml_schema::error_handler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    ApplicationVersionString (::xercesc::XMLFormatTarget& ft,
                              const ::st434::s377m::types::UTF16CharString& x, 
                              ::xercesc::DOMErrorHandler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ApplicationVersionString (::xercesc::DOMDocument& d,
                              const ::st434::s377m::types::UTF16CharString& x,
                              ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ApplicationVersionString (const ::st434::s377m::types::UTF16CharString& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    EventComment (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    EventComment (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    EventComment (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    EventComment (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    EventComment (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    EventComment (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    EventComment (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UTF16CharString& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    EventComment (const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ToolkitVersion (::std::ostream& os,
                    const ::st434::s377m::types::ProductVersionType& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ToolkitVersion (::std::ostream& os,
                    const ::st434::s377m::types::ProductVersionType& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ToolkitVersion (::std::ostream& os,
                    const ::st434::s377m::types::ProductVersionType& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ToolkitVersion (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::ProductVersionType& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ToolkitVersion (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::ProductVersionType& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ToolkitVersion (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::ProductVersionType& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ToolkitVersion (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::ProductVersionType& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ToolkitVersion (const ::st434::s377m::types::ProductVersionType& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ApplicationName (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ApplicationName (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ApplicationName (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ApplicationName (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ApplicationName (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ApplicationName (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ApplicationName (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::UTF16CharString& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ApplicationName (const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    GenerationID (::std::ostream& os,
                  const ::st434::s377m::types::UUID& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    GenerationID (::std::ostream& os,
                  const ::st434::s377m::types::UUID& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    GenerationID (::std::ostream& os,
                  const ::st434::s377m::types::UUID& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    GenerationID (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UUID& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    GenerationID (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UUID& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    GenerationID (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UUID& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    GenerationID (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UUID& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    GenerationID (const ::st434::s377m::types::UUID& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ApplicationVersion (::std::ostream& os,
                        const ::st434::s377m::types::ProductVersionType& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    ApplicationVersion (::std::ostream& os,
                        const ::st434::s377m::types::ProductVersionType& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    ApplicationVersion (::std::ostream& os,
                        const ::st434::s377m::types::ProductVersionType& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ApplicationVersion (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::ProductVersionType& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    ApplicationVersion (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::ProductVersionType& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    ApplicationVersion (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::ProductVersionType& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ApplicationVersion (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::ProductVersionType& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ApplicationVersion (const ::st434::s377m::types::ProductVersionType& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    AlphaTransparency (::std::ostream& os,
                       const ::st434::s377m::types::UInt8& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    AlphaTransparency (::std::ostream& os,
                       const ::st434::s377m::types::UInt8& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    AlphaTransparency (::std::ostream& os,
                       const ::st434::s377m::types::UInt8& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    AlphaTransparency (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UInt8& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    AlphaTransparency (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UInt8& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    AlphaTransparency (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UInt8& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    AlphaTransparency (::xercesc::DOMDocument& d,
                       const ::st434::s377m::types::UInt8& x,
                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    AlphaTransparency (const ::st434::s377m::types::UInt8& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    IndexEditRate (::std::ostream& os,
                   const ::st434::s377m::types::Rational& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    IndexEditRate (::std::ostream& os,
                   const ::st434::s377m::types::Rational& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    IndexEditRate (::std::ostream& os,
                   const ::st434::s377m::types::Rational& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    IndexEditRate (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::Rational& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    IndexEditRate (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::Rational& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    IndexEditRate (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::Rational& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    IndexEditRate (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::Rational& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    IndexEditRate (const ::st434::s377m::types::Rational& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    IntegrationIndication (::std::ostream& os,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    IntegrationIndication (::std::ostream& os,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    IntegrationIndication (::std::ostream& os,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    IntegrationIndication (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    IntegrationIndication (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    IntegrationIndication (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    IntegrationIndication (::xercesc::DOMDocument& d,
                           const ::st434::s377m::types::UTF16CharString& x,
                           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    IntegrationIndication (const ::st434::s377m::types::UTF16CharString& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    EventIndication (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    EventIndication (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    EventIndication (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    EventIndication (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    EventIndication (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    EventIndication (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    EventIndication (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::UTF16CharString& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    EventIndication (const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    QualityFlag (::std::ostream& os,
                 const ::st434::s377m::types::Boolean& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    QualityFlag (::std::ostream& os,
                 const ::st434::s377m::types::Boolean& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    QualityFlag (::std::ostream& os,
                 const ::st434::s377m::types::Boolean& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    QualityFlag (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::Boolean& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    QualityFlag (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::Boolean& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    QualityFlag (::xercesc::XMLFormatTarget& ft,
                 const ::st434::s377m::types::Boolean& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    QualityFlag (::xercesc::DOMDocument& d,
                 const ::st434::s377m::types::Boolean& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    QualityFlag (const ::st434::s377m::types::Boolean& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    LogoFlag (::std::ostream& os,
              const ::st434::s377m::types::Boolean& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    LogoFlag (::std::ostream& os,
              const ::st434::s377m::types::Boolean& x, 
              ::xml_schema::error_handler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    LogoFlag (::std::ostream& os,
              const ::st434::s377m::types::Boolean& x, 
              ::xercesc::DOMErrorHandler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    LogoFlag (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::Boolean& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    LogoFlag (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::Boolean& x, 
              ::xml_schema::error_handler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    LogoFlag (::xercesc::XMLFormatTarget& ft,
              const ::st434::s377m::types::Boolean& x, 
              ::xercesc::DOMErrorHandler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    LogoFlag (::xercesc::DOMDocument& d,
              const ::st434::s377m::types::Boolean& x,
              ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    LogoFlag (const ::st434::s377m::types::Boolean& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    GraphicUsage (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    GraphicUsage (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    GraphicUsage (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    GraphicUsage (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    GraphicUsage (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    GraphicUsage (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    GraphicUsage (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UTF16CharString& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    GraphicUsage (const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SimpleFlagging (::std::ostream& os,
                    const ::st434::s377m::types::UInt16& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SimpleFlagging (::std::ostream& os,
                    const ::st434::s377m::types::UInt16& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SimpleFlagging (::std::ostream& os,
                    const ::st434::s377m::types::UInt16& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SimpleFlagging (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UInt16& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SimpleFlagging (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UInt16& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    SimpleFlagging (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UInt16& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SimpleFlagging (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::UInt16& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SimpleFlagging (const ::st434::s377m::types::UInt16& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    GenerationCopyNumber (::std::ostream& os,
                          const ::st434::s377m::types::UInt16& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    GenerationCopyNumber (::std::ostream& os,
                          const ::st434::s377m::types::UInt16& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    GenerationCopyNumber (::std::ostream& os,
                          const ::st434::s377m::types::UInt16& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    GenerationCopyNumber (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UInt16& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    GenerationCopyNumber (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UInt16& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    GenerationCopyNumber (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UInt16& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    GenerationCopyNumber (::xercesc::DOMDocument& d,
                          const ::st434::s377m::types::UInt16& x,
                          ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    GenerationCopyNumber (const ::st434::s377m::types::UInt16& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    GenerationCloneNumber (::std::ostream& os,
                           const ::st434::s377m::types::UInt16& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    GenerationCloneNumber (::std::ostream& os,
                           const ::st434::s377m::types::UInt16& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    GenerationCloneNumber (::std::ostream& os,
                           const ::st434::s377m::types::UInt16& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    GenerationCloneNumber (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UInt16& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    GenerationCloneNumber (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UInt16& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    GenerationCloneNumber (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UInt16& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    GenerationCloneNumber (::xercesc::DOMDocument& d,
                           const ::st434::s377m::types::UInt16& x,
                           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    GenerationCloneNumber (const ::st434::s377m::types::UInt16& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DescriptiveFrameworkObject_ (::std::ostream& os,
                                 const ::properties::S335M::DescriptiveFrameworkObject& x, 
                                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                 const ::std::string& e = "UTF-8",
                                 ::xml_schema::flags f = 0);

    void
    DescriptiveFrameworkObject_ (::std::ostream& os,
                                 const ::properties::S335M::DescriptiveFrameworkObject& x, 
                                 ::xml_schema::error_handler& eh,
                                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                 const ::std::string& e = "UTF-8",
                                 ::xml_schema::flags f = 0);

    void
    DescriptiveFrameworkObject_ (::std::ostream& os,
                                 const ::properties::S335M::DescriptiveFrameworkObject& x, 
                                 ::xercesc::DOMErrorHandler& eh,
                                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                 const ::std::string& e = "UTF-8",
                                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DescriptiveFrameworkObject_ (::xercesc::XMLFormatTarget& ft,
                                 const ::properties::S335M::DescriptiveFrameworkObject& x, 
                                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                 const ::std::string& e = "UTF-8",
                                 ::xml_schema::flags f = 0);

    void
    DescriptiveFrameworkObject_ (::xercesc::XMLFormatTarget& ft,
                                 const ::properties::S335M::DescriptiveFrameworkObject& x, 
                                 ::xml_schema::error_handler& eh,
                                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                 const ::std::string& e = "UTF-8",
                                 ::xml_schema::flags f = 0);

    void
    DescriptiveFrameworkObject_ (::xercesc::XMLFormatTarget& ft,
                                 const ::properties::S335M::DescriptiveFrameworkObject& x, 
                                 ::xercesc::DOMErrorHandler& eh,
                                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                 const ::std::string& e = "UTF-8",
                                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DescriptiveFrameworkObject_ (::xercesc::DOMDocument& d,
                                 const ::properties::S335M::DescriptiveFrameworkObject& x,
                                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DescriptiveFrameworkObject_ (const ::properties::S335M::DescriptiveFrameworkObject& x, 
                                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    EssenceDataObjects_ (::std::ostream& os,
                         const ::properties::S335M::EssenceDataObjects& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    EssenceDataObjects_ (::std::ostream& os,
                         const ::properties::S335M::EssenceDataObjects& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    EssenceDataObjects_ (::std::ostream& os,
                         const ::properties::S335M::EssenceDataObjects& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    EssenceDataObjects_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::EssenceDataObjects& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    EssenceDataObjects_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::EssenceDataObjects& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    EssenceDataObjects_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::EssenceDataObjects& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    EssenceDataObjects_ (::xercesc::DOMDocument& d,
                         const ::properties::S335M::EssenceDataObjects& x,
                         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    EssenceDataObjects_ (const ::properties::S335M::EssenceDataObjects& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Packages_ (::std::ostream& os,
               const ::properties::S335M::Packages& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    Packages_ (::std::ostream& os,
               const ::properties::S335M::Packages& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    Packages_ (::std::ostream& os,
               const ::properties::S335M::Packages& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Packages_ (::xercesc::XMLFormatTarget& ft,
               const ::properties::S335M::Packages& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    Packages_ (::xercesc::XMLFormatTarget& ft,
               const ::properties::S335M::Packages& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    Packages_ (::xercesc::XMLFormatTarget& ft,
               const ::properties::S335M::Packages& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Packages_ (::xercesc::DOMDocument& d,
               const ::properties::S335M::Packages& x,
               ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    Packages_ (const ::properties::S335M::Packages& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PrimaryPackage_ (::std::ostream& os,
                     const ::properties::S335M::PrimaryPackage& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    PrimaryPackage_ (::std::ostream& os,
                     const ::properties::S335M::PrimaryPackage& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    PrimaryPackage_ (::std::ostream& os,
                     const ::properties::S335M::PrimaryPackage& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PrimaryPackage_ (::xercesc::XMLFormatTarget& ft,
                     const ::properties::S335M::PrimaryPackage& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    PrimaryPackage_ (::xercesc::XMLFormatTarget& ft,
                     const ::properties::S335M::PrimaryPackage& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    PrimaryPackage_ (::xercesc::XMLFormatTarget& ft,
                     const ::properties::S335M::PrimaryPackage& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PrimaryPackage_ (::xercesc::DOMDocument& d,
                     const ::properties::S335M::PrimaryPackage& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PrimaryPackage_ (const ::properties::S335M::PrimaryPackage& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PackageTracks_ (::std::ostream& os,
                    const ::properties::S335M::PackageTracks& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    PackageTracks_ (::std::ostream& os,
                    const ::properties::S335M::PackageTracks& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    PackageTracks_ (::std::ostream& os,
                    const ::properties::S335M::PackageTracks& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PackageTracks_ (::xercesc::XMLFormatTarget& ft,
                    const ::properties::S335M::PackageTracks& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    PackageTracks_ (::xercesc::XMLFormatTarget& ft,
                    const ::properties::S335M::PackageTracks& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    PackageTracks_ (::xercesc::XMLFormatTarget& ft,
                    const ::properties::S335M::PackageTracks& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PackageTracks_ (::xercesc::DOMDocument& d,
                    const ::properties::S335M::PackageTracks& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PackageTracks_ (const ::properties::S335M::PackageTracks& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ComponentObjects_ (::std::ostream& os,
                       const ::properties::S335M::ComponentObjects& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ComponentObjects_ (::std::ostream& os,
                       const ::properties::S335M::ComponentObjects& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ComponentObjects_ (::std::ostream& os,
                       const ::properties::S335M::ComponentObjects& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ComponentObjects_ (::xercesc::XMLFormatTarget& ft,
                       const ::properties::S335M::ComponentObjects& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ComponentObjects_ (::xercesc::XMLFormatTarget& ft,
                       const ::properties::S335M::ComponentObjects& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ComponentObjects_ (::xercesc::XMLFormatTarget& ft,
                       const ::properties::S335M::ComponentObjects& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ComponentObjects_ (::xercesc::DOMDocument& d,
                       const ::properties::S335M::ComponentObjects& x,
                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ComponentObjects_ (const ::properties::S335M::ComponentObjects& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    TrackSegment_ (::std::ostream& os,
                   const ::properties::S335M::TrackSegment& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    TrackSegment_ (::std::ostream& os,
                   const ::properties::S335M::TrackSegment& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    TrackSegment_ (::std::ostream& os,
                   const ::properties::S335M::TrackSegment& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    TrackSegment_ (::xercesc::XMLFormatTarget& ft,
                   const ::properties::S335M::TrackSegment& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    TrackSegment_ (::xercesc::XMLFormatTarget& ft,
                   const ::properties::S335M::TrackSegment& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    TrackSegment_ (::xercesc::XMLFormatTarget& ft,
                   const ::properties::S335M::TrackSegment& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    TrackSegment_ (::xercesc::DOMDocument& d,
                   const ::properties::S335M::TrackSegment& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    TrackSegment_ (const ::properties::S335M::TrackSegment& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ContentStorageObject_ (::std::ostream& os,
                           const ::properties::S335M::ContentStorageObject& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    ContentStorageObject_ (::std::ostream& os,
                           const ::properties::S335M::ContentStorageObject& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    ContentStorageObject_ (::std::ostream& os,
                           const ::properties::S335M::ContentStorageObject& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ContentStorageObject_ (::xercesc::XMLFormatTarget& ft,
                           const ::properties::S335M::ContentStorageObject& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    ContentStorageObject_ (::xercesc::XMLFormatTarget& ft,
                           const ::properties::S335M::ContentStorageObject& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    ContentStorageObject_ (::xercesc::XMLFormatTarget& ft,
                           const ::properties::S335M::ContentStorageObject& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ContentStorageObject_ (::xercesc::DOMDocument& d,
                           const ::properties::S335M::ContentStorageObject& x,
                           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ContentStorageObject_ (const ::properties::S335M::ContentStorageObject& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    EssenceDescription_ (::std::ostream& os,
                         const ::properties::S335M::EssenceDescription& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    EssenceDescription_ (::std::ostream& os,
                         const ::properties::S335M::EssenceDescription& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    EssenceDescription_ (::std::ostream& os,
                         const ::properties::S335M::EssenceDescription& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    EssenceDescription_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::EssenceDescription& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    EssenceDescription_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::EssenceDescription& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    EssenceDescription_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::EssenceDescription& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    EssenceDescription_ (::xercesc::DOMDocument& d,
                         const ::properties::S335M::EssenceDescription& x,
                         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    EssenceDescription_ (const ::properties::S335M::EssenceDescription& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Locators_ (::std::ostream& os,
               const ::properties::S335M::Locators& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    Locators_ (::std::ostream& os,
               const ::properties::S335M::Locators& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    Locators_ (::std::ostream& os,
               const ::properties::S335M::Locators& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Locators_ (::xercesc::XMLFormatTarget& ft,
               const ::properties::S335M::Locators& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    Locators_ (::xercesc::XMLFormatTarget& ft,
               const ::properties::S335M::Locators& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    Locators_ (::xercesc::XMLFormatTarget& ft,
               const ::properties::S335M::Locators& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Locators_ (::xercesc::DOMDocument& d,
               const ::properties::S335M::Locators& x,
               ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    Locators_ (const ::properties::S335M::Locators& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    IdentificationList_ (::std::ostream& os,
                         const ::properties::S335M::IdentificationList& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    IdentificationList_ (::std::ostream& os,
                         const ::properties::S335M::IdentificationList& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    IdentificationList_ (::std::ostream& os,
                         const ::properties::S335M::IdentificationList& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    IdentificationList_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::IdentificationList& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    IdentificationList_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::IdentificationList& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    IdentificationList_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::IdentificationList& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    IdentificationList_ (::xercesc::DOMDocument& d,
                         const ::properties::S335M::IdentificationList& x,
                         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    IdentificationList_ (const ::properties::S335M::IdentificationList& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    FileDescriptors_ (::std::ostream& os,
                      const ::properties::S335M::FileDescriptors& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    FileDescriptors_ (::std::ostream& os,
                      const ::properties::S335M::FileDescriptors& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    FileDescriptors_ (::std::ostream& os,
                      const ::properties::S335M::FileDescriptors& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    FileDescriptors_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::FileDescriptors& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    FileDescriptors_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::FileDescriptors& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    FileDescriptors_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::FileDescriptors& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    FileDescriptors_ (::xercesc::DOMDocument& d,
                      const ::properties::S335M::FileDescriptors& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    FileDescriptors_ (const ::properties::S335M::FileDescriptors& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    UnknownBWFChunks_ (::std::ostream& os,
                       const ::properties::S335M::UnknownBWFChunks& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    UnknownBWFChunks_ (::std::ostream& os,
                       const ::properties::S335M::UnknownBWFChunks& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    UnknownBWFChunks_ (::std::ostream& os,
                       const ::properties::S335M::UnknownBWFChunks& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    UnknownBWFChunks_ (::xercesc::XMLFormatTarget& ft,
                       const ::properties::S335M::UnknownBWFChunks& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    UnknownBWFChunks_ (::xercesc::XMLFormatTarget& ft,
                       const ::properties::S335M::UnknownBWFChunks& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    UnknownBWFChunks_ (::xercesc::XMLFormatTarget& ft,
                       const ::properties::S335M::UnknownBWFChunks& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    UnknownBWFChunks_ (::xercesc::DOMDocument& d,
                       const ::properties::S335M::UnknownBWFChunks& x,
                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    UnknownBWFChunks_ (const ::properties::S335M::UnknownBWFChunks& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ThisPartition (::std::ostream& os,
                   const ::st434::s377m::types::UInt64& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ThisPartition (::std::ostream& os,
                   const ::st434::s377m::types::UInt64& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ThisPartition (::std::ostream& os,
                   const ::st434::s377m::types::UInt64& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ThisPartition (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt64& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ThisPartition (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt64& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    ThisPartition (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt64& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ThisPartition (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::UInt64& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ThisPartition (const ::st434::s377m::types::UInt64& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PreviousPartition (::std::ostream& os,
                       const ::st434::s377m::types::UInt64& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    PreviousPartition (::std::ostream& os,
                       const ::st434::s377m::types::UInt64& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    PreviousPartition (::std::ostream& os,
                       const ::st434::s377m::types::UInt64& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PreviousPartition (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UInt64& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    PreviousPartition (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UInt64& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    PreviousPartition (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UInt64& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PreviousPartition (::xercesc::DOMDocument& d,
                       const ::st434::s377m::types::UInt64& x,
                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PreviousPartition (const ::st434::s377m::types::UInt64& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    FooterPartition (::std::ostream& os,
                     const ::st434::s377m::types::UInt64& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    FooterPartition (::std::ostream& os,
                     const ::st434::s377m::types::UInt64& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    FooterPartition (::std::ostream& os,
                     const ::st434::s377m::types::UInt64& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    FooterPartition (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UInt64& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    FooterPartition (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UInt64& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    FooterPartition (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UInt64& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    FooterPartition (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::UInt64& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    FooterPartition (const ::st434::s377m::types::UInt64& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    BodyOffset (::std::ostream& os,
                const ::st434::s377m::types::UInt64& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    BodyOffset (::std::ostream& os,
                const ::st434::s377m::types::UInt64& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    BodyOffset (::std::ostream& os,
                const ::st434::s377m::types::UInt64& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    BodyOffset (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt64& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    BodyOffset (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt64& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    BodyOffset (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt64& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    BodyOffset (::xercesc::DOMDocument& d,
                const ::st434::s377m::types::UInt64& x,
                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    BodyOffset (const ::st434::s377m::types::UInt64& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    LinkedTrackID (::std::ostream& os,
                   const ::st434::s377m::types::UInt32& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    LinkedTrackID (::std::ostream& os,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    LinkedTrackID (::std::ostream& os,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    LinkedTrackID (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt32& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    LinkedTrackID (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    LinkedTrackID (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    LinkedTrackID (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::UInt32& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    LinkedTrackID (const ::st434::s377m::types::UInt32& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SourceTrackID (::std::ostream& os,
                   const ::st434::s377m::types::UInt32& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    SourceTrackID (::std::ostream& os,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    SourceTrackID (::std::ostream& os,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SourceTrackID (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt32& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    SourceTrackID (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    SourceTrackID (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UInt32& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SourceTrackID (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::UInt32& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SourceTrackID (const ::st434::s377m::types::UInt32& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SourcePackageID (::std::ostream& os,
                     const ::st434::s377m::types::UMID32& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    SourcePackageID (::std::ostream& os,
                     const ::st434::s377m::types::UMID32& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    SourcePackageID (::std::ostream& os,
                     const ::st434::s377m::types::UMID32& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SourcePackageID (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UMID32& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    SourcePackageID (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UMID32& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    SourcePackageID (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UMID32& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SourcePackageID (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::UMID32& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SourcePackageID (const ::st434::s377m::types::UMID32& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ByteOffset (::std::ostream& os,
                const ::st434::s377m::types::UInt64& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    ByteOffset (::std::ostream& os,
                const ::st434::s377m::types::UInt64& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    ByteOffset (::std::ostream& os,
                const ::st434::s377m::types::UInt64& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ByteOffset (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt64& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    ByteOffset (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt64& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    ByteOffset (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UInt64& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ByteOffset (::xercesc::DOMDocument& d,
                const ::st434::s377m::types::UInt64& x,
                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ByteOffset (const ::st434::s377m::types::UInt64& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PositionInSequence (::std::ostream& os,
                        const ::st434::s377m::types::UInt32& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PositionInSequence (::std::ostream& os,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PositionInSequence (::std::ostream& os,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PositionInSequence (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UInt32& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PositionInSequence (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    PositionInSequence (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UInt32& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PositionInSequence (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::UInt32& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PositionInSequence (const ::st434::s377m::types::UInt32& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    TotalNumberInSequence (::std::ostream& os,
                           const ::st434::s377m::types::UInt32& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    TotalNumberInSequence (::std::ostream& os,
                           const ::st434::s377m::types::UInt32& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    TotalNumberInSequence (::std::ostream& os,
                           const ::st434::s377m::types::UInt32& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    TotalNumberInSequence (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UInt32& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    TotalNumberInSequence (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UInt32& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    TotalNumberInSequence (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UInt32& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    TotalNumberInSequence (::xercesc::DOMDocument& d,
                           const ::st434::s377m::types::UInt32& x,
                           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    TotalNumberInSequence (const ::st434::s377m::types::UInt32& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PictureFormatObject_ (::std::ostream& os,
                          const ::properties::S335M::PictureFormatObject& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    PictureFormatObject_ (::std::ostream& os,
                          const ::properties::S335M::PictureFormatObject& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    PictureFormatObject_ (::std::ostream& os,
                          const ::properties::S335M::PictureFormatObject& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PictureFormatObject_ (::xercesc::XMLFormatTarget& ft,
                          const ::properties::S335M::PictureFormatObject& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    PictureFormatObject_ (::xercesc::XMLFormatTarget& ft,
                          const ::properties::S335M::PictureFormatObject& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    PictureFormatObject_ (::xercesc::XMLFormatTarget& ft,
                          const ::properties::S335M::PictureFormatObject& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PictureFormatObject_ (::xercesc::DOMDocument& d,
                          const ::properties::S335M::PictureFormatObject& x,
                          ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PictureFormatObject_ (const ::properties::S335M::PictureFormatObject& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ProjectObject_ (::std::ostream& os,
                    const ::properties::S335M::ProjectObject& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ProjectObject_ (::std::ostream& os,
                    const ::properties::S335M::ProjectObject& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ProjectObject_ (::std::ostream& os,
                    const ::properties::S335M::ProjectObject& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ProjectObject_ (::xercesc::XMLFormatTarget& ft,
                    const ::properties::S335M::ProjectObject& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ProjectObject_ (::xercesc::XMLFormatTarget& ft,
                    const ::properties::S335M::ProjectObject& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ProjectObject_ (::xercesc::XMLFormatTarget& ft,
                    const ::properties::S335M::ProjectObject& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ProjectObject_ (::xercesc::DOMDocument& d,
                    const ::properties::S335M::ProjectObject& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ProjectObject_ (const ::properties::S335M::ProjectObject& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    GroupRelationshipObjects_ (::std::ostream& os,
                               const ::properties::S335M::GroupRelationshipObjects& x, 
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    void
    GroupRelationshipObjects_ (::std::ostream& os,
                               const ::properties::S335M::GroupRelationshipObjects& x, 
                               ::xml_schema::error_handler& eh,
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    void
    GroupRelationshipObjects_ (::std::ostream& os,
                               const ::properties::S335M::GroupRelationshipObjects& x, 
                               ::xercesc::DOMErrorHandler& eh,
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    GroupRelationshipObjects_ (::xercesc::XMLFormatTarget& ft,
                               const ::properties::S335M::GroupRelationshipObjects& x, 
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    void
    GroupRelationshipObjects_ (::xercesc::XMLFormatTarget& ft,
                               const ::properties::S335M::GroupRelationshipObjects& x, 
                               ::xml_schema::error_handler& eh,
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    void
    GroupRelationshipObjects_ (::xercesc::XMLFormatTarget& ft,
                               const ::properties::S335M::GroupRelationshipObjects& x, 
                               ::xercesc::DOMErrorHandler& eh,
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    GroupRelationshipObjects_ (::xercesc::DOMDocument& d,
                               const ::properties::S335M::GroupRelationshipObjects& x,
                               ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    GroupRelationshipObjects_ (const ::properties::S335M::GroupRelationshipObjects& x, 
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ProcessingObject_ (::std::ostream& os,
                       const ::properties::S335M::ProcessingObject& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ProcessingObject_ (::std::ostream& os,
                       const ::properties::S335M::ProcessingObject& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ProcessingObject_ (::std::ostream& os,
                       const ::properties::S335M::ProcessingObject& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ProcessingObject_ (::xercesc::XMLFormatTarget& ft,
                       const ::properties::S335M::ProcessingObject& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ProcessingObject_ (::xercesc::XMLFormatTarget& ft,
                       const ::properties::S335M::ProcessingObject& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ProcessingObject_ (::xercesc::XMLFormatTarget& ft,
                       const ::properties::S335M::ProcessingObject& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ProcessingObject_ (::xercesc::DOMDocument& d,
                       const ::properties::S335M::ProcessingObject& x,
                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ProcessingObject_ (const ::properties::S335M::ProcessingObject& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ContactsListObject_ (::std::ostream& os,
                         const ::properties::S335M::ContactsListObject& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    ContactsListObject_ (::std::ostream& os,
                         const ::properties::S335M::ContactsListObject& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    ContactsListObject_ (::std::ostream& os,
                         const ::properties::S335M::ContactsListObject& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ContactsListObject_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::ContactsListObject& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    ContactsListObject_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::ContactsListObject& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    ContactsListObject_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::ContactsListObject& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ContactsListObject_ (::xercesc::DOMDocument& d,
                         const ::properties::S335M::ContactsListObject& x,
                         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ContactsListObject_ (const ::properties::S335M::ContactsListObject& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    AnnotationCueWordsObject_ (::std::ostream& os,
                               const ::properties::S335M::AnnotationCueWordsObject& x, 
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    void
    AnnotationCueWordsObject_ (::std::ostream& os,
                               const ::properties::S335M::AnnotationCueWordsObject& x, 
                               ::xml_schema::error_handler& eh,
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    void
    AnnotationCueWordsObject_ (::std::ostream& os,
                               const ::properties::S335M::AnnotationCueWordsObject& x, 
                               ::xercesc::DOMErrorHandler& eh,
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    AnnotationCueWordsObject_ (::xercesc::XMLFormatTarget& ft,
                               const ::properties::S335M::AnnotationCueWordsObject& x, 
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    void
    AnnotationCueWordsObject_ (::xercesc::XMLFormatTarget& ft,
                               const ::properties::S335M::AnnotationCueWordsObject& x, 
                               ::xml_schema::error_handler& eh,
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    void
    AnnotationCueWordsObject_ (::xercesc::XMLFormatTarget& ft,
                               const ::properties::S335M::AnnotationCueWordsObject& x, 
                               ::xercesc::DOMErrorHandler& eh,
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    AnnotationCueWordsObject_ (::xercesc::DOMDocument& d,
                               const ::properties::S335M::AnnotationCueWordsObject& x,
                               ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    AnnotationCueWordsObject_ (const ::properties::S335M::AnnotationCueWordsObject& x, 
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ShotCueWordsObject_ (::std::ostream& os,
                         const ::properties::S335M::ShotCueWordsObject& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    ShotCueWordsObject_ (::std::ostream& os,
                         const ::properties::S335M::ShotCueWordsObject& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    ShotCueWordsObject_ (::std::ostream& os,
                         const ::properties::S335M::ShotCueWordsObject& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ShotCueWordsObject_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::ShotCueWordsObject& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    ShotCueWordsObject_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::ShotCueWordsObject& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    ShotCueWordsObject_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::ShotCueWordsObject& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ShotCueWordsObject_ (::xercesc::DOMDocument& d,
                         const ::properties::S335M::ShotCueWordsObject& x,
                         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ShotCueWordsObject_ (const ::properties::S335M::ShotCueWordsObject& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    AwardParticipants_ (::std::ostream& os,
                        const ::properties::S335M::AwardParticipants& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    AwardParticipants_ (::std::ostream& os,
                        const ::properties::S335M::AwardParticipants& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    AwardParticipants_ (::std::ostream& os,
                        const ::properties::S335M::AwardParticipants& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    AwardParticipants_ (::xercesc::XMLFormatTarget& ft,
                        const ::properties::S335M::AwardParticipants& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    AwardParticipants_ (::xercesc::XMLFormatTarget& ft,
                        const ::properties::S335M::AwardParticipants& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    AwardParticipants_ (::xercesc::XMLFormatTarget& ft,
                        const ::properties::S335M::AwardParticipants& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    AwardParticipants_ (::xercesc::DOMDocument& d,
                        const ::properties::S335M::AwardParticipants& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    AwardParticipants_ (const ::properties::S335M::AwardParticipants& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ContractParticipants_ (::std::ostream& os,
                           const ::properties::S335M::ContractParticipants& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    ContractParticipants_ (::std::ostream& os,
                           const ::properties::S335M::ContractParticipants& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    ContractParticipants_ (::std::ostream& os,
                           const ::properties::S335M::ContractParticipants& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ContractParticipants_ (::xercesc::XMLFormatTarget& ft,
                           const ::properties::S335M::ContractParticipants& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    ContractParticipants_ (::xercesc::XMLFormatTarget& ft,
                           const ::properties::S335M::ContractParticipants& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    ContractParticipants_ (::xercesc::XMLFormatTarget& ft,
                           const ::properties::S335M::ContractParticipants& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ContractParticipants_ (::xercesc::DOMDocument& d,
                           const ::properties::S335M::ContractParticipants& x,
                           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ContractParticipants_ (const ::properties::S335M::ContractParticipants& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Persons_ (::std::ostream& os,
              const ::properties::S335M::Persons& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    Persons_ (::std::ostream& os,
              const ::properties::S335M::Persons& x, 
              ::xml_schema::error_handler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    Persons_ (::std::ostream& os,
              const ::properties::S335M::Persons& x, 
              ::xercesc::DOMErrorHandler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Persons_ (::xercesc::XMLFormatTarget& ft,
              const ::properties::S335M::Persons& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    Persons_ (::xercesc::XMLFormatTarget& ft,
              const ::properties::S335M::Persons& x, 
              ::xml_schema::error_handler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    void
    Persons_ (::xercesc::XMLFormatTarget& ft,
              const ::properties::S335M::Persons& x, 
              ::xercesc::DOMErrorHandler& eh,
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              const ::std::string& e = "UTF-8",
              ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Persons_ (::xercesc::DOMDocument& d,
              const ::properties::S335M::Persons& x,
              ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    Persons_ (const ::properties::S335M::Persons& x, 
              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
              ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ParticipantOrganizations_ (::std::ostream& os,
                               const ::properties::S335M::ParticipantOrganizations& x, 
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    void
    ParticipantOrganizations_ (::std::ostream& os,
                               const ::properties::S335M::ParticipantOrganizations& x, 
                               ::xml_schema::error_handler& eh,
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    void
    ParticipantOrganizations_ (::std::ostream& os,
                               const ::properties::S335M::ParticipantOrganizations& x, 
                               ::xercesc::DOMErrorHandler& eh,
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ParticipantOrganizations_ (::xercesc::XMLFormatTarget& ft,
                               const ::properties::S335M::ParticipantOrganizations& x, 
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    void
    ParticipantOrganizations_ (::xercesc::XMLFormatTarget& ft,
                               const ::properties::S335M::ParticipantOrganizations& x, 
                               ::xml_schema::error_handler& eh,
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    void
    ParticipantOrganizations_ (::xercesc::XMLFormatTarget& ft,
                               const ::properties::S335M::ParticipantOrganizations& x, 
                               ::xercesc::DOMErrorHandler& eh,
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               const ::std::string& e = "UTF-8",
                               ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ParticipantOrganizations_ (::xercesc::DOMDocument& d,
                               const ::properties::S335M::ParticipantOrganizations& x,
                               ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ParticipantOrganizations_ (const ::properties::S335M::ParticipantOrganizations& x, 
                               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                               ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    AddressNameValueObjects_ (::std::ostream& os,
                              const ::properties::S335M::AddressNameValueObjects& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    AddressNameValueObjects_ (::std::ostream& os,
                              const ::properties::S335M::AddressNameValueObjects& x, 
                              ::xml_schema::error_handler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    AddressNameValueObjects_ (::std::ostream& os,
                              const ::properties::S335M::AddressNameValueObjects& x, 
                              ::xercesc::DOMErrorHandler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    AddressNameValueObjects_ (::xercesc::XMLFormatTarget& ft,
                              const ::properties::S335M::AddressNameValueObjects& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    AddressNameValueObjects_ (::xercesc::XMLFormatTarget& ft,
                              const ::properties::S335M::AddressNameValueObjects& x, 
                              ::xml_schema::error_handler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    AddressNameValueObjects_ (::xercesc::XMLFormatTarget& ft,
                              const ::properties::S335M::AddressNameValueObjects& x, 
                              ::xercesc::DOMErrorHandler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    AddressNameValueObjects_ (::xercesc::DOMDocument& d,
                              const ::properties::S335M::AddressNameValueObjects& x,
                              ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    AddressNameValueObjects_ (const ::properties::S335M::AddressNameValueObjects& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PersonOrganizations_ (::std::ostream& os,
                          const ::properties::S335M::PersonOrganizations& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    PersonOrganizations_ (::std::ostream& os,
                          const ::properties::S335M::PersonOrganizations& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    PersonOrganizations_ (::std::ostream& os,
                          const ::properties::S335M::PersonOrganizations& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PersonOrganizations_ (::xercesc::XMLFormatTarget& ft,
                          const ::properties::S335M::PersonOrganizations& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    PersonOrganizations_ (::xercesc::XMLFormatTarget& ft,
                          const ::properties::S335M::PersonOrganizations& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    PersonOrganizations_ (::xercesc::XMLFormatTarget& ft,
                          const ::properties::S335M::PersonOrganizations& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PersonOrganizations_ (::xercesc::DOMDocument& d,
                          const ::properties::S335M::PersonOrganizations& x,
                          ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PersonOrganizations_ (const ::properties::S335M::PersonOrganizations& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Locations_ (::std::ostream& os,
                const ::properties::S335M::Locations& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    Locations_ (::std::ostream& os,
                const ::properties::S335M::Locations& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    Locations_ (::std::ostream& os,
                const ::properties::S335M::Locations& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Locations_ (::xercesc::XMLFormatTarget& ft,
                const ::properties::S335M::Locations& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    Locations_ (::xercesc::XMLFormatTarget& ft,
                const ::properties::S335M::Locations& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    Locations_ (::xercesc::XMLFormatTarget& ft,
                const ::properties::S335M::Locations& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Locations_ (::xercesc::DOMDocument& d,
                const ::properties::S335M::Locations& x,
                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    Locations_ (const ::properties::S335M::Locations& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    TitlesObjects_ (::std::ostream& os,
                    const ::properties::S335M::TitlesObjects& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    TitlesObjects_ (::std::ostream& os,
                    const ::properties::S335M::TitlesObjects& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    TitlesObjects_ (::std::ostream& os,
                    const ::properties::S335M::TitlesObjects& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    TitlesObjects_ (::xercesc::XMLFormatTarget& ft,
                    const ::properties::S335M::TitlesObjects& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    TitlesObjects_ (::xercesc::XMLFormatTarget& ft,
                    const ::properties::S335M::TitlesObjects& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    TitlesObjects_ (::xercesc::XMLFormatTarget& ft,
                    const ::properties::S335M::TitlesObjects& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    TitlesObjects_ (::xercesc::DOMDocument& d,
                    const ::properties::S335M::TitlesObjects& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    TitlesObjects_ (const ::properties::S335M::TitlesObjects& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    IdentificationObjects_ (::std::ostream& os,
                            const ::properties::S335M::IdentificationObjects& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    IdentificationObjects_ (::std::ostream& os,
                            const ::properties::S335M::IdentificationObjects& x, 
                            ::xml_schema::error_handler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    IdentificationObjects_ (::std::ostream& os,
                            const ::properties::S335M::IdentificationObjects& x, 
                            ::xercesc::DOMErrorHandler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    IdentificationObjects_ (::xercesc::XMLFormatTarget& ft,
                            const ::properties::S335M::IdentificationObjects& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    IdentificationObjects_ (::xercesc::XMLFormatTarget& ft,
                            const ::properties::S335M::IdentificationObjects& x, 
                            ::xml_schema::error_handler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    IdentificationObjects_ (::xercesc::XMLFormatTarget& ft,
                            const ::properties::S335M::IdentificationObjects& x, 
                            ::xercesc::DOMErrorHandler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    IdentificationObjects_ (::xercesc::DOMDocument& d,
                            const ::properties::S335M::IdentificationObjects& x,
                            ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    IdentificationObjects_ (const ::properties::S335M::IdentificationObjects& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    BrandingObjects_ (::std::ostream& os,
                      const ::properties::S335M::BrandingObjects& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    BrandingObjects_ (::std::ostream& os,
                      const ::properties::S335M::BrandingObjects& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    BrandingObjects_ (::std::ostream& os,
                      const ::properties::S335M::BrandingObjects& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    BrandingObjects_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::BrandingObjects& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    BrandingObjects_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::BrandingObjects& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    BrandingObjects_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::BrandingObjects& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    BrandingObjects_ (::xercesc::DOMDocument& d,
                      const ::properties::S335M::BrandingObjects& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    BrandingObjects_ (const ::properties::S335M::BrandingObjects& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    EventObjects_ (::std::ostream& os,
                   const ::properties::S335M::EventObjects& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    EventObjects_ (::std::ostream& os,
                   const ::properties::S335M::EventObjects& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    EventObjects_ (::std::ostream& os,
                   const ::properties::S335M::EventObjects& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    EventObjects_ (::xercesc::XMLFormatTarget& ft,
                   const ::properties::S335M::EventObjects& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    EventObjects_ (::xercesc::XMLFormatTarget& ft,
                   const ::properties::S335M::EventObjects& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    EventObjects_ (::xercesc::XMLFormatTarget& ft,
                   const ::properties::S335M::EventObjects& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    EventObjects_ (::xercesc::DOMDocument& d,
                   const ::properties::S335M::EventObjects& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    EventObjects_ (const ::properties::S335M::EventObjects& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    EventAnnotationObjects_ (::std::ostream& os,
                             const ::properties::S335M::EventAnnotationObjects& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    EventAnnotationObjects_ (::std::ostream& os,
                             const ::properties::S335M::EventAnnotationObjects& x, 
                             ::xml_schema::error_handler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    EventAnnotationObjects_ (::std::ostream& os,
                             const ::properties::S335M::EventAnnotationObjects& x, 
                             ::xercesc::DOMErrorHandler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    EventAnnotationObjects_ (::xercesc::XMLFormatTarget& ft,
                             const ::properties::S335M::EventAnnotationObjects& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    EventAnnotationObjects_ (::xercesc::XMLFormatTarget& ft,
                             const ::properties::S335M::EventAnnotationObjects& x, 
                             ::xml_schema::error_handler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    EventAnnotationObjects_ (::xercesc::XMLFormatTarget& ft,
                             const ::properties::S335M::EventAnnotationObjects& x, 
                             ::xercesc::DOMErrorHandler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    EventAnnotationObjects_ (::xercesc::DOMDocument& d,
                             const ::properties::S335M::EventAnnotationObjects& x,
                             ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    EventAnnotationObjects_ (const ::properties::S335M::EventAnnotationObjects& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    AnnotationParticipants_ (::std::ostream& os,
                             const ::properties::S335M::AnnotationParticipants& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    AnnotationParticipants_ (::std::ostream& os,
                             const ::properties::S335M::AnnotationParticipants& x, 
                             ::xml_schema::error_handler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    AnnotationParticipants_ (::std::ostream& os,
                             const ::properties::S335M::AnnotationParticipants& x, 
                             ::xercesc::DOMErrorHandler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    AnnotationParticipants_ (::xercesc::XMLFormatTarget& ft,
                             const ::properties::S335M::AnnotationParticipants& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    AnnotationParticipants_ (::xercesc::XMLFormatTarget& ft,
                             const ::properties::S335M::AnnotationParticipants& x, 
                             ::xml_schema::error_handler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    AnnotationParticipants_ (::xercesc::XMLFormatTarget& ft,
                             const ::properties::S335M::AnnotationParticipants& x, 
                             ::xercesc::DOMErrorHandler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    AnnotationParticipants_ (::xercesc::DOMDocument& d,
                             const ::properties::S335M::AnnotationParticipants& x,
                             ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    AnnotationParticipants_ (const ::properties::S335M::AnnotationParticipants& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ScriptingLocators_ (::std::ostream& os,
                        const ::properties::S335M::ScriptingLocators& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    ScriptingLocators_ (::std::ostream& os,
                        const ::properties::S335M::ScriptingLocators& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    ScriptingLocators_ (::std::ostream& os,
                        const ::properties::S335M::ScriptingLocators& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ScriptingLocators_ (::xercesc::XMLFormatTarget& ft,
                        const ::properties::S335M::ScriptingLocators& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    ScriptingLocators_ (::xercesc::XMLFormatTarget& ft,
                        const ::properties::S335M::ScriptingLocators& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    ScriptingLocators_ (::xercesc::XMLFormatTarget& ft,
                        const ::properties::S335M::ScriptingLocators& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ScriptingLocators_ (::xercesc::DOMDocument& d,
                        const ::properties::S335M::ScriptingLocators& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ScriptingLocators_ (const ::properties::S335M::ScriptingLocators& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PublicationObjects_ (::std::ostream& os,
                         const ::properties::S335M::PublicationObjects& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    PublicationObjects_ (::std::ostream& os,
                         const ::properties::S335M::PublicationObjects& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    PublicationObjects_ (::std::ostream& os,
                         const ::properties::S335M::PublicationObjects& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PublicationObjects_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::PublicationObjects& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    PublicationObjects_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::PublicationObjects& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    PublicationObjects_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::PublicationObjects& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PublicationObjects_ (::xercesc::DOMDocument& d,
                         const ::properties::S335M::PublicationObjects& x,
                         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PublicationObjects_ (const ::properties::S335M::PublicationObjects& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    AwardObjects_ (::std::ostream& os,
                   const ::properties::S335M::AwardObjects& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    AwardObjects_ (::std::ostream& os,
                   const ::properties::S335M::AwardObjects& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    AwardObjects_ (::std::ostream& os,
                   const ::properties::S335M::AwardObjects& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    AwardObjects_ (::xercesc::XMLFormatTarget& ft,
                   const ::properties::S335M::AwardObjects& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    AwardObjects_ (::xercesc::XMLFormatTarget& ft,
                   const ::properties::S335M::AwardObjects& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    AwardObjects_ (::xercesc::XMLFormatTarget& ft,
                   const ::properties::S335M::AwardObjects& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    AwardObjects_ (::xercesc::DOMDocument& d,
                   const ::properties::S335M::AwardObjects& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    AwardObjects_ (const ::properties::S335M::AwardObjects& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    CaptionsDescriptionObjects_ (::std::ostream& os,
                                 const ::properties::S335M::CaptionsDescriptionObjects& x, 
                                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                 const ::std::string& e = "UTF-8",
                                 ::xml_schema::flags f = 0);

    void
    CaptionsDescriptionObjects_ (::std::ostream& os,
                                 const ::properties::S335M::CaptionsDescriptionObjects& x, 
                                 ::xml_schema::error_handler& eh,
                                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                 const ::std::string& e = "UTF-8",
                                 ::xml_schema::flags f = 0);

    void
    CaptionsDescriptionObjects_ (::std::ostream& os,
                                 const ::properties::S335M::CaptionsDescriptionObjects& x, 
                                 ::xercesc::DOMErrorHandler& eh,
                                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                 const ::std::string& e = "UTF-8",
                                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    CaptionsDescriptionObjects_ (::xercesc::XMLFormatTarget& ft,
                                 const ::properties::S335M::CaptionsDescriptionObjects& x, 
                                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                 const ::std::string& e = "UTF-8",
                                 ::xml_schema::flags f = 0);

    void
    CaptionsDescriptionObjects_ (::xercesc::XMLFormatTarget& ft,
                                 const ::properties::S335M::CaptionsDescriptionObjects& x, 
                                 ::xml_schema::error_handler& eh,
                                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                 const ::std::string& e = "UTF-8",
                                 ::xml_schema::flags f = 0);

    void
    CaptionsDescriptionObjects_ (::xercesc::XMLFormatTarget& ft,
                                 const ::properties::S335M::CaptionsDescriptionObjects& x, 
                                 ::xercesc::DOMErrorHandler& eh,
                                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                 const ::std::string& e = "UTF-8",
                                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    CaptionsDescriptionObjects_ (::xercesc::DOMDocument& d,
                                 const ::properties::S335M::CaptionsDescriptionObjects& x,
                                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    CaptionsDescriptionObjects_ (const ::properties::S335M::CaptionsDescriptionObjects& x, 
                                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    AnnotationObjects_ (::std::ostream& os,
                        const ::properties::S335M::AnnotationObjects& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    AnnotationObjects_ (::std::ostream& os,
                        const ::properties::S335M::AnnotationObjects& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    AnnotationObjects_ (::std::ostream& os,
                        const ::properties::S335M::AnnotationObjects& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    AnnotationObjects_ (::xercesc::XMLFormatTarget& ft,
                        const ::properties::S335M::AnnotationObjects& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    AnnotationObjects_ (::xercesc::XMLFormatTarget& ft,
                        const ::properties::S335M::AnnotationObjects& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    AnnotationObjects_ (::xercesc::XMLFormatTarget& ft,
                        const ::properties::S335M::AnnotationObjects& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    AnnotationObjects_ (::xercesc::DOMDocument& d,
                        const ::properties::S335M::AnnotationObjects& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    AnnotationObjects_ (const ::properties::S335M::AnnotationObjects& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ProductionSettingPeriodObjects_ (::std::ostream& os,
                                     const ::properties::S335M::ProductionSettingPeriodObjects& x, 
                                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                     const ::std::string& e = "UTF-8",
                                     ::xml_schema::flags f = 0);

    void
    ProductionSettingPeriodObjects_ (::std::ostream& os,
                                     const ::properties::S335M::ProductionSettingPeriodObjects& x, 
                                     ::xml_schema::error_handler& eh,
                                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                     const ::std::string& e = "UTF-8",
                                     ::xml_schema::flags f = 0);

    void
    ProductionSettingPeriodObjects_ (::std::ostream& os,
                                     const ::properties::S335M::ProductionSettingPeriodObjects& x, 
                                     ::xercesc::DOMErrorHandler& eh,
                                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                     const ::std::string& e = "UTF-8",
                                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ProductionSettingPeriodObjects_ (::xercesc::XMLFormatTarget& ft,
                                     const ::properties::S335M::ProductionSettingPeriodObjects& x, 
                                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                     const ::std::string& e = "UTF-8",
                                     ::xml_schema::flags f = 0);

    void
    ProductionSettingPeriodObjects_ (::xercesc::XMLFormatTarget& ft,
                                     const ::properties::S335M::ProductionSettingPeriodObjects& x, 
                                     ::xml_schema::error_handler& eh,
                                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                     const ::std::string& e = "UTF-8",
                                     ::xml_schema::flags f = 0);

    void
    ProductionSettingPeriodObjects_ (::xercesc::XMLFormatTarget& ft,
                                     const ::properties::S335M::ProductionSettingPeriodObjects& x, 
                                     ::xercesc::DOMErrorHandler& eh,
                                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                     const ::std::string& e = "UTF-8",
                                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ProductionSettingPeriodObjects_ (::xercesc::DOMDocument& d,
                                     const ::properties::S335M::ProductionSettingPeriodObjects& x,
                                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ProductionSettingPeriodObjects_ (const ::properties::S335M::ProductionSettingPeriodObjects& x, 
                                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SceneSettingPeriodObjects_ (::std::ostream& os,
                                const ::properties::S335M::SceneSettingPeriodObjects& x, 
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    void
    SceneSettingPeriodObjects_ (::std::ostream& os,
                                const ::properties::S335M::SceneSettingPeriodObjects& x, 
                                ::xml_schema::error_handler& eh,
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    void
    SceneSettingPeriodObjects_ (::std::ostream& os,
                                const ::properties::S335M::SceneSettingPeriodObjects& x, 
                                ::xercesc::DOMErrorHandler& eh,
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SceneSettingPeriodObjects_ (::xercesc::XMLFormatTarget& ft,
                                const ::properties::S335M::SceneSettingPeriodObjects& x, 
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    void
    SceneSettingPeriodObjects_ (::xercesc::XMLFormatTarget& ft,
                                const ::properties::S335M::SceneSettingPeriodObjects& x, 
                                ::xml_schema::error_handler& eh,
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    void
    SceneSettingPeriodObjects_ (::xercesc::XMLFormatTarget& ft,
                                const ::properties::S335M::SceneSettingPeriodObjects& x, 
                                ::xercesc::DOMErrorHandler& eh,
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                const ::std::string& e = "UTF-8",
                                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SceneSettingPeriodObjects_ (::xercesc::DOMDocument& d,
                                const ::properties::S335M::SceneSettingPeriodObjects& x,
                                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SceneSettingPeriodObjects_ (const ::properties::S335M::SceneSettingPeriodObjects& x, 
                                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ScriptingObjects_ (::std::ostream& os,
                       const ::properties::S335M::ScriptingObjects& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ScriptingObjects_ (::std::ostream& os,
                       const ::properties::S335M::ScriptingObjects& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ScriptingObjects_ (::std::ostream& os,
                       const ::properties::S335M::ScriptingObjects& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ScriptingObjects_ (::xercesc::XMLFormatTarget& ft,
                       const ::properties::S335M::ScriptingObjects& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ScriptingObjects_ (::xercesc::XMLFormatTarget& ft,
                       const ::properties::S335M::ScriptingObjects& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ScriptingObjects_ (::xercesc::XMLFormatTarget& ft,
                       const ::properties::S335M::ScriptingObjects& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ScriptingObjects_ (::xercesc::DOMDocument& d,
                       const ::properties::S335M::ScriptingObjects& x,
                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ScriptingObjects_ (const ::properties::S335M::ScriptingObjects& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ClassificationObjects_ (::std::ostream& os,
                            const ::properties::S335M::ClassificationObjects& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    ClassificationObjects_ (::std::ostream& os,
                            const ::properties::S335M::ClassificationObjects& x, 
                            ::xml_schema::error_handler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    ClassificationObjects_ (::std::ostream& os,
                            const ::properties::S335M::ClassificationObjects& x, 
                            ::xercesc::DOMErrorHandler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ClassificationObjects_ (::xercesc::XMLFormatTarget& ft,
                            const ::properties::S335M::ClassificationObjects& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    ClassificationObjects_ (::xercesc::XMLFormatTarget& ft,
                            const ::properties::S335M::ClassificationObjects& x, 
                            ::xml_schema::error_handler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    ClassificationObjects_ (::xercesc::XMLFormatTarget& ft,
                            const ::properties::S335M::ClassificationObjects& x, 
                            ::xercesc::DOMErrorHandler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ClassificationObjects_ (::xercesc::DOMDocument& d,
                            const ::properties::S335M::ClassificationObjects& x,
                            ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ClassificationObjects_ (const ::properties::S335M::ClassificationObjects& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SceneShotObjects_ (::std::ostream& os,
                       const ::properties::S335M::SceneShotObjects& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    SceneShotObjects_ (::std::ostream& os,
                       const ::properties::S335M::SceneShotObjects& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    SceneShotObjects_ (::std::ostream& os,
                       const ::properties::S335M::SceneShotObjects& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SceneShotObjects_ (::xercesc::XMLFormatTarget& ft,
                       const ::properties::S335M::SceneShotObjects& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    SceneShotObjects_ (::xercesc::XMLFormatTarget& ft,
                       const ::properties::S335M::SceneShotObjects& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    SceneShotObjects_ (::xercesc::XMLFormatTarget& ft,
                       const ::properties::S335M::SceneShotObjects& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SceneShotObjects_ (::xercesc::DOMDocument& d,
                       const ::properties::S335M::SceneShotObjects& x,
                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SceneShotObjects_ (const ::properties::S335M::SceneShotObjects& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ClipShotObjects_ (::std::ostream& os,
                      const ::properties::S335M::ClipShotObjects& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    ClipShotObjects_ (::std::ostream& os,
                      const ::properties::S335M::ClipShotObjects& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    ClipShotObjects_ (::std::ostream& os,
                      const ::properties::S335M::ClipShotObjects& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ClipShotObjects_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::ClipShotObjects& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    ClipShotObjects_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::ClipShotObjects& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    ClipShotObjects_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::ClipShotObjects& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ClipShotObjects_ (::xercesc::DOMDocument& d,
                      const ::properties::S335M::ClipShotObjects& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ClipShotObjects_ (const ::properties::S335M::ClipShotObjects& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    KeypointObjects_ (::std::ostream& os,
                      const ::properties::S335M::KeypointObjects& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    KeypointObjects_ (::std::ostream& os,
                      const ::properties::S335M::KeypointObjects& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    KeypointObjects_ (::std::ostream& os,
                      const ::properties::S335M::KeypointObjects& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    KeypointObjects_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::KeypointObjects& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    KeypointObjects_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::KeypointObjects& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    KeypointObjects_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::KeypointObjects& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    KeypointObjects_ (::xercesc::DOMDocument& d,
                      const ::properties::S335M::KeypointObjects& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    KeypointObjects_ (const ::properties::S335M::KeypointObjects& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ParticipantObjects_ (::std::ostream& os,
                         const ::properties::S335M::ParticipantObjects& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    ParticipantObjects_ (::std::ostream& os,
                         const ::properties::S335M::ParticipantObjects& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    ParticipantObjects_ (::std::ostream& os,
                         const ::properties::S335M::ParticipantObjects& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ParticipantObjects_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::ParticipantObjects& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    ParticipantObjects_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::ParticipantObjects& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    ParticipantObjects_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::ParticipantObjects& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ParticipantObjects_ (::xercesc::DOMDocument& d,
                         const ::properties::S335M::ParticipantObjects& x,
                         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ParticipantObjects_ (const ::properties::S335M::ParticipantObjects& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PersonObjects_ (::std::ostream& os,
                    const ::properties::S335M::PersonObjects& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    PersonObjects_ (::std::ostream& os,
                    const ::properties::S335M::PersonObjects& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    PersonObjects_ (::std::ostream& os,
                    const ::properties::S335M::PersonObjects& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PersonObjects_ (::xercesc::XMLFormatTarget& ft,
                    const ::properties::S335M::PersonObjects& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    PersonObjects_ (::xercesc::XMLFormatTarget& ft,
                    const ::properties::S335M::PersonObjects& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    PersonObjects_ (::xercesc::XMLFormatTarget& ft,
                    const ::properties::S335M::PersonObjects& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PersonObjects_ (::xercesc::DOMDocument& d,
                    const ::properties::S335M::PersonObjects& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PersonObjects_ (const ::properties::S335M::PersonObjects& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    OrganizationObjects_ (::std::ostream& os,
                          const ::properties::S335M::OrganizationObjects& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    OrganizationObjects_ (::std::ostream& os,
                          const ::properties::S335M::OrganizationObjects& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    OrganizationObjects_ (::std::ostream& os,
                          const ::properties::S335M::OrganizationObjects& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    OrganizationObjects_ (::xercesc::XMLFormatTarget& ft,
                          const ::properties::S335M::OrganizationObjects& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    OrganizationObjects_ (::xercesc::XMLFormatTarget& ft,
                          const ::properties::S335M::OrganizationObjects& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    OrganizationObjects_ (::xercesc::XMLFormatTarget& ft,
                          const ::properties::S335M::OrganizationObjects& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    OrganizationObjects_ (::xercesc::DOMDocument& d,
                          const ::properties::S335M::OrganizationObjects& x,
                          ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    OrganizationObjects_ (const ::properties::S335M::OrganizationObjects& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    LocationObjects_ (::std::ostream& os,
                      const ::properties::S335M::LocationObjects& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    LocationObjects_ (::std::ostream& os,
                      const ::properties::S335M::LocationObjects& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    LocationObjects_ (::std::ostream& os,
                      const ::properties::S335M::LocationObjects& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    LocationObjects_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::LocationObjects& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    LocationObjects_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::LocationObjects& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    LocationObjects_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::LocationObjects& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    LocationObjects_ (::xercesc::DOMDocument& d,
                      const ::properties::S335M::LocationObjects& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    LocationObjects_ (const ::properties::S335M::LocationObjects& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    AddressObjects_ (::std::ostream& os,
                     const ::properties::S335M::AddressObjects& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    AddressObjects_ (::std::ostream& os,
                     const ::properties::S335M::AddressObjects& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    AddressObjects_ (::std::ostream& os,
                     const ::properties::S335M::AddressObjects& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    AddressObjects_ (::xercesc::XMLFormatTarget& ft,
                     const ::properties::S335M::AddressObjects& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    AddressObjects_ (::xercesc::XMLFormatTarget& ft,
                     const ::properties::S335M::AddressObjects& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    AddressObjects_ (::xercesc::XMLFormatTarget& ft,
                     const ::properties::S335M::AddressObjects& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    AddressObjects_ (::xercesc::DOMDocument& d,
                     const ::properties::S335M::AddressObjects& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    AddressObjects_ (const ::properties::S335M::AddressObjects& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    CommunicationsObjects_ (::std::ostream& os,
                            const ::properties::S335M::CommunicationsObjects& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    CommunicationsObjects_ (::std::ostream& os,
                            const ::properties::S335M::CommunicationsObjects& x, 
                            ::xml_schema::error_handler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    CommunicationsObjects_ (::std::ostream& os,
                            const ::properties::S335M::CommunicationsObjects& x, 
                            ::xercesc::DOMErrorHandler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    CommunicationsObjects_ (::xercesc::XMLFormatTarget& ft,
                            const ::properties::S335M::CommunicationsObjects& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    CommunicationsObjects_ (::xercesc::XMLFormatTarget& ft,
                            const ::properties::S335M::CommunicationsObjects& x, 
                            ::xml_schema::error_handler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    CommunicationsObjects_ (::xercesc::XMLFormatTarget& ft,
                            const ::properties::S335M::CommunicationsObjects& x, 
                            ::xercesc::DOMErrorHandler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    CommunicationsObjects_ (::xercesc::DOMDocument& d,
                            const ::properties::S335M::CommunicationsObjects& x,
                            ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    CommunicationsObjects_ (const ::properties::S335M::CommunicationsObjects& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ContractObjects_ (::std::ostream& os,
                      const ::properties::S335M::ContractObjects& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    ContractObjects_ (::std::ostream& os,
                      const ::properties::S335M::ContractObjects& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    ContractObjects_ (::std::ostream& os,
                      const ::properties::S335M::ContractObjects& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ContractObjects_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::ContractObjects& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    ContractObjects_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::ContractObjects& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    ContractObjects_ (::xercesc::XMLFormatTarget& ft,
                      const ::properties::S335M::ContractObjects& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ContractObjects_ (::xercesc::DOMDocument& d,
                      const ::properties::S335M::ContractObjects& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ContractObjects_ (const ::properties::S335M::ContractObjects& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    RightsObjects_ (::std::ostream& os,
                    const ::properties::S335M::RightsObjects& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    RightsObjects_ (::std::ostream& os,
                    const ::properties::S335M::RightsObjects& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    RightsObjects_ (::std::ostream& os,
                    const ::properties::S335M::RightsObjects& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    RightsObjects_ (::xercesc::XMLFormatTarget& ft,
                    const ::properties::S335M::RightsObjects& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    RightsObjects_ (::xercesc::XMLFormatTarget& ft,
                    const ::properties::S335M::RightsObjects& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    RightsObjects_ (::xercesc::XMLFormatTarget& ft,
                    const ::properties::S335M::RightsObjects& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    RightsObjects_ (::xercesc::DOMDocument& d,
                    const ::properties::S335M::RightsObjects& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    RightsObjects_ (const ::properties::S335M::RightsObjects& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DeviceParametersObjects_ (::std::ostream& os,
                              const ::properties::S335M::DeviceParametersObjects& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    DeviceParametersObjects_ (::std::ostream& os,
                              const ::properties::S335M::DeviceParametersObjects& x, 
                              ::xml_schema::error_handler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    DeviceParametersObjects_ (::std::ostream& os,
                              const ::properties::S335M::DeviceParametersObjects& x, 
                              ::xercesc::DOMErrorHandler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DeviceParametersObjects_ (::xercesc::XMLFormatTarget& ft,
                              const ::properties::S335M::DeviceParametersObjects& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    DeviceParametersObjects_ (::xercesc::XMLFormatTarget& ft,
                              const ::properties::S335M::DeviceParametersObjects& x, 
                              ::xml_schema::error_handler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    DeviceParametersObjects_ (::xercesc::XMLFormatTarget& ft,
                              const ::properties::S335M::DeviceParametersObjects& x, 
                              ::xercesc::DOMErrorHandler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DeviceParametersObjects_ (::xercesc::DOMDocument& d,
                              const ::properties::S335M::DeviceParametersObjects& x,
                              ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DeviceParametersObjects_ (const ::properties::S335M::DeviceParametersObjects& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ClassificationNameValueObjects_ (::std::ostream& os,
                                     const ::properties::S335M::ClassificationNameValueObjects& x, 
                                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                     const ::std::string& e = "UTF-8",
                                     ::xml_schema::flags f = 0);

    void
    ClassificationNameValueObjects_ (::std::ostream& os,
                                     const ::properties::S335M::ClassificationNameValueObjects& x, 
                                     ::xml_schema::error_handler& eh,
                                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                     const ::std::string& e = "UTF-8",
                                     ::xml_schema::flags f = 0);

    void
    ClassificationNameValueObjects_ (::std::ostream& os,
                                     const ::properties::S335M::ClassificationNameValueObjects& x, 
                                     ::xercesc::DOMErrorHandler& eh,
                                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                     const ::std::string& e = "UTF-8",
                                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ClassificationNameValueObjects_ (::xercesc::XMLFormatTarget& ft,
                                     const ::properties::S335M::ClassificationNameValueObjects& x, 
                                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                     const ::std::string& e = "UTF-8",
                                     ::xml_schema::flags f = 0);

    void
    ClassificationNameValueObjects_ (::xercesc::XMLFormatTarget& ft,
                                     const ::properties::S335M::ClassificationNameValueObjects& x, 
                                     ::xml_schema::error_handler& eh,
                                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                     const ::std::string& e = "UTF-8",
                                     ::xml_schema::flags f = 0);

    void
    ClassificationNameValueObjects_ (::xercesc::XMLFormatTarget& ft,
                                     const ::properties::S335M::ClassificationNameValueObjects& x, 
                                     ::xercesc::DOMErrorHandler& eh,
                                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                     const ::std::string& e = "UTF-8",
                                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ClassificationNameValueObjects_ (::xercesc::DOMDocument& d,
                                     const ::properties::S335M::ClassificationNameValueObjects& x,
                                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ClassificationNameValueObjects_ (const ::properties::S335M::ClassificationNameValueObjects& x, 
                                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ContactNameValueObjects_ (::std::ostream& os,
                              const ::properties::S335M::ContactNameValueObjects& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    ContactNameValueObjects_ (::std::ostream& os,
                              const ::properties::S335M::ContactNameValueObjects& x, 
                              ::xml_schema::error_handler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    ContactNameValueObjects_ (::std::ostream& os,
                              const ::properties::S335M::ContactNameValueObjects& x, 
                              ::xercesc::DOMErrorHandler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ContactNameValueObjects_ (::xercesc::XMLFormatTarget& ft,
                              const ::properties::S335M::ContactNameValueObjects& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    ContactNameValueObjects_ (::xercesc::XMLFormatTarget& ft,
                              const ::properties::S335M::ContactNameValueObjects& x, 
                              ::xml_schema::error_handler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    ContactNameValueObjects_ (::xercesc::XMLFormatTarget& ft,
                              const ::properties::S335M::ContactNameValueObjects& x, 
                              ::xercesc::DOMErrorHandler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ContactNameValueObjects_ (::xercesc::DOMDocument& d,
                              const ::properties::S335M::ContactNameValueObjects& x,
                              ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ContactNameValueObjects_ (const ::properties::S335M::ContactNameValueObjects& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    DeviceParametersNameValueObjects_ (::std::ostream& os,
                                       const ::properties::S335M::DeviceParametersNameValueObjects& x, 
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    void
    DeviceParametersNameValueObjects_ (::std::ostream& os,
                                       const ::properties::S335M::DeviceParametersNameValueObjects& x, 
                                       ::xml_schema::error_handler& eh,
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    void
    DeviceParametersNameValueObjects_ (::std::ostream& os,
                                       const ::properties::S335M::DeviceParametersNameValueObjects& x, 
                                       ::xercesc::DOMErrorHandler& eh,
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    DeviceParametersNameValueObjects_ (::xercesc::XMLFormatTarget& ft,
                                       const ::properties::S335M::DeviceParametersNameValueObjects& x, 
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    void
    DeviceParametersNameValueObjects_ (::xercesc::XMLFormatTarget& ft,
                                       const ::properties::S335M::DeviceParametersNameValueObjects& x, 
                                       ::xml_schema::error_handler& eh,
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    void
    DeviceParametersNameValueObjects_ (::xercesc::XMLFormatTarget& ft,
                                       const ::properties::S335M::DeviceParametersNameValueObjects& x, 
                                       ::xercesc::DOMErrorHandler& eh,
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       const ::std::string& e = "UTF-8",
                                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    DeviceParametersNameValueObjects_ (::xercesc::DOMDocument& d,
                                       const ::properties::S335M::DeviceParametersNameValueObjects& x,
                                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    DeviceParametersNameValueObjects_ (const ::properties::S335M::DeviceParametersNameValueObjects& x, 
                                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    MetadataServerLocators_ (::std::ostream& os,
                             const ::properties::S335M::MetadataServerLocators& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    MetadataServerLocators_ (::std::ostream& os,
                             const ::properties::S335M::MetadataServerLocators& x, 
                             ::xml_schema::error_handler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    MetadataServerLocators_ (::std::ostream& os,
                             const ::properties::S335M::MetadataServerLocators& x, 
                             ::xercesc::DOMErrorHandler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    MetadataServerLocators_ (::xercesc::XMLFormatTarget& ft,
                             const ::properties::S335M::MetadataServerLocators& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    MetadataServerLocators_ (::xercesc::XMLFormatTarget& ft,
                             const ::properties::S335M::MetadataServerLocators& x, 
                             ::xml_schema::error_handler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    MetadataServerLocators_ (::xercesc::XMLFormatTarget& ft,
                             const ::properties::S335M::MetadataServerLocators& x, 
                             ::xercesc::DOMErrorHandler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    MetadataServerLocators_ (::xercesc::DOMDocument& d,
                             const ::properties::S335M::MetadataServerLocators& x,
                             ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    MetadataServerLocators_ (const ::properties::S335M::MetadataServerLocators& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    RelatedMaterialLocators_ (::std::ostream& os,
                              const ::properties::S335M::RelatedMaterialLocators& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    RelatedMaterialLocators_ (::std::ostream& os,
                              const ::properties::S335M::RelatedMaterialLocators& x, 
                              ::xml_schema::error_handler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    RelatedMaterialLocators_ (::std::ostream& os,
                              const ::properties::S335M::RelatedMaterialLocators& x, 
                              ::xercesc::DOMErrorHandler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    RelatedMaterialLocators_ (::xercesc::XMLFormatTarget& ft,
                              const ::properties::S335M::RelatedMaterialLocators& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    RelatedMaterialLocators_ (::xercesc::XMLFormatTarget& ft,
                              const ::properties::S335M::RelatedMaterialLocators& x, 
                              ::xml_schema::error_handler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    RelatedMaterialLocators_ (::xercesc::XMLFormatTarget& ft,
                              const ::properties::S335M::RelatedMaterialLocators& x, 
                              ::xercesc::DOMErrorHandler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    RelatedMaterialLocators_ (::xercesc::DOMDocument& d,
                              const ::properties::S335M::RelatedMaterialLocators& x,
                              ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    RelatedMaterialLocators_ (const ::properties::S335M::RelatedMaterialLocators& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ChannelIDs_ (::std::ostream& os,
                 const ::properties::S335M::ChannelIDs& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    ChannelIDs_ (::std::ostream& os,
                 const ::properties::S335M::ChannelIDs& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    ChannelIDs_ (::std::ostream& os,
                 const ::properties::S335M::ChannelIDs& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ChannelIDs_ (::xercesc::XMLFormatTarget& ft,
                 const ::properties::S335M::ChannelIDs& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    ChannelIDs_ (::xercesc::XMLFormatTarget& ft,
                 const ::properties::S335M::ChannelIDs& x, 
                 ::xml_schema::error_handler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    void
    ChannelIDs_ (::xercesc::XMLFormatTarget& ft,
                 const ::properties::S335M::ChannelIDs& x, 
                 ::xercesc::DOMErrorHandler& eh,
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 const ::std::string& e = "UTF-8",
                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ChannelIDs_ (::xercesc::DOMDocument& d,
                 const ::properties::S335M::ChannelIDs& x,
                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ChannelIDs_ (const ::properties::S335M::ChannelIDs& x, 
                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    MonoSourceTrackIDs_ (::std::ostream& os,
                         const ::properties::S335M::MonoSourceTrackIDs& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    MonoSourceTrackIDs_ (::std::ostream& os,
                         const ::properties::S335M::MonoSourceTrackIDs& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    MonoSourceTrackIDs_ (::std::ostream& os,
                         const ::properties::S335M::MonoSourceTrackIDs& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    MonoSourceTrackIDs_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::MonoSourceTrackIDs& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    MonoSourceTrackIDs_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::MonoSourceTrackIDs& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    MonoSourceTrackIDs_ (::xercesc::XMLFormatTarget& ft,
                         const ::properties::S335M::MonoSourceTrackIDs& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    MonoSourceTrackIDs_ (::xercesc::DOMDocument& d,
                         const ::properties::S335M::MonoSourceTrackIDs& x,
                         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    MonoSourceTrackIDs_ (const ::properties::S335M::MonoSourceTrackIDs& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SubDescriptors_ (::std::ostream& os,
                     const ::properties::S335M::SubDescriptors& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    SubDescriptors_ (::std::ostream& os,
                     const ::properties::S335M::SubDescriptors& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    SubDescriptors_ (::std::ostream& os,
                     const ::properties::S335M::SubDescriptors& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SubDescriptors_ (::xercesc::XMLFormatTarget& ft,
                     const ::properties::S335M::SubDescriptors& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    SubDescriptors_ (::xercesc::XMLFormatTarget& ft,
                     const ::properties::S335M::SubDescriptors& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    SubDescriptors_ (::xercesc::XMLFormatTarget& ft,
                     const ::properties::S335M::SubDescriptors& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SubDescriptors_ (::xercesc::DOMDocument& d,
                     const ::properties::S335M::SubDescriptors& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SubDescriptors_ (const ::properties::S335M::SubDescriptors& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    StartPosition (::std::ostream& os,
                   const ::st434::s377m::types::Position& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    StartPosition (::std::ostream& os,
                   const ::st434::s377m::types::Position& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    StartPosition (::std::ostream& os,
                   const ::st434::s377m::types::Position& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    StartPosition (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::Position& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    StartPosition (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::Position& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    StartPosition (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::Position& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    StartPosition (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::Position& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    StartPosition (const ::st434::s377m::types::Position& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ComponentLength (::std::ostream& os,
                     const ::st434::s377m::types::Length& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ComponentLength (::std::ostream& os,
                     const ::st434::s377m::types::Length& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ComponentLength (::std::ostream& os,
                     const ::st434::s377m::types::Length& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ComponentLength (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::Length& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ComponentLength (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::Length& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ComponentLength (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::Length& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ComponentLength (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::Length& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ComponentLength (const ::st434::s377m::types::Length& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    EventPosition (::std::ostream& os,
                   const ::st434::s377m::types::Position& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    EventPosition (::std::ostream& os,
                   const ::st434::s377m::types::Position& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    EventPosition (::std::ostream& os,
                   const ::st434::s377m::types::Position& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    EventPosition (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::Position& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    EventPosition (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::Position& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    EventPosition (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::Position& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    EventPosition (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::Position& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    EventPosition (const ::st434::s377m::types::Position& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    FileModificationDate (::std::ostream& os,
                          const ::st434::s377m::types::TimestampType& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    FileModificationDate (::std::ostream& os,
                          const ::st434::s377m::types::TimestampType& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    FileModificationDate (::std::ostream& os,
                          const ::st434::s377m::types::TimestampType& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    FileModificationDate (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::TimestampType& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    FileModificationDate (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::TimestampType& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    FileModificationDate (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::TimestampType& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    FileModificationDate (::xercesc::DOMDocument& d,
                          const ::st434::s377m::types::TimestampType& x,
                          ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    FileModificationDate (const ::st434::s377m::types::TimestampType& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PackageLastModified (::std::ostream& os,
                         const ::st434::s377m::types::TimestampType& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    PackageLastModified (::std::ostream& os,
                         const ::st434::s377m::types::TimestampType& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    PackageLastModified (::std::ostream& os,
                         const ::st434::s377m::types::TimestampType& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PackageLastModified (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::TimestampType& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    PackageLastModified (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::TimestampType& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    PackageLastModified (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::TimestampType& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PackageLastModified (::xercesc::DOMDocument& d,
                         const ::st434::s377m::types::TimestampType& x,
                         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PackageLastModified (const ::st434::s377m::types::TimestampType& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    FileLastModified (::std::ostream& os,
                      const ::st434::s377m::types::TimestampType& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    FileLastModified (::std::ostream& os,
                      const ::st434::s377m::types::TimestampType& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    FileLastModified (::std::ostream& os,
                      const ::st434::s377m::types::TimestampType& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    FileLastModified (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::TimestampType& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    FileLastModified (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::TimestampType& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    FileLastModified (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::TimestampType& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    FileLastModified (::xercesc::DOMDocument& d,
                      const ::st434::s377m::types::TimestampType& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    FileLastModified (const ::st434::s377m::types::TimestampType& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Origin (::std::ostream& os,
            const ::st434::s377m::types::Position& x, 
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    void
    Origin (::std::ostream& os,
            const ::st434::s377m::types::Position& x, 
            ::xml_schema::error_handler& eh,
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    void
    Origin (::std::ostream& os,
            const ::st434::s377m::types::Position& x, 
            ::xercesc::DOMErrorHandler& eh,
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Origin (::xercesc::XMLFormatTarget& ft,
            const ::st434::s377m::types::Position& x, 
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    void
    Origin (::xercesc::XMLFormatTarget& ft,
            const ::st434::s377m::types::Position& x, 
            ::xml_schema::error_handler& eh,
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    void
    Origin (::xercesc::XMLFormatTarget& ft,
            const ::st434::s377m::types::Position& x, 
            ::xercesc::DOMErrorHandler& eh,
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Origin (::xercesc::DOMDocument& d,
            const ::st434::s377m::types::Position& x,
            ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    Origin (const ::st434::s377m::types::Position& x, 
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    EventTrackOrigin (::std::ostream& os,
                      const ::st434::s377m::types::Position& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    EventTrackOrigin (::std::ostream& os,
                      const ::st434::s377m::types::Position& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    EventTrackOrigin (::std::ostream& os,
                      const ::st434::s377m::types::Position& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    EventTrackOrigin (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::Position& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    EventTrackOrigin (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::Position& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    EventTrackOrigin (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::Position& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    EventTrackOrigin (::xercesc::DOMDocument& d,
                      const ::st434::s377m::types::Position& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    EventTrackOrigin (const ::st434::s377m::types::Position& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    CreationTime (::std::ostream& os,
                  const ::st434::s377m::types::TimestampType& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    CreationTime (::std::ostream& os,
                  const ::st434::s377m::types::TimestampType& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    CreationTime (::std::ostream& os,
                  const ::st434::s377m::types::TimestampType& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    CreationTime (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::TimestampType& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    CreationTime (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::TimestampType& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    CreationTime (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::TimestampType& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    CreationTime (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::TimestampType& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    CreationTime (const ::st434::s377m::types::TimestampType& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    StartTimecode (::std::ostream& os,
                   const ::st434::s377m::types::Position& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    StartTimecode (::std::ostream& os,
                   const ::st434::s377m::types::Position& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    StartTimecode (::std::ostream& os,
                   const ::st434::s377m::types::Position& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    StartTimecode (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::Position& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    StartTimecode (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::Position& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    StartTimecode (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::Position& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    StartTimecode (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::Position& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    StartTimecode (const ::st434::s377m::types::Position& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    LinkedPackageID (::std::ostream& os,
                     const ::st434::s377m::types::UMID32& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    LinkedPackageID (::std::ostream& os,
                     const ::st434::s377m::types::UMID32& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    LinkedPackageID (::std::ostream& os,
                     const ::st434::s377m::types::UMID32& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    LinkedPackageID (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UMID32& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    LinkedPackageID (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UMID32& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    LinkedPackageID (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UMID32& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    LinkedPackageID (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::UMID32& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    LinkedPackageID (const ::st434::s377m::types::UMID32& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Codec (::std::ostream& os,
           const ::st434::s377m::types::UL& x, 
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    Codec (::std::ostream& os,
           const ::st434::s377m::types::UL& x, 
           ::xml_schema::error_handler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    Codec (::std::ostream& os,
           const ::st434::s377m::types::UL& x, 
           ::xercesc::DOMErrorHandler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Codec (::xercesc::XMLFormatTarget& ft,
           const ::st434::s377m::types::UL& x, 
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    Codec (::xercesc::XMLFormatTarget& ft,
           const ::st434::s377m::types::UL& x, 
           ::xml_schema::error_handler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    Codec (::xercesc::XMLFormatTarget& ft,
           const ::st434::s377m::types::UL& x, 
           ::xercesc::DOMErrorHandler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Codec (::xercesc::DOMDocument& d,
           const ::st434::s377m::types::UL& x,
           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    Codec (const ::st434::s377m::types::UL& x, 
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ContainerFormat (::std::ostream& os,
                     const ::st434::s377m::types::UL& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ContainerFormat (::std::ostream& os,
                     const ::st434::s377m::types::UL& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ContainerFormat (::std::ostream& os,
                     const ::st434::s377m::types::UL& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ContainerFormat (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UL& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ContainerFormat (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UL& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    ContainerFormat (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UL& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ContainerFormat (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::UL& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ContainerFormat (const ::st434::s377m::types::UL& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    IndexStartPosition (::std::ostream& os,
                        const ::st434::s377m::types::Position& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    IndexStartPosition (::std::ostream& os,
                        const ::st434::s377m::types::Position& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    IndexStartPosition (::std::ostream& os,
                        const ::st434::s377m::types::Position& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    IndexStartPosition (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::Position& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    IndexStartPosition (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::Position& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    IndexStartPosition (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::Position& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    IndexStartPosition (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::Position& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    IndexStartPosition (const ::st434::s377m::types::Position& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    IndexDuration (::std::ostream& os,
                   const ::st434::s377m::types::Length& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    IndexDuration (::std::ostream& os,
                   const ::st434::s377m::types::Length& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    IndexDuration (::std::ostream& os,
                   const ::st434::s377m::types::Length& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    IndexDuration (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::Length& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    IndexDuration (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::Length& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    IndexDuration (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::Length& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    IndexDuration (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::Length& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    IndexDuration (const ::st434::s377m::types::Length& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    RegionAreaOfIPLicense (::std::ostream& os,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    RegionAreaOfIPLicense (::std::ostream& os,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    RegionAreaOfIPLicense (::std::ostream& os,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    RegionAreaOfIPLicense (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    RegionAreaOfIPLicense (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    RegionAreaOfIPLicense (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UTF16CharString& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    RegionAreaOfIPLicense (::xercesc::DOMDocument& d,
                           const ::st434::s377m::types::UTF16CharString& x,
                           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    RegionAreaOfIPLicense (const ::st434::s377m::types::UTF16CharString& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PlaceName (::std::ostream& os,
               const ::st434::s377m::types::UTF16CharString& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    PlaceName (::std::ostream& os,
               const ::st434::s377m::types::UTF16CharString& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    PlaceName (::std::ostream& os,
               const ::st434::s377m::types::UTF16CharString& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PlaceName (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::UTF16CharString& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    PlaceName (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::UTF16CharString& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    PlaceName (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::UTF16CharString& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PlaceName (::xercesc::DOMDocument& d,
               const ::st434::s377m::types::UTF16CharString& x,
               ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PlaceName (const ::st434::s377m::types::UTF16CharString& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    GeographicalCoordinates (::std::ostream& os,
                             const ::st434::s377m::types::DataStream& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    GeographicalCoordinates (::std::ostream& os,
                             const ::st434::s377m::types::DataStream& x, 
                             ::xml_schema::error_handler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    GeographicalCoordinates (::std::ostream& os,
                             const ::st434::s377m::types::DataStream& x, 
                             ::xercesc::DOMErrorHandler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    GeographicalCoordinates (::xercesc::XMLFormatTarget& ft,
                             const ::st434::s377m::types::DataStream& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    GeographicalCoordinates (::xercesc::XMLFormatTarget& ft,
                             const ::st434::s377m::types::DataStream& x, 
                             ::xml_schema::error_handler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    GeographicalCoordinates (::xercesc::XMLFormatTarget& ft,
                             const ::st434::s377m::types::DataStream& x, 
                             ::xercesc::DOMErrorHandler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    GeographicalCoordinates (::xercesc::DOMDocument& d,
                             const ::st434::s377m::types::DataStream& x,
                             ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    GeographicalCoordinates (const ::st434::s377m::types::DataStream& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    AstronomicalBodyName (::std::ostream& os,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    AstronomicalBodyName (::std::ostream& os,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    AstronomicalBodyName (::std::ostream& os,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    AstronomicalBodyName (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    AstronomicalBodyName (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    AstronomicalBodyName (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::UTF16CharString& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    AstronomicalBodyName (::xercesc::DOMDocument& d,
                          const ::st434::s377m::types::UTF16CharString& x,
                          ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    AstronomicalBodyName (const ::st434::s377m::types::UTF16CharString& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    RoomSuiteNumber (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    RoomSuiteNumber (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    RoomSuiteNumber (::std::ostream& os,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    RoomSuiteNumber (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    RoomSuiteNumber (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    RoomSuiteNumber (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UTF16CharString& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    RoomSuiteNumber (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::UTF16CharString& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    RoomSuiteNumber (const ::st434::s377m::types::UTF16CharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ClipCreationDateTime (::std::ostream& os,
                          const ::st434::s377m::types::TimestampType& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    ClipCreationDateTime (::std::ostream& os,
                          const ::st434::s377m::types::TimestampType& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    ClipCreationDateTime (::std::ostream& os,
                          const ::st434::s377m::types::TimestampType& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ClipCreationDateTime (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::TimestampType& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    ClipCreationDateTime (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::TimestampType& x, 
                          ::xml_schema::error_handler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    void
    ClipCreationDateTime (::xercesc::XMLFormatTarget& ft,
                          const ::st434::s377m::types::TimestampType& x, 
                          ::xercesc::DOMErrorHandler& eh,
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          const ::std::string& e = "UTF-8",
                          ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ClipCreationDateTime (::xercesc::DOMDocument& d,
                          const ::st434::s377m::types::TimestampType& x,
                          ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ClipCreationDateTime (const ::st434::s377m::types::TimestampType& x, 
                          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                          ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    StreetNumber (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    StreetNumber (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    StreetNumber (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    StreetNumber (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    StreetNumber (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    StreetNumber (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    StreetNumber (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UTF16CharString& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    StreetNumber (const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    StreetName (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    StreetName (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    StreetName (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    StreetName (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    StreetName (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    StreetName (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    StreetName (::xercesc::DOMDocument& d,
                const ::st434::s377m::types::UTF16CharString& x,
                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    StreetName (const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PostalTown (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    PostalTown (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    PostalTown (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PostalTown (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    PostalTown (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    PostalTown (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PostalTown (::xercesc::DOMDocument& d,
                const ::st434::s377m::types::UTF16CharString& x,
                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PostalTown (const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    City (::std::ostream& os,
          const ::st434::s377m::types::UTF16CharString& x, 
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    void
    City (::std::ostream& os,
          const ::st434::s377m::types::UTF16CharString& x, 
          ::xml_schema::error_handler& eh,
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    void
    City (::std::ostream& os,
          const ::st434::s377m::types::UTF16CharString& x, 
          ::xercesc::DOMErrorHandler& eh,
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    City (::xercesc::XMLFormatTarget& ft,
          const ::st434::s377m::types::UTF16CharString& x, 
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    void
    City (::xercesc::XMLFormatTarget& ft,
          const ::st434::s377m::types::UTF16CharString& x, 
          ::xml_schema::error_handler& eh,
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    void
    City (::xercesc::XMLFormatTarget& ft,
          const ::st434::s377m::types::UTF16CharString& x, 
          ::xercesc::DOMErrorHandler& eh,
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    City (::xercesc::DOMDocument& d,
          const ::st434::s377m::types::UTF16CharString& x,
          ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    City (const ::st434::s377m::types::UTF16CharString& x, 
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    StateProvinceCounty (::std::ostream& os,
                         const ::st434::s377m::types::UTF16CharString& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    StateProvinceCounty (::std::ostream& os,
                         const ::st434::s377m::types::UTF16CharString& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    StateProvinceCounty (::std::ostream& os,
                         const ::st434::s377m::types::UTF16CharString& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    StateProvinceCounty (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::UTF16CharString& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    StateProvinceCounty (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::UTF16CharString& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    StateProvinceCounty (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::UTF16CharString& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    StateProvinceCounty (::xercesc::DOMDocument& d,
                         const ::st434::s377m::types::UTF16CharString& x,
                         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    StateProvinceCounty (const ::st434::s377m::types::UTF16CharString& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PostalCode (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    PostalCode (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    PostalCode (::std::ostream& os,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PostalCode (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    PostalCode (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xml_schema::error_handler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    void
    PostalCode (::xercesc::XMLFormatTarget& ft,
                const ::st434::s377m::types::UTF16CharString& x, 
                ::xercesc::DOMErrorHandler& eh,
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                const ::std::string& e = "UTF-8",
                ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PostalCode (::xercesc::DOMDocument& d,
                const ::st434::s377m::types::UTF16CharString& x,
                ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PostalCode (const ::st434::s377m::types::UTF16CharString& x, 
                const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Country (::std::ostream& os,
             const ::st434::s377m::types::UTF16CharString& x, 
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    Country (::std::ostream& os,
             const ::st434::s377m::types::UTF16CharString& x, 
             ::xml_schema::error_handler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    Country (::std::ostream& os,
             const ::st434::s377m::types::UTF16CharString& x, 
             ::xercesc::DOMErrorHandler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Country (::xercesc::XMLFormatTarget& ft,
             const ::st434::s377m::types::UTF16CharString& x, 
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    Country (::xercesc::XMLFormatTarget& ft,
             const ::st434::s377m::types::UTF16CharString& x, 
             ::xml_schema::error_handler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    void
    Country (::xercesc::XMLFormatTarget& ft,
             const ::st434::s377m::types::UTF16CharString& x, 
             ::xercesc::DOMErrorHandler& eh,
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             const ::std::string& e = "UTF-8",
             ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Country (::xercesc::DOMDocument& d,
             const ::st434::s377m::types::UTF16CharString& x,
             ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    Country (const ::st434::s377m::types::UTF16CharString& x, 
             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
             ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    RoomSuiteName (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    RoomSuiteName (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    RoomSuiteName (::std::ostream& os,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    RoomSuiteName (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    RoomSuiteName (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xml_schema::error_handler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    void
    RoomSuiteName (::xercesc::XMLFormatTarget& ft,
                   const ::st434::s377m::types::UTF16CharString& x, 
                   ::xercesc::DOMErrorHandler& eh,
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   const ::std::string& e = "UTF-8",
                   ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    RoomSuiteName (::xercesc::DOMDocument& d,
                   const ::st434::s377m::types::UTF16CharString& x,
                   ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    RoomSuiteName (const ::st434::s377m::types::UTF16CharString& x, 
                   const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                   ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    BuildingName (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    BuildingName (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    BuildingName (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    BuildingName (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    BuildingName (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    BuildingName (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    BuildingName (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UTF16CharString& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    BuildingName (const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    TelephoneNumber (::std::ostream& os,
                     const ::st434::s377m::types::ISO7bitCharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    TelephoneNumber (::std::ostream& os,
                     const ::st434::s377m::types::ISO7bitCharString& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    TelephoneNumber (::std::ostream& os,
                     const ::st434::s377m::types::ISO7bitCharString& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    TelephoneNumber (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::ISO7bitCharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    TelephoneNumber (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::ISO7bitCharString& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    TelephoneNumber (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::ISO7bitCharString& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    TelephoneNumber (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::ISO7bitCharString& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    TelephoneNumber (const ::st434::s377m::types::ISO7bitCharString& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    FaxNumber (::std::ostream& os,
               const ::st434::s377m::types::ISO7bitCharString& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    FaxNumber (::std::ostream& os,
               const ::st434::s377m::types::ISO7bitCharString& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    FaxNumber (::std::ostream& os,
               const ::st434::s377m::types::ISO7bitCharString& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    FaxNumber (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::ISO7bitCharString& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    FaxNumber (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::ISO7bitCharString& x, 
               ::xml_schema::error_handler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    void
    FaxNumber (::xercesc::XMLFormatTarget& ft,
               const ::st434::s377m::types::ISO7bitCharString& x, 
               ::xercesc::DOMErrorHandler& eh,
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               const ::std::string& e = "UTF-8",
               ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    FaxNumber (::xercesc::DOMDocument& d,
               const ::st434::s377m::types::ISO7bitCharString& x,
               ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    FaxNumber (const ::st434::s377m::types::ISO7bitCharString& x, 
               const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
               ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    EmailAddress (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    EmailAddress (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    EmailAddress (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    EmailAddress (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    EmailAddress (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    EmailAddress (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    EmailAddress (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UTF16CharString& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    EmailAddress (const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    CentralTelephoneNumber (::std::ostream& os,
                            const ::st434::s377m::types::ISO7bitCharString& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    CentralTelephoneNumber (::std::ostream& os,
                            const ::st434::s377m::types::ISO7bitCharString& x, 
                            ::xml_schema::error_handler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    CentralTelephoneNumber (::std::ostream& os,
                            const ::st434::s377m::types::ISO7bitCharString& x, 
                            ::xercesc::DOMErrorHandler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    CentralTelephoneNumber (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::ISO7bitCharString& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    CentralTelephoneNumber (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::ISO7bitCharString& x, 
                            ::xml_schema::error_handler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    CentralTelephoneNumber (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::ISO7bitCharString& x, 
                            ::xercesc::DOMErrorHandler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    CentralTelephoneNumber (::xercesc::DOMDocument& d,
                            const ::st434::s377m::types::ISO7bitCharString& x,
                            ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    CentralTelephoneNumber (const ::st434::s377m::types::ISO7bitCharString& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    MobileTelephoneNumber (::std::ostream& os,
                           const ::st434::s377m::types::ISO7bitCharString& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    MobileTelephoneNumber (::std::ostream& os,
                           const ::st434::s377m::types::ISO7bitCharString& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    MobileTelephoneNumber (::std::ostream& os,
                           const ::st434::s377m::types::ISO7bitCharString& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    MobileTelephoneNumber (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::ISO7bitCharString& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    MobileTelephoneNumber (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::ISO7bitCharString& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    MobileTelephoneNumber (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::ISO7bitCharString& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    MobileTelephoneNumber (::xercesc::DOMDocument& d,
                           const ::st434::s377m::types::ISO7bitCharString& x,
                           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    MobileTelephoneNumber (const ::st434::s377m::types::ISO7bitCharString& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ContactWebPage (::std::ostream& os,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ContactWebPage (::std::ostream& os,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ContactWebPage (::std::ostream& os,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ContactWebPage (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ContactWebPage (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xml_schema::error_handler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    void
    ContactWebPage (::xercesc::XMLFormatTarget& ft,
                    const ::st434::s377m::types::UTF16CharString& x, 
                    ::xercesc::DOMErrorHandler& eh,
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    const ::std::string& e = "UTF-8",
                    ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ContactWebPage (::xercesc::DOMDocument& d,
                    const ::st434::s377m::types::UTF16CharString& x,
                    ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ContactWebPage (const ::st434::s377m::types::UTF16CharString& x, 
                    const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                    ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    LocationDescription (::std::ostream& os,
                         const ::st434::s377m::types::UTF16CharString& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    LocationDescription (::std::ostream& os,
                         const ::st434::s377m::types::UTF16CharString& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    LocationDescription (::std::ostream& os,
                         const ::st434::s377m::types::UTF16CharString& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    LocationDescription (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::UTF16CharString& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    LocationDescription (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::UTF16CharString& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    LocationDescription (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::UTF16CharString& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    LocationDescription (::xercesc::DOMDocument& d,
                         const ::st434::s377m::types::UTF16CharString& x,
                         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    LocationDescription (const ::st434::s377m::types::UTF16CharString& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    LocationKind (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    LocationKind (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    LocationKind (::std::ostream& os,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    LocationKind (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    LocationKind (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    LocationKind (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UTF16CharString& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    LocationKind (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UTF16CharString& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    LocationKind (const ::st434::s377m::types::UTF16CharString& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    EventStartDateTime (::std::ostream& os,
                        const ::st434::s377m::types::ISO7bitCharString& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    EventStartDateTime (::std::ostream& os,
                        const ::st434::s377m::types::ISO7bitCharString& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    EventStartDateTime (::std::ostream& os,
                        const ::st434::s377m::types::ISO7bitCharString& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    EventStartDateTime (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::ISO7bitCharString& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    EventStartDateTime (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::ISO7bitCharString& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    EventStartDateTime (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::ISO7bitCharString& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    EventStartDateTime (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::ISO7bitCharString& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    EventStartDateTime (const ::st434::s377m::types::ISO7bitCharString& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    EventEndDateTime (::std::ostream& os,
                      const ::st434::s377m::types::ISO7bitCharString& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    EventEndDateTime (::std::ostream& os,
                      const ::st434::s377m::types::ISO7bitCharString& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    EventEndDateTime (::std::ostream& os,
                      const ::st434::s377m::types::ISO7bitCharString& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    EventEndDateTime (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::ISO7bitCharString& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    EventEndDateTime (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::ISO7bitCharString& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    EventEndDateTime (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::ISO7bitCharString& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    EventEndDateTime (::xercesc::DOMDocument& d,
                      const ::st434::s377m::types::ISO7bitCharString& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    EventEndDateTime (const ::st434::s377m::types::ISO7bitCharString& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    KeypointPosition (::std::ostream& os,
                      const ::st434::s377m::types::Position& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    KeypointPosition (::std::ostream& os,
                      const ::st434::s377m::types::Position& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    KeypointPosition (::std::ostream& os,
                      const ::st434::s377m::types::Position& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    KeypointPosition (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::Position& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    KeypointPosition (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::Position& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    KeypointPosition (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::Position& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    KeypointPosition (::xercesc::DOMDocument& d,
                      const ::st434::s377m::types::Position& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    KeypointPosition (const ::st434::s377m::types::Position& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ShotStartPosition (::std::ostream& os,
                       const ::st434::s377m::types::Position& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ShotStartPosition (::std::ostream& os,
                       const ::st434::s377m::types::Position& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ShotStartPosition (::std::ostream& os,
                       const ::st434::s377m::types::Position& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ShotStartPosition (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::Position& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ShotStartPosition (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::Position& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    ShotStartPosition (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::Position& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ShotStartPosition (::xercesc::DOMDocument& d,
                       const ::st434::s377m::types::Position& x,
                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ShotStartPosition (const ::st434::s377m::types::Position& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    FestivalDateTime (::std::ostream& os,
                      const ::st434::s377m::types::ISO7bitCharString& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    FestivalDateTime (::std::ostream& os,
                      const ::st434::s377m::types::ISO7bitCharString& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    FestivalDateTime (::std::ostream& os,
                      const ::st434::s377m::types::ISO7bitCharString& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    FestivalDateTime (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::ISO7bitCharString& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    FestivalDateTime (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::ISO7bitCharString& x, 
                      ::xml_schema::error_handler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    void
    FestivalDateTime (::xercesc::XMLFormatTarget& ft,
                      const ::st434::s377m::types::ISO7bitCharString& x, 
                      ::xercesc::DOMErrorHandler& eh,
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      const ::std::string& e = "UTF-8",
                      ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    FestivalDateTime (::xercesc::DOMDocument& d,
                      const ::st434::s377m::types::ISO7bitCharString& x,
                      ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    FestivalDateTime (const ::st434::s377m::types::ISO7bitCharString& x, 
                      const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                      ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    TimePeriodKeyword (::std::ostream& os,
                       const ::st434::s377m::types::UTF16CharString& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    TimePeriodKeyword (::std::ostream& os,
                       const ::st434::s377m::types::UTF16CharString& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    TimePeriodKeyword (::std::ostream& os,
                       const ::st434::s377m::types::UTF16CharString& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    TimePeriodKeyword (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UTF16CharString& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    TimePeriodKeyword (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UTF16CharString& x, 
                       ::xml_schema::error_handler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    void
    TimePeriodKeyword (::xercesc::XMLFormatTarget& ft,
                       const ::st434::s377m::types::UTF16CharString& x, 
                       ::xercesc::DOMErrorHandler& eh,
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       const ::std::string& e = "UTF-8",
                       ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    TimePeriodKeyword (::xercesc::DOMDocument& d,
                       const ::st434::s377m::types::UTF16CharString& x,
                       ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    TimePeriodKeyword (const ::st434::s377m::types::UTF16CharString& x, 
                       const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                       ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SettingDateTime (::std::ostream& os,
                     const ::st434::s377m::types::TimestampType& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    SettingDateTime (::std::ostream& os,
                     const ::st434::s377m::types::TimestampType& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    SettingDateTime (::std::ostream& os,
                     const ::st434::s377m::types::TimestampType& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SettingDateTime (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::TimestampType& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    SettingDateTime (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::TimestampType& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    SettingDateTime (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::TimestampType& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SettingDateTime (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::TimestampType& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SettingDateTime (const ::st434::s377m::types::TimestampType& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SettingPeriodDescription (::std::ostream& os,
                              const ::st434::s377m::types::UTF16CharString& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    SettingPeriodDescription (::std::ostream& os,
                              const ::st434::s377m::types::UTF16CharString& x, 
                              ::xml_schema::error_handler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    SettingPeriodDescription (::std::ostream& os,
                              const ::st434::s377m::types::UTF16CharString& x, 
                              ::xercesc::DOMErrorHandler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SettingPeriodDescription (::xercesc::XMLFormatTarget& ft,
                              const ::st434::s377m::types::UTF16CharString& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    SettingPeriodDescription (::xercesc::XMLFormatTarget& ft,
                              const ::st434::s377m::types::UTF16CharString& x, 
                              ::xml_schema::error_handler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    void
    SettingPeriodDescription (::xercesc::XMLFormatTarget& ft,
                              const ::st434::s377m::types::UTF16CharString& x, 
                              ::xercesc::DOMErrorHandler& eh,
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              const ::std::string& e = "UTF-8",
                              ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SettingPeriodDescription (::xercesc::DOMDocument& d,
                              const ::st434::s377m::types::UTF16CharString& x,
                              ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SettingPeriodDescription (const ::st434::s377m::types::UTF16CharString& x, 
                              const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                              ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    RightsStartDateTime (::std::ostream& os,
                         const ::st434::s377m::types::TimestampType& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    RightsStartDateTime (::std::ostream& os,
                         const ::st434::s377m::types::TimestampType& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    RightsStartDateTime (::std::ostream& os,
                         const ::st434::s377m::types::TimestampType& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    RightsStartDateTime (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::TimestampType& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    RightsStartDateTime (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::TimestampType& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    RightsStartDateTime (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s377m::types::TimestampType& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    RightsStartDateTime (::xercesc::DOMDocument& d,
                         const ::st434::s377m::types::TimestampType& x,
                         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    RightsStartDateTime (const ::st434::s377m::types::TimestampType& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    RightsStopDateTime (::std::ostream& os,
                        const ::st434::s377m::types::TimestampType& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    RightsStopDateTime (::std::ostream& os,
                        const ::st434::s377m::types::TimestampType& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    RightsStopDateTime (::std::ostream& os,
                        const ::st434::s377m::types::TimestampType& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    RightsStopDateTime (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::TimestampType& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    RightsStopDateTime (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::TimestampType& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    RightsStopDateTime (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::TimestampType& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    RightsStopDateTime (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::TimestampType& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    RightsStopDateTime (const ::st434::s377m::types::TimestampType& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    ShotDuration (::std::ostream& os,
                  const ::st434::s377m::types::Length& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    ShotDuration (::std::ostream& os,
                  const ::st434::s377m::types::Length& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    ShotDuration (::std::ostream& os,
                  const ::st434::s377m::types::Length& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    ShotDuration (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::Length& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    ShotDuration (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::Length& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    ShotDuration (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::Length& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    ShotDuration (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::Length& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    ShotDuration (const ::st434::s377m::types::Length& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Rsiz (::std::ostream& os,
          const ::st434::s377m::types::UInt16& x, 
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    void
    Rsiz (::std::ostream& os,
          const ::st434::s377m::types::UInt16& x, 
          ::xml_schema::error_handler& eh,
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    void
    Rsiz (::std::ostream& os,
          const ::st434::s377m::types::UInt16& x, 
          ::xercesc::DOMErrorHandler& eh,
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Rsiz (::xercesc::XMLFormatTarget& ft,
          const ::st434::s377m::types::UInt16& x, 
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    void
    Rsiz (::xercesc::XMLFormatTarget& ft,
          const ::st434::s377m::types::UInt16& x, 
          ::xml_schema::error_handler& eh,
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    void
    Rsiz (::xercesc::XMLFormatTarget& ft,
          const ::st434::s377m::types::UInt16& x, 
          ::xercesc::DOMErrorHandler& eh,
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Rsiz (::xercesc::DOMDocument& d,
          const ::st434::s377m::types::UInt16& x,
          ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    Rsiz (const ::st434::s377m::types::UInt16& x, 
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Xsiz (::std::ostream& os,
          const ::st434::s377m::types::UInt32& x, 
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    void
    Xsiz (::std::ostream& os,
          const ::st434::s377m::types::UInt32& x, 
          ::xml_schema::error_handler& eh,
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    void
    Xsiz (::std::ostream& os,
          const ::st434::s377m::types::UInt32& x, 
          ::xercesc::DOMErrorHandler& eh,
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Xsiz (::xercesc::XMLFormatTarget& ft,
          const ::st434::s377m::types::UInt32& x, 
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    void
    Xsiz (::xercesc::XMLFormatTarget& ft,
          const ::st434::s377m::types::UInt32& x, 
          ::xml_schema::error_handler& eh,
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    void
    Xsiz (::xercesc::XMLFormatTarget& ft,
          const ::st434::s377m::types::UInt32& x, 
          ::xercesc::DOMErrorHandler& eh,
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Xsiz (::xercesc::DOMDocument& d,
          const ::st434::s377m::types::UInt32& x,
          ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    Xsiz (const ::st434::s377m::types::UInt32& x, 
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Ysiz (::std::ostream& os,
          const ::st434::s377m::types::UInt32& x, 
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    void
    Ysiz (::std::ostream& os,
          const ::st434::s377m::types::UInt32& x, 
          ::xml_schema::error_handler& eh,
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    void
    Ysiz (::std::ostream& os,
          const ::st434::s377m::types::UInt32& x, 
          ::xercesc::DOMErrorHandler& eh,
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Ysiz (::xercesc::XMLFormatTarget& ft,
          const ::st434::s377m::types::UInt32& x, 
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    void
    Ysiz (::xercesc::XMLFormatTarget& ft,
          const ::st434::s377m::types::UInt32& x, 
          ::xml_schema::error_handler& eh,
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    void
    Ysiz (::xercesc::XMLFormatTarget& ft,
          const ::st434::s377m::types::UInt32& x, 
          ::xercesc::DOMErrorHandler& eh,
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Ysiz (::xercesc::DOMDocument& d,
          const ::st434::s377m::types::UInt32& x,
          ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    Ysiz (const ::st434::s377m::types::UInt32& x, 
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    XOsiz (::std::ostream& os,
           const ::st434::s377m::types::UInt32& x, 
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    XOsiz (::std::ostream& os,
           const ::st434::s377m::types::UInt32& x, 
           ::xml_schema::error_handler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    XOsiz (::std::ostream& os,
           const ::st434::s377m::types::UInt32& x, 
           ::xercesc::DOMErrorHandler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    XOsiz (::xercesc::XMLFormatTarget& ft,
           const ::st434::s377m::types::UInt32& x, 
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    XOsiz (::xercesc::XMLFormatTarget& ft,
           const ::st434::s377m::types::UInt32& x, 
           ::xml_schema::error_handler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    XOsiz (::xercesc::XMLFormatTarget& ft,
           const ::st434::s377m::types::UInt32& x, 
           ::xercesc::DOMErrorHandler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    XOsiz (::xercesc::DOMDocument& d,
           const ::st434::s377m::types::UInt32& x,
           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    XOsiz (const ::st434::s377m::types::UInt32& x, 
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    YOsiz (::std::ostream& os,
           const ::st434::s377m::types::UInt32& x, 
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    YOsiz (::std::ostream& os,
           const ::st434::s377m::types::UInt32& x, 
           ::xml_schema::error_handler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    YOsiz (::std::ostream& os,
           const ::st434::s377m::types::UInt32& x, 
           ::xercesc::DOMErrorHandler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    YOsiz (::xercesc::XMLFormatTarget& ft,
           const ::st434::s377m::types::UInt32& x, 
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    YOsiz (::xercesc::XMLFormatTarget& ft,
           const ::st434::s377m::types::UInt32& x, 
           ::xml_schema::error_handler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    YOsiz (::xercesc::XMLFormatTarget& ft,
           const ::st434::s377m::types::UInt32& x, 
           ::xercesc::DOMErrorHandler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    YOsiz (::xercesc::DOMDocument& d,
           const ::st434::s377m::types::UInt32& x,
           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    YOsiz (const ::st434::s377m::types::UInt32& x, 
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    XTsiz (::std::ostream& os,
           const ::st434::s377m::types::UInt32& x, 
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    XTsiz (::std::ostream& os,
           const ::st434::s377m::types::UInt32& x, 
           ::xml_schema::error_handler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    XTsiz (::std::ostream& os,
           const ::st434::s377m::types::UInt32& x, 
           ::xercesc::DOMErrorHandler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    XTsiz (::xercesc::XMLFormatTarget& ft,
           const ::st434::s377m::types::UInt32& x, 
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    XTsiz (::xercesc::XMLFormatTarget& ft,
           const ::st434::s377m::types::UInt32& x, 
           ::xml_schema::error_handler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    XTsiz (::xercesc::XMLFormatTarget& ft,
           const ::st434::s377m::types::UInt32& x, 
           ::xercesc::DOMErrorHandler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    XTsiz (::xercesc::DOMDocument& d,
           const ::st434::s377m::types::UInt32& x,
           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    XTsiz (const ::st434::s377m::types::UInt32& x, 
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    YTsiz (::std::ostream& os,
           const ::st434::s377m::types::UInt32& x, 
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    YTsiz (::std::ostream& os,
           const ::st434::s377m::types::UInt32& x, 
           ::xml_schema::error_handler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    YTsiz (::std::ostream& os,
           const ::st434::s377m::types::UInt32& x, 
           ::xercesc::DOMErrorHandler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    YTsiz (::xercesc::XMLFormatTarget& ft,
           const ::st434::s377m::types::UInt32& x, 
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    YTsiz (::xercesc::XMLFormatTarget& ft,
           const ::st434::s377m::types::UInt32& x, 
           ::xml_schema::error_handler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    void
    YTsiz (::xercesc::XMLFormatTarget& ft,
           const ::st434::s377m::types::UInt32& x, 
           ::xercesc::DOMErrorHandler& eh,
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           const ::std::string& e = "UTF-8",
           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    YTsiz (::xercesc::DOMDocument& d,
           const ::st434::s377m::types::UInt32& x,
           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    YTsiz (const ::st434::s377m::types::UInt32& x, 
           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    XTOsiz (::std::ostream& os,
            const ::st434::s377m::types::UInt32& x, 
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    void
    XTOsiz (::std::ostream& os,
            const ::st434::s377m::types::UInt32& x, 
            ::xml_schema::error_handler& eh,
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    void
    XTOsiz (::std::ostream& os,
            const ::st434::s377m::types::UInt32& x, 
            ::xercesc::DOMErrorHandler& eh,
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    XTOsiz (::xercesc::XMLFormatTarget& ft,
            const ::st434::s377m::types::UInt32& x, 
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    void
    XTOsiz (::xercesc::XMLFormatTarget& ft,
            const ::st434::s377m::types::UInt32& x, 
            ::xml_schema::error_handler& eh,
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    void
    XTOsiz (::xercesc::XMLFormatTarget& ft,
            const ::st434::s377m::types::UInt32& x, 
            ::xercesc::DOMErrorHandler& eh,
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    XTOsiz (::xercesc::DOMDocument& d,
            const ::st434::s377m::types::UInt32& x,
            ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    XTOsiz (const ::st434::s377m::types::UInt32& x, 
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    YTOsiz (::std::ostream& os,
            const ::st434::s377m::types::UInt32& x, 
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    void
    YTOsiz (::std::ostream& os,
            const ::st434::s377m::types::UInt32& x, 
            ::xml_schema::error_handler& eh,
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    void
    YTOsiz (::std::ostream& os,
            const ::st434::s377m::types::UInt32& x, 
            ::xercesc::DOMErrorHandler& eh,
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    YTOsiz (::xercesc::XMLFormatTarget& ft,
            const ::st434::s377m::types::UInt32& x, 
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    void
    YTOsiz (::xercesc::XMLFormatTarget& ft,
            const ::st434::s377m::types::UInt32& x, 
            ::xml_schema::error_handler& eh,
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    void
    YTOsiz (::xercesc::XMLFormatTarget& ft,
            const ::st434::s377m::types::UInt32& x, 
            ::xercesc::DOMErrorHandler& eh,
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            const ::std::string& e = "UTF-8",
            ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    YTOsiz (::xercesc::DOMDocument& d,
            const ::st434::s377m::types::UInt32& x,
            ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    YTOsiz (const ::st434::s377m::types::UInt32& x, 
            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
            ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    Csiz (::std::ostream& os,
          const ::st434::s377m::types::UInt16& x, 
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    void
    Csiz (::std::ostream& os,
          const ::st434::s377m::types::UInt16& x, 
          ::xml_schema::error_handler& eh,
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    void
    Csiz (::std::ostream& os,
          const ::st434::s377m::types::UInt16& x, 
          ::xercesc::DOMErrorHandler& eh,
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    Csiz (::xercesc::XMLFormatTarget& ft,
          const ::st434::s377m::types::UInt16& x, 
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    void
    Csiz (::xercesc::XMLFormatTarget& ft,
          const ::st434::s377m::types::UInt16& x, 
          ::xml_schema::error_handler& eh,
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    void
    Csiz (::xercesc::XMLFormatTarget& ft,
          const ::st434::s377m::types::UInt16& x, 
          ::xercesc::DOMErrorHandler& eh,
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          const ::std::string& e = "UTF-8",
          ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    Csiz (::xercesc::DOMDocument& d,
          const ::st434::s377m::types::UInt16& x,
          ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    Csiz (const ::st434::s377m::types::UInt16& x, 
          const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
          ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    PictureComponentSizing_ (::std::ostream& os,
                             const ::properties::S335M::PictureComponentSizing& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    PictureComponentSizing_ (::std::ostream& os,
                             const ::properties::S335M::PictureComponentSizing& x, 
                             ::xml_schema::error_handler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    PictureComponentSizing_ (::std::ostream& os,
                             const ::properties::S335M::PictureComponentSizing& x, 
                             ::xercesc::DOMErrorHandler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    PictureComponentSizing_ (::xercesc::XMLFormatTarget& ft,
                             const ::properties::S335M::PictureComponentSizing& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    PictureComponentSizing_ (::xercesc::XMLFormatTarget& ft,
                             const ::properties::S335M::PictureComponentSizing& x, 
                             ::xml_schema::error_handler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    void
    PictureComponentSizing_ (::xercesc::XMLFormatTarget& ft,
                             const ::properties::S335M::PictureComponentSizing& x, 
                             ::xercesc::DOMErrorHandler& eh,
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             const ::std::string& e = "UTF-8",
                             ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    PictureComponentSizing_ (::xercesc::DOMDocument& d,
                             const ::properties::S335M::PictureComponentSizing& x,
                             ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    PictureComponentSizing_ (const ::properties::S335M::PictureComponentSizing& x, 
                             const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                             ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    CodingStyleDefault (::std::ostream& os,
                        const ::st434::s422m::types::J2KCodingStyleDefault& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    CodingStyleDefault (::std::ostream& os,
                        const ::st434::s422m::types::J2KCodingStyleDefault& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    CodingStyleDefault (::std::ostream& os,
                        const ::st434::s422m::types::J2KCodingStyleDefault& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    CodingStyleDefault (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s422m::types::J2KCodingStyleDefault& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    CodingStyleDefault (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s422m::types::J2KCodingStyleDefault& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    CodingStyleDefault (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s422m::types::J2KCodingStyleDefault& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    CodingStyleDefault (::xercesc::DOMDocument& d,
                        const ::st434::s422m::types::J2KCodingStyleDefault& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    CodingStyleDefault (const ::st434::s422m::types::J2KCodingStyleDefault& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    QuantizationDefault (::std::ostream& os,
                         const ::st434::s422m::types::J2KQuantisationDefault& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    QuantizationDefault (::std::ostream& os,
                         const ::st434::s422m::types::J2KQuantisationDefault& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    QuantizationDefault (::std::ostream& os,
                         const ::st434::s422m::types::J2KQuantisationDefault& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    QuantizationDefault (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s422m::types::J2KQuantisationDefault& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    QuantizationDefault (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s422m::types::J2KQuantisationDefault& x, 
                         ::xml_schema::error_handler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    void
    QuantizationDefault (::xercesc::XMLFormatTarget& ft,
                         const ::st434::s422m::types::J2KQuantisationDefault& x, 
                         ::xercesc::DOMErrorHandler& eh,
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         const ::std::string& e = "UTF-8",
                         ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    QuantizationDefault (::xercesc::DOMDocument& d,
                         const ::st434::s422m::types::J2KQuantisationDefault& x,
                         ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    QuantizationDefault (const ::st434::s422m::types::J2KQuantisationDefault& x, 
                         const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                         ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    CryptographicContextObject_ (::std::ostream& os,
                                 const ::properties::S335M::CryptographicContextObject& x, 
                                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                 const ::std::string& e = "UTF-8",
                                 ::xml_schema::flags f = 0);

    void
    CryptographicContextObject_ (::std::ostream& os,
                                 const ::properties::S335M::CryptographicContextObject& x, 
                                 ::xml_schema::error_handler& eh,
                                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                 const ::std::string& e = "UTF-8",
                                 ::xml_schema::flags f = 0);

    void
    CryptographicContextObject_ (::std::ostream& os,
                                 const ::properties::S335M::CryptographicContextObject& x, 
                                 ::xercesc::DOMErrorHandler& eh,
                                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                 const ::std::string& e = "UTF-8",
                                 ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    CryptographicContextObject_ (::xercesc::XMLFormatTarget& ft,
                                 const ::properties::S335M::CryptographicContextObject& x, 
                                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                 const ::std::string& e = "UTF-8",
                                 ::xml_schema::flags f = 0);

    void
    CryptographicContextObject_ (::xercesc::XMLFormatTarget& ft,
                                 const ::properties::S335M::CryptographicContextObject& x, 
                                 ::xml_schema::error_handler& eh,
                                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                 const ::std::string& e = "UTF-8",
                                 ::xml_schema::flags f = 0);

    void
    CryptographicContextObject_ (::xercesc::XMLFormatTarget& ft,
                                 const ::properties::S335M::CryptographicContextObject& x, 
                                 ::xercesc::DOMErrorHandler& eh,
                                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                 const ::std::string& e = "UTF-8",
                                 ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    CryptographicContextObject_ (::xercesc::DOMDocument& d,
                                 const ::properties::S335M::CryptographicContextObject& x,
                                 ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    CryptographicContextObject_ (const ::properties::S335M::CryptographicContextObject& x, 
                                 const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                                 ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    CryptographicContextID (::std::ostream& os,
                            const ::st434::s377m::types::UUID& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    CryptographicContextID (::std::ostream& os,
                            const ::st434::s377m::types::UUID& x, 
                            ::xml_schema::error_handler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    CryptographicContextID (::std::ostream& os,
                            const ::st434::s377m::types::UUID& x, 
                            ::xercesc::DOMErrorHandler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    CryptographicContextID (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::UUID& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    CryptographicContextID (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::UUID& x, 
                            ::xml_schema::error_handler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    void
    CryptographicContextID (::xercesc::XMLFormatTarget& ft,
                            const ::st434::s377m::types::UUID& x, 
                            ::xercesc::DOMErrorHandler& eh,
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            const ::std::string& e = "UTF-8",
                            ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    CryptographicContextID (::xercesc::DOMDocument& d,
                            const ::st434::s377m::types::UUID& x,
                            ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    CryptographicContextID (const ::st434::s377m::types::UUID& x, 
                            const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                            ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    SourceContainerFormat (::std::ostream& os,
                           const ::st434::s377m::types::UL& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    SourceContainerFormat (::std::ostream& os,
                           const ::st434::s377m::types::UL& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    SourceContainerFormat (::std::ostream& os,
                           const ::st434::s377m::types::UL& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    SourceContainerFormat (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UL& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    SourceContainerFormat (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UL& x, 
                           ::xml_schema::error_handler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    void
    SourceContainerFormat (::xercesc::XMLFormatTarget& ft,
                           const ::st434::s377m::types::UL& x, 
                           ::xercesc::DOMErrorHandler& eh,
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           const ::std::string& e = "UTF-8",
                           ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    SourceContainerFormat (::xercesc::DOMDocument& d,
                           const ::st434::s377m::types::UL& x,
                           ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    SourceContainerFormat (const ::st434::s377m::types::UL& x, 
                           const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                           ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    CipherAlgorithm (::std::ostream& os,
                     const ::st434::s377m::types::UL& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    CipherAlgorithm (::std::ostream& os,
                     const ::st434::s377m::types::UL& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    CipherAlgorithm (::std::ostream& os,
                     const ::st434::s377m::types::UL& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    CipherAlgorithm (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UL& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    CipherAlgorithm (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UL& x, 
                     ::xml_schema::error_handler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    void
    CipherAlgorithm (::xercesc::XMLFormatTarget& ft,
                     const ::st434::s377m::types::UL& x, 
                     ::xercesc::DOMErrorHandler& eh,
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     const ::std::string& e = "UTF-8",
                     ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    CipherAlgorithm (::xercesc::DOMDocument& d,
                     const ::st434::s377m::types::UL& x,
                     ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    CipherAlgorithm (const ::st434::s377m::types::UL& x, 
                     const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                     ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    MICAlgorithm (::std::ostream& os,
                  const ::st434::s377m::types::UL& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    MICAlgorithm (::std::ostream& os,
                  const ::st434::s377m::types::UL& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    MICAlgorithm (::std::ostream& os,
                  const ::st434::s377m::types::UL& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    MICAlgorithm (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UL& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    MICAlgorithm (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UL& x, 
                  ::xml_schema::error_handler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    void
    MICAlgorithm (::xercesc::XMLFormatTarget& ft,
                  const ::st434::s377m::types::UL& x, 
                  ::xercesc::DOMErrorHandler& eh,
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  const ::std::string& e = "UTF-8",
                  ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    MICAlgorithm (::xercesc::DOMDocument& d,
                  const ::st434::s377m::types::UL& x,
                  ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    MICAlgorithm (const ::st434::s377m::types::UL& x, 
                  const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                  ::xml_schema::flags f = 0);

    // Serialize to std::ostream.
    //

    void
    CryptographicKeyID (::std::ostream& os,
                        const ::st434::s377m::types::UUID& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    CryptographicKeyID (::std::ostream& os,
                        const ::st434::s377m::types::UUID& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    CryptographicKeyID (::std::ostream& os,
                        const ::st434::s377m::types::UUID& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to xercesc::XMLFormatTarget.
    //

    void
    CryptographicKeyID (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UUID& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    CryptographicKeyID (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UUID& x, 
                        ::xml_schema::error_handler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    void
    CryptographicKeyID (::xercesc::XMLFormatTarget& ft,
                        const ::st434::s377m::types::UUID& x, 
                        ::xercesc::DOMErrorHandler& eh,
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        const ::std::string& e = "UTF-8",
                        ::xml_schema::flags f = 0);

    // Serialize to an existing xercesc::DOMDocument.
    //

    void
    CryptographicKeyID (::xercesc::DOMDocument& d,
                        const ::st434::s377m::types::UUID& x,
                        ::xml_schema::flags f = 0);

    // Serialize to a new xercesc::DOMDocument.
    //

    ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >
    CryptographicKeyID (const ::st434::s377m::types::UUID& x, 
                        const ::xml_schema::namespace_infomap& m = ::xml_schema::namespace_infomap (),
                        ::xml_schema::flags f = 0);

    void
    operator<< (::xercesc::DOMElement&, const EssenceContainers&);

    void
    operator<< (::xercesc::DOMElement&, const DescriptiveSchemes&);

    void
    operator<< (::xercesc::DOMElement&, const DescriptiveClipDescribedTrackIDs&);

    void
    operator<< (::xercesc::DOMElement&, const DescribedTrackIDs&);

    void
    operator<< (::xercesc::DOMElement&, const ShotTrackIDs&);

    void
    operator<< (::xercesc::DOMElement&, const VideoLineMap&);

    void
    operator<< (::xercesc::DOMElement&, const ElectrospatialFormulation&);

    void
    operator<< (::xercesc::DOMAttr&, const ElectrospatialFormulation&);

    void
    operator<< (::xml_schema::list_stream&,
                const ElectrospatialFormulation&);

    void
    operator<< (::xercesc::DOMElement&, const ChannelStatusMode&);

    void
    operator<< (::xercesc::DOMElement&, const FixedChannelStatusData&);

    void
    operator<< (::xercesc::DOMElement&, const UserDataMode&);

    void
    operator<< (::xercesc::DOMElement&, const FixedUserData&);

    void
    operator<< (::xercesc::DOMElement&, const SliceOffset&);

    void
    operator<< (::xercesc::DOMElement&, const PositionTable&);

    void
    operator<< (::xercesc::DOMElement&, const DeltaEntryArray&);

    void
    operator<< (::xercesc::DOMElement&, const IndexEntryArray&);

    void
    operator<< (::xercesc::DOMElement&, const DescriptiveFrameworkObject&);

    void
    operator<< (::xercesc::DOMElement&, const EssenceDataObjects&);

    void
    operator<< (::xercesc::DOMElement&, const Packages&);

    void
    operator<< (::xercesc::DOMElement&, const PrimaryPackage&);

    void
    operator<< (::xercesc::DOMElement&, const PackageTracks&);

    void
    operator<< (::xercesc::DOMElement&, const ComponentObjects&);

    void
    operator<< (::xercesc::DOMElement&, const TrackSegment&);

    void
    operator<< (::xercesc::DOMElement&, const ContentStorageObject&);

    void
    operator<< (::xercesc::DOMElement&, const EssenceDescription&);

    void
    operator<< (::xercesc::DOMElement&, const Locators&);

    void
    operator<< (::xercesc::DOMElement&, const IdentificationList&);

    void
    operator<< (::xercesc::DOMElement&, const FileDescriptors&);

    void
    operator<< (::xercesc::DOMElement&, const UnknownBWFChunks&);

    void
    operator<< (::xercesc::DOMElement&, const PictureFormatObject&);

    void
    operator<< (::xercesc::DOMElement&, const ProjectObject&);

    void
    operator<< (::xercesc::DOMElement&, const GroupRelationshipObjects&);

    void
    operator<< (::xercesc::DOMElement&, const ProcessingObject&);

    void
    operator<< (::xercesc::DOMElement&, const ContactsListObject&);

    void
    operator<< (::xercesc::DOMElement&, const AnnotationCueWordsObject&);

    void
    operator<< (::xercesc::DOMElement&, const ShotCueWordsObject&);

    void
    operator<< (::xercesc::DOMElement&, const AwardParticipants&);

    void
    operator<< (::xercesc::DOMElement&, const ContractParticipants&);

    void
    operator<< (::xercesc::DOMElement&, const Persons&);

    void
    operator<< (::xercesc::DOMElement&, const ParticipantOrganizations&);

    void
    operator<< (::xercesc::DOMElement&, const AddressNameValueObjects&);

    void
    operator<< (::xercesc::DOMElement&, const PersonOrganizations&);

    void
    operator<< (::xercesc::DOMElement&, const Locations&);

    void
    operator<< (::xercesc::DOMElement&, const TitlesObjects&);

    void
    operator<< (::xercesc::DOMElement&, const IdentificationObjects&);

    void
    operator<< (::xercesc::DOMElement&, const BrandingObjects&);

    void
    operator<< (::xercesc::DOMElement&, const EventObjects&);

    void
    operator<< (::xercesc::DOMElement&, const EventAnnotationObjects&);

    void
    operator<< (::xercesc::DOMElement&, const AnnotationParticipants&);

    void
    operator<< (::xercesc::DOMElement&, const ScriptingLocators&);

    void
    operator<< (::xercesc::DOMElement&, const PublicationObjects&);

    void
    operator<< (::xercesc::DOMElement&, const AwardObjects&);

    void
    operator<< (::xercesc::DOMElement&, const CaptionsDescriptionObjects&);

    void
    operator<< (::xercesc::DOMElement&, const AnnotationObjects&);

    void
    operator<< (::xercesc::DOMElement&, const ProductionSettingPeriodObjects&);

    void
    operator<< (::xercesc::DOMElement&, const SceneSettingPeriodObjects&);

    void
    operator<< (::xercesc::DOMElement&, const ScriptingObjects&);

    void
    operator<< (::xercesc::DOMElement&, const ClassificationObjects&);

    void
    operator<< (::xercesc::DOMElement&, const SceneShotObjects&);

    void
    operator<< (::xercesc::DOMElement&, const ClipShotObjects&);

    void
    operator<< (::xercesc::DOMElement&, const KeypointObjects&);

    void
    operator<< (::xercesc::DOMElement&, const ParticipantObjects&);

    void
    operator<< (::xercesc::DOMElement&, const PersonObjects&);

    void
    operator<< (::xercesc::DOMElement&, const OrganizationObjects&);

    void
    operator<< (::xercesc::DOMElement&, const LocationObjects&);

    void
    operator<< (::xercesc::DOMElement&, const AddressObjects&);

    void
    operator<< (::xercesc::DOMElement&, const CommunicationsObjects&);

    void
    operator<< (::xercesc::DOMElement&, const ContractObjects&);

    void
    operator<< (::xercesc::DOMElement&, const RightsObjects&);

    void
    operator<< (::xercesc::DOMElement&, const DeviceParametersObjects&);

    void
    operator<< (::xercesc::DOMElement&, const ClassificationNameValueObjects&);

    void
    operator<< (::xercesc::DOMElement&, const ContactNameValueObjects&);

    void
    operator<< (::xercesc::DOMElement&, const DeviceParametersNameValueObjects&);

    void
    operator<< (::xercesc::DOMElement&, const MetadataServerLocators&);

    void
    operator<< (::xercesc::DOMElement&, const RelatedMaterialLocators&);

    void
    operator<< (::xercesc::DOMElement&, const ChannelIDs&);

    void
    operator<< (::xercesc::DOMElement&, const MonoSourceTrackIDs&);

    void
    operator<< (::xercesc::DOMElement&, const SubDescriptors&);

    void
    operator<< (::xercesc::DOMElement&, const PictureComponentSizing&);

    void
    operator<< (::xercesc::DOMElement&, const CryptographicContextObject&);
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

#endif // DICTIONARY_RP210_HXX
